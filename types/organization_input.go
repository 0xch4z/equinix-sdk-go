// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrganizationInput organization input
//
// swagger:model OrganizationInput
type OrganizationInput struct {

	// address
	Address *Address `json:"address,omitempty"`

	// billing address
	BillingAddress *Address `json:"billing_address,omitempty"`

	// customdata
	Customdata interface{} `json:"customdata,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// Force to all members to have enabled the two factor authentication after that date, unless the value is null
	// Format: date-time
	Enforce2faAt strfmt.DateTime `json:"enforce_2fa_at,omitempty"`

	// logo
	// Format: binary
	Logo io.ReadCloser `json:"logo,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// twitter
	Twitter string `json:"twitter,omitempty"`

	// website
	Website string `json:"website,omitempty"`
}

// Validate validates this organization input
func (m *OrganizationInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBillingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnforce2faAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrganizationInput) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if m.Address != nil {
		if err := m.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("address")
			}
			return err
		}
	}

	return nil
}

func (m *OrganizationInput) validateBillingAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddress) { // not required
		return nil
	}

	if m.BillingAddress != nil {
		if err := m.BillingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("billing_address")
			}
			return err
		}
	}

	return nil
}

func (m *OrganizationInput) validateEnforce2faAt(formats strfmt.Registry) error {

	if swag.IsZero(m.Enforce2faAt) { // not required
		return nil
	}

	if err := validate.FormatOf("enforce_2fa_at", "body", "date-time", m.Enforce2faAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OrganizationInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrganizationInput) UnmarshalBinary(b []byte) error {
	var res OrganizationInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
