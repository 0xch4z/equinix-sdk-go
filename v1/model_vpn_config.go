/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// VPNConfig struct for VPNConfig
type VPNConfig struct {
	Config *string `json:"config,omitempty"`
}

// NewVPNConfig instantiates a new VPNConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVPNConfig() *VPNConfig {
	this := VPNConfig{}
	return &this
}

// NewVPNConfigWithDefaults instantiates a new VPNConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVPNConfigWithDefaults() *VPNConfig {
	this := VPNConfig{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *VPNConfig) GetConfig() string {
	if o == nil || o.Config == nil {
		var ret string
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VPNConfig) GetConfigOk() (*string, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *VPNConfig) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given string and assigns it to the Config field.
func (o *VPNConfig) SetConfig(v string) {
	o.Config = &v
}

func (o VPNConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableVPNConfig struct {
	value *VPNConfig
	isSet bool
}

func (v NullableVPNConfig) Get() *VPNConfig {
	return v.value
}

func (v *NullableVPNConfig) Set(val *VPNConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVPNConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVPNConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVPNConfig(val *VPNConfig) *NullableVPNConfig {
	return &NullableVPNConfig{value: val, isSet: true}
}

func (v NullableVPNConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVPNConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


