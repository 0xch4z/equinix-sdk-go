/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// IPAssignment struct for IPAssignment
type IPAssignment struct {
	Id *string `json:"id,omitempty"`
	AddressFamily *int32 `json:"address_family,omitempty"`
	Netmask *string `json:"netmask,omitempty"`
	Public *bool `json:"public,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Cidr *int32 `json:"cidr,omitempty"`
	Management *bool `json:"management,omitempty"`
	Manageable *bool `json:"manageable,omitempty"`
	AssignedTo *Href `json:"assigned_to,omitempty"`
	Network *string `json:"network,omitempty"`
	Address *string `json:"address,omitempty"`
	Gateway *string `json:"gateway,omitempty"`
	Href *string `json:"href,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Metro *Metro `json:"metro,omitempty"`
	ParentBlock *ParentBlock `json:"parent_block,omitempty"`
}

// NewIPAssignment instantiates a new IPAssignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPAssignment() *IPAssignment {
	this := IPAssignment{}
	return &this
}

// NewIPAssignmentWithDefaults instantiates a new IPAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPAssignmentWithDefaults() *IPAssignment {
	this := IPAssignment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IPAssignment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IPAssignment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IPAssignment) SetId(v string) {
	o.Id = &v
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *IPAssignment) GetAddressFamily() int32 {
	if o == nil || o.AddressFamily == nil {
		var ret int32
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetAddressFamilyOk() (*int32, bool) {
	if o == nil || o.AddressFamily == nil {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *IPAssignment) HasAddressFamily() bool {
	if o != nil && o.AddressFamily != nil {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given int32 and assigns it to the AddressFamily field.
func (o *IPAssignment) SetAddressFamily(v int32) {
	o.AddressFamily = &v
}

// GetNetmask returns the Netmask field value if set, zero value otherwise.
func (o *IPAssignment) GetNetmask() string {
	if o == nil || o.Netmask == nil {
		var ret string
		return ret
	}
	return *o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetNetmaskOk() (*string, bool) {
	if o == nil || o.Netmask == nil {
		return nil, false
	}
	return o.Netmask, true
}

// HasNetmask returns a boolean if a field has been set.
func (o *IPAssignment) HasNetmask() bool {
	if o != nil && o.Netmask != nil {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given string and assigns it to the Netmask field.
func (o *IPAssignment) SetNetmask(v string) {
	o.Netmask = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *IPAssignment) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *IPAssignment) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *IPAssignment) SetPublic(v bool) {
	o.Public = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *IPAssignment) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *IPAssignment) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *IPAssignment) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *IPAssignment) GetCidr() int32 {
	if o == nil || o.Cidr == nil {
		var ret int32
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetCidrOk() (*int32, bool) {
	if o == nil || o.Cidr == nil {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *IPAssignment) HasCidr() bool {
	if o != nil && o.Cidr != nil {
		return true
	}

	return false
}

// SetCidr gets a reference to the given int32 and assigns it to the Cidr field.
func (o *IPAssignment) SetCidr(v int32) {
	o.Cidr = &v
}

// GetManagement returns the Management field value if set, zero value otherwise.
func (o *IPAssignment) GetManagement() bool {
	if o == nil || o.Management == nil {
		var ret bool
		return ret
	}
	return *o.Management
}

// GetManagementOk returns a tuple with the Management field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetManagementOk() (*bool, bool) {
	if o == nil || o.Management == nil {
		return nil, false
	}
	return o.Management, true
}

// HasManagement returns a boolean if a field has been set.
func (o *IPAssignment) HasManagement() bool {
	if o != nil && o.Management != nil {
		return true
	}

	return false
}

// SetManagement gets a reference to the given bool and assigns it to the Management field.
func (o *IPAssignment) SetManagement(v bool) {
	o.Management = &v
}

// GetManageable returns the Manageable field value if set, zero value otherwise.
func (o *IPAssignment) GetManageable() bool {
	if o == nil || o.Manageable == nil {
		var ret bool
		return ret
	}
	return *o.Manageable
}

// GetManageableOk returns a tuple with the Manageable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetManageableOk() (*bool, bool) {
	if o == nil || o.Manageable == nil {
		return nil, false
	}
	return o.Manageable, true
}

// HasManageable returns a boolean if a field has been set.
func (o *IPAssignment) HasManageable() bool {
	if o != nil && o.Manageable != nil {
		return true
	}

	return false
}

// SetManageable gets a reference to the given bool and assigns it to the Manageable field.
func (o *IPAssignment) SetManageable(v bool) {
	o.Manageable = &v
}

// GetAssignedTo returns the AssignedTo field value if set, zero value otherwise.
func (o *IPAssignment) GetAssignedTo() Href {
	if o == nil || o.AssignedTo == nil {
		var ret Href
		return ret
	}
	return *o.AssignedTo
}

// GetAssignedToOk returns a tuple with the AssignedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetAssignedToOk() (*Href, bool) {
	if o == nil || o.AssignedTo == nil {
		return nil, false
	}
	return o.AssignedTo, true
}

// HasAssignedTo returns a boolean if a field has been set.
func (o *IPAssignment) HasAssignedTo() bool {
	if o != nil && o.AssignedTo != nil {
		return true
	}

	return false
}

// SetAssignedTo gets a reference to the given Href and assigns it to the AssignedTo field.
func (o *IPAssignment) SetAssignedTo(v Href) {
	o.AssignedTo = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *IPAssignment) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *IPAssignment) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *IPAssignment) SetNetwork(v string) {
	o.Network = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *IPAssignment) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *IPAssignment) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *IPAssignment) SetAddress(v string) {
	o.Address = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *IPAssignment) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *IPAssignment) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *IPAssignment) SetGateway(v string) {
	o.Gateway = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *IPAssignment) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *IPAssignment) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *IPAssignment) SetHref(v string) {
	o.Href = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IPAssignment) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IPAssignment) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *IPAssignment) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *IPAssignment) GetMetro() Metro {
	if o == nil || o.Metro == nil {
		var ret Metro
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetMetroOk() (*Metro, bool) {
	if o == nil || o.Metro == nil {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *IPAssignment) HasMetro() bool {
	if o != nil && o.Metro != nil {
		return true
	}

	return false
}

// SetMetro gets a reference to the given Metro and assigns it to the Metro field.
func (o *IPAssignment) SetMetro(v Metro) {
	o.Metro = &v
}

// GetParentBlock returns the ParentBlock field value if set, zero value otherwise.
func (o *IPAssignment) GetParentBlock() ParentBlock {
	if o == nil || o.ParentBlock == nil {
		var ret ParentBlock
		return ret
	}
	return *o.ParentBlock
}

// GetParentBlockOk returns a tuple with the ParentBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignment) GetParentBlockOk() (*ParentBlock, bool) {
	if o == nil || o.ParentBlock == nil {
		return nil, false
	}
	return o.ParentBlock, true
}

// HasParentBlock returns a boolean if a field has been set.
func (o *IPAssignment) HasParentBlock() bool {
	if o != nil && o.ParentBlock != nil {
		return true
	}

	return false
}

// SetParentBlock gets a reference to the given ParentBlock and assigns it to the ParentBlock field.
func (o *IPAssignment) SetParentBlock(v ParentBlock) {
	o.ParentBlock = &v
}

func (o IPAssignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AddressFamily != nil {
		toSerialize["address_family"] = o.AddressFamily
	}
	if o.Netmask != nil {
		toSerialize["netmask"] = o.Netmask
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Cidr != nil {
		toSerialize["cidr"] = o.Cidr
	}
	if o.Management != nil {
		toSerialize["management"] = o.Management
	}
	if o.Manageable != nil {
		toSerialize["manageable"] = o.Manageable
	}
	if o.AssignedTo != nil {
		toSerialize["assigned_to"] = o.AssignedTo
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Metro != nil {
		toSerialize["metro"] = o.Metro
	}
	if o.ParentBlock != nil {
		toSerialize["parent_block"] = o.ParentBlock
	}
	return json.Marshal(toSerialize)
}

type NullableIPAssignment struct {
	value *IPAssignment
	isSet bool
}

func (v NullableIPAssignment) Get() *IPAssignment {
	return v.value
}

func (v *NullableIPAssignment) Set(val *IPAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableIPAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableIPAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPAssignment(val *IPAssignment) *NullableIPAssignment {
	return &NullableIPAssignment{value: val, isSet: true}
}

func (v NullableIPAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


