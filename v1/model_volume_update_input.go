/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// VolumeUpdateInput struct for VolumeUpdateInput
type VolumeUpdateInput struct {
	Description *string `json:"description,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	// hourly
	BillingCycle *string `json:"billing_cycle,omitempty"`
	Customdata *map[string]interface{} `json:"customdata,omitempty"`
}

// NewVolumeUpdateInput instantiates a new VolumeUpdateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeUpdateInput() *VolumeUpdateInput {
	this := VolumeUpdateInput{}
	return &this
}

// NewVolumeUpdateInputWithDefaults instantiates a new VolumeUpdateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeUpdateInputWithDefaults() *VolumeUpdateInput {
	this := VolumeUpdateInput{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VolumeUpdateInput) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateInput) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VolumeUpdateInput) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VolumeUpdateInput) SetDescription(v string) {
	o.Description = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VolumeUpdateInput) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateInput) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VolumeUpdateInput) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *VolumeUpdateInput) SetSize(v int32) {
	o.Size = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *VolumeUpdateInput) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateInput) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *VolumeUpdateInput) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *VolumeUpdateInput) SetLocked(v bool) {
	o.Locked = &v
}

// GetBillingCycle returns the BillingCycle field value if set, zero value otherwise.
func (o *VolumeUpdateInput) GetBillingCycle() string {
	if o == nil || o.BillingCycle == nil {
		var ret string
		return ret
	}
	return *o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateInput) GetBillingCycleOk() (*string, bool) {
	if o == nil || o.BillingCycle == nil {
		return nil, false
	}
	return o.BillingCycle, true
}

// HasBillingCycle returns a boolean if a field has been set.
func (o *VolumeUpdateInput) HasBillingCycle() bool {
	if o != nil && o.BillingCycle != nil {
		return true
	}

	return false
}

// SetBillingCycle gets a reference to the given string and assigns it to the BillingCycle field.
func (o *VolumeUpdateInput) SetBillingCycle(v string) {
	o.BillingCycle = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *VolumeUpdateInput) GetCustomdata() map[string]interface{} {
	if o == nil || o.Customdata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateInput) GetCustomdataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Customdata == nil {
		return nil, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *VolumeUpdateInput) HasCustomdata() bool {
	if o != nil && o.Customdata != nil {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given map[string]interface{} and assigns it to the Customdata field.
func (o *VolumeUpdateInput) SetCustomdata(v map[string]interface{}) {
	o.Customdata = &v
}

func (o VolumeUpdateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.BillingCycle != nil {
		toSerialize["billing_cycle"] = o.BillingCycle
	}
	if o.Customdata != nil {
		toSerialize["customdata"] = o.Customdata
	}
	return json.Marshal(toSerialize)
}

type NullableVolumeUpdateInput struct {
	value *VolumeUpdateInput
	isSet bool
}

func (v NullableVolumeUpdateInput) Get() *VolumeUpdateInput {
	return v.value
}

func (v *NullableVolumeUpdateInput) Set(val *VolumeUpdateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeUpdateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeUpdateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeUpdateInput(val *VolumeUpdateInput) *NullableVolumeUpdateInput {
	return &NullableVolumeUpdateInput{value: val, isSet: true}
}

func (v NullableVolumeUpdateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeUpdateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


