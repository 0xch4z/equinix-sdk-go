/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CapacityCheckPerFacilityInfo struct for CapacityCheckPerFacilityInfo
type CapacityCheckPerFacilityInfo struct {
	Facility *string `json:"facility,omitempty"`
	Plan *string `json:"plan,omitempty"`
	Quantity *string `json:"quantity,omitempty"`
	Available *bool `json:"available,omitempty"`
}

// NewCapacityCheckPerFacilityInfo instantiates a new CapacityCheckPerFacilityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityCheckPerFacilityInfo() *CapacityCheckPerFacilityInfo {
	this := CapacityCheckPerFacilityInfo{}
	return &this
}

// NewCapacityCheckPerFacilityInfoWithDefaults instantiates a new CapacityCheckPerFacilityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityCheckPerFacilityInfoWithDefaults() *CapacityCheckPerFacilityInfo {
	this := CapacityCheckPerFacilityInfo{}
	return &this
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *CapacityCheckPerFacilityInfo) GetFacility() string {
	if o == nil || o.Facility == nil {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityCheckPerFacilityInfo) GetFacilityOk() (*string, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *CapacityCheckPerFacilityInfo) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *CapacityCheckPerFacilityInfo) SetFacility(v string) {
	o.Facility = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *CapacityCheckPerFacilityInfo) GetPlan() string {
	if o == nil || o.Plan == nil {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityCheckPerFacilityInfo) GetPlanOk() (*string, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *CapacityCheckPerFacilityInfo) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *CapacityCheckPerFacilityInfo) SetPlan(v string) {
	o.Plan = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CapacityCheckPerFacilityInfo) GetQuantity() string {
	if o == nil || o.Quantity == nil {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityCheckPerFacilityInfo) GetQuantityOk() (*string, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CapacityCheckPerFacilityInfo) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *CapacityCheckPerFacilityInfo) SetQuantity(v string) {
	o.Quantity = &v
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *CapacityCheckPerFacilityInfo) GetAvailable() bool {
	if o == nil || o.Available == nil {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityCheckPerFacilityInfo) GetAvailableOk() (*bool, bool) {
	if o == nil || o.Available == nil {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *CapacityCheckPerFacilityInfo) HasAvailable() bool {
	if o != nil && o.Available != nil {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *CapacityCheckPerFacilityInfo) SetAvailable(v bool) {
	o.Available = &v
}

func (o CapacityCheckPerFacilityInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.Available != nil {
		toSerialize["available"] = o.Available
	}
	return json.Marshal(toSerialize)
}

type NullableCapacityCheckPerFacilityInfo struct {
	value *CapacityCheckPerFacilityInfo
	isSet bool
}

func (v NullableCapacityCheckPerFacilityInfo) Get() *CapacityCheckPerFacilityInfo {
	return v.value
}

func (v *NullableCapacityCheckPerFacilityInfo) Set(val *CapacityCheckPerFacilityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityCheckPerFacilityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityCheckPerFacilityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityCheckPerFacilityInfo(val *CapacityCheckPerFacilityInfo) *NullableCapacityCheckPerFacilityInfo {
	return &NullableCapacityCheckPerFacilityInfo{value: val, isSet: true}
}

func (v NullableCapacityCheckPerFacilityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityCheckPerFacilityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


