/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CapacityPerBaremetal struct for CapacityPerBaremetal
type CapacityPerBaremetal struct {
	Level *string `json:"level,omitempty"`
	AvailableServers *int32 `json:"available_servers,omitempty"`
	TotalServers *int32 `json:"total_servers,omitempty"`
	MarketBufferPercentage *int32 `json:"market_buffer_percentage,omitempty"`
	MarketFloorPrice *float32 `json:"market_floor_price,omitempty"`
}

// NewCapacityPerBaremetal instantiates a new CapacityPerBaremetal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityPerBaremetal() *CapacityPerBaremetal {
	this := CapacityPerBaremetal{}
	return &this
}

// NewCapacityPerBaremetalWithDefaults instantiates a new CapacityPerBaremetal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityPerBaremetalWithDefaults() *CapacityPerBaremetal {
	this := CapacityPerBaremetal{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *CapacityPerBaremetal) GetLevel() string {
	if o == nil || o.Level == nil {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityPerBaremetal) GetLevelOk() (*string, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *CapacityPerBaremetal) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *CapacityPerBaremetal) SetLevel(v string) {
	o.Level = &v
}

// GetAvailableServers returns the AvailableServers field value if set, zero value otherwise.
func (o *CapacityPerBaremetal) GetAvailableServers() int32 {
	if o == nil || o.AvailableServers == nil {
		var ret int32
		return ret
	}
	return *o.AvailableServers
}

// GetAvailableServersOk returns a tuple with the AvailableServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityPerBaremetal) GetAvailableServersOk() (*int32, bool) {
	if o == nil || o.AvailableServers == nil {
		return nil, false
	}
	return o.AvailableServers, true
}

// HasAvailableServers returns a boolean if a field has been set.
func (o *CapacityPerBaremetal) HasAvailableServers() bool {
	if o != nil && o.AvailableServers != nil {
		return true
	}

	return false
}

// SetAvailableServers gets a reference to the given int32 and assigns it to the AvailableServers field.
func (o *CapacityPerBaremetal) SetAvailableServers(v int32) {
	o.AvailableServers = &v
}

// GetTotalServers returns the TotalServers field value if set, zero value otherwise.
func (o *CapacityPerBaremetal) GetTotalServers() int32 {
	if o == nil || o.TotalServers == nil {
		var ret int32
		return ret
	}
	return *o.TotalServers
}

// GetTotalServersOk returns a tuple with the TotalServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityPerBaremetal) GetTotalServersOk() (*int32, bool) {
	if o == nil || o.TotalServers == nil {
		return nil, false
	}
	return o.TotalServers, true
}

// HasTotalServers returns a boolean if a field has been set.
func (o *CapacityPerBaremetal) HasTotalServers() bool {
	if o != nil && o.TotalServers != nil {
		return true
	}

	return false
}

// SetTotalServers gets a reference to the given int32 and assigns it to the TotalServers field.
func (o *CapacityPerBaremetal) SetTotalServers(v int32) {
	o.TotalServers = &v
}

// GetMarketBufferPercentage returns the MarketBufferPercentage field value if set, zero value otherwise.
func (o *CapacityPerBaremetal) GetMarketBufferPercentage() int32 {
	if o == nil || o.MarketBufferPercentage == nil {
		var ret int32
		return ret
	}
	return *o.MarketBufferPercentage
}

// GetMarketBufferPercentageOk returns a tuple with the MarketBufferPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityPerBaremetal) GetMarketBufferPercentageOk() (*int32, bool) {
	if o == nil || o.MarketBufferPercentage == nil {
		return nil, false
	}
	return o.MarketBufferPercentage, true
}

// HasMarketBufferPercentage returns a boolean if a field has been set.
func (o *CapacityPerBaremetal) HasMarketBufferPercentage() bool {
	if o != nil && o.MarketBufferPercentage != nil {
		return true
	}

	return false
}

// SetMarketBufferPercentage gets a reference to the given int32 and assigns it to the MarketBufferPercentage field.
func (o *CapacityPerBaremetal) SetMarketBufferPercentage(v int32) {
	o.MarketBufferPercentage = &v
}

// GetMarketFloorPrice returns the MarketFloorPrice field value if set, zero value otherwise.
func (o *CapacityPerBaremetal) GetMarketFloorPrice() float32 {
	if o == nil || o.MarketFloorPrice == nil {
		var ret float32
		return ret
	}
	return *o.MarketFloorPrice
}

// GetMarketFloorPriceOk returns a tuple with the MarketFloorPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityPerBaremetal) GetMarketFloorPriceOk() (*float32, bool) {
	if o == nil || o.MarketFloorPrice == nil {
		return nil, false
	}
	return o.MarketFloorPrice, true
}

// HasMarketFloorPrice returns a boolean if a field has been set.
func (o *CapacityPerBaremetal) HasMarketFloorPrice() bool {
	if o != nil && o.MarketFloorPrice != nil {
		return true
	}

	return false
}

// SetMarketFloorPrice gets a reference to the given float32 and assigns it to the MarketFloorPrice field.
func (o *CapacityPerBaremetal) SetMarketFloorPrice(v float32) {
	o.MarketFloorPrice = &v
}

func (o CapacityPerBaremetal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.AvailableServers != nil {
		toSerialize["available_servers"] = o.AvailableServers
	}
	if o.TotalServers != nil {
		toSerialize["total_servers"] = o.TotalServers
	}
	if o.MarketBufferPercentage != nil {
		toSerialize["market_buffer_percentage"] = o.MarketBufferPercentage
	}
	if o.MarketFloorPrice != nil {
		toSerialize["market_floor_price"] = o.MarketFloorPrice
	}
	return json.Marshal(toSerialize)
}

type NullableCapacityPerBaremetal struct {
	value *CapacityPerBaremetal
	isSet bool
}

func (v NullableCapacityPerBaremetal) Get() *CapacityPerBaremetal {
	return v.value
}

func (v *NullableCapacityPerBaremetal) Set(val *CapacityPerBaremetal) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityPerBaremetal) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityPerBaremetal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityPerBaremetal(val *CapacityPerBaremetal) *NullableCapacityPerBaremetal {
	return &NullableCapacityPerBaremetal{value: val, isSet: true}
}

func (v NullableCapacityPerBaremetal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityPerBaremetal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


