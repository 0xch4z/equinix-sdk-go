/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// EntitlementList struct for EntitlementList
type EntitlementList struct {
	Entitlements *[]Entitlement `json:"entitlements,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
}

// NewEntitlementList instantiates a new EntitlementList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementList() *EntitlementList {
	this := EntitlementList{}
	return &this
}

// NewEntitlementListWithDefaults instantiates a new EntitlementList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementListWithDefaults() *EntitlementList {
	this := EntitlementList{}
	return &this
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *EntitlementList) GetEntitlements() []Entitlement {
	if o == nil || o.Entitlements == nil {
		var ret []Entitlement
		return ret
	}
	return *o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementList) GetEntitlementsOk() (*[]Entitlement, bool) {
	if o == nil || o.Entitlements == nil {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *EntitlementList) HasEntitlements() bool {
	if o != nil && o.Entitlements != nil {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given []Entitlement and assigns it to the Entitlements field.
func (o *EntitlementList) SetEntitlements(v []Entitlement) {
	o.Entitlements = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *EntitlementList) GetMeta() Meta {
	if o == nil || o.Meta == nil {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementList) GetMetaOk() (*Meta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *EntitlementList) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *EntitlementList) SetMeta(v Meta) {
	o.Meta = &v
}

func (o EntitlementList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entitlements != nil {
		toSerialize["entitlements"] = o.Entitlements
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableEntitlementList struct {
	value *EntitlementList
	isSet bool
}

func (v NullableEntitlementList) Get() *EntitlementList {
	return v.value
}

func (v *NullableEntitlementList) Set(val *EntitlementList) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementList) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementList(val *EntitlementList) *NullableEntitlementList {
	return &NullableEntitlementList{value: val, isSet: true}
}

func (v NullableEntitlementList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


