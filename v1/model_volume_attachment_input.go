/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// VolumeAttachmentInput struct for VolumeAttachmentInput
type VolumeAttachmentInput struct {
	DeviceId string `json:"device_id"`
}

// NewVolumeAttachmentInput instantiates a new VolumeAttachmentInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeAttachmentInput(deviceId string) *VolumeAttachmentInput {
	this := VolumeAttachmentInput{}
	this.DeviceId = deviceId
	return &this
}

// NewVolumeAttachmentInputWithDefaults instantiates a new VolumeAttachmentInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeAttachmentInputWithDefaults() *VolumeAttachmentInput {
	this := VolumeAttachmentInput{}
	return &this
}

// GetDeviceId returns the DeviceId field value
func (o *VolumeAttachmentInput) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *VolumeAttachmentInput) GetDeviceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *VolumeAttachmentInput) SetDeviceId(v string) {
	o.DeviceId = v
}

func (o VolumeAttachmentInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["device_id"] = o.DeviceId
	}
	return json.Marshal(toSerialize)
}

type NullableVolumeAttachmentInput struct {
	value *VolumeAttachmentInput
	isSet bool
}

func (v NullableVolumeAttachmentInput) Get() *VolumeAttachmentInput {
	return v.value
}

func (v *NullableVolumeAttachmentInput) Set(val *VolumeAttachmentInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeAttachmentInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeAttachmentInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeAttachmentInput(val *VolumeAttachmentInput) *NullableVolumeAttachmentInput {
	return &NullableVolumeAttachmentInput{value: val, isSet: true}
}

func (v NullableVolumeAttachmentInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeAttachmentInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


