/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// SpotPricesReport struct for SpotPricesReport
type SpotPricesReport struct {
	Ams1 *SpotPricesPerFacility `json:"ams1,omitempty"`
	Atl1 *SpotPricesPerNewFacility `json:"atl1,omitempty"`
	Dfw1 *SpotPricesPerNewFacility `json:"dfw1,omitempty"`
	Ewr1 *SpotPricesPerFacility `json:"ewr1,omitempty"`
	Fra1 *SpotPricesPerNewFacility `json:"fra1,omitempty"`
	Iad1 *SpotPricesPerNewFacility `json:"iad1,omitempty"`
	Lax1 *SpotPricesPerNewFacility `json:"lax1,omitempty"`
	Nrt1 *SpotPricesPerFacility `json:"nrt1,omitempty"`
	Ord1 *SpotPricesPerNewFacility `json:"ord1,omitempty"`
	Sea1 *SpotPricesPerNewFacility `json:"sea1,omitempty"`
	Sin1 *SpotPricesPerNewFacility `json:"sin1,omitempty"`
	Sjc1 *SpotPricesPerFacility `json:"sjc1,omitempty"`
	Syd1 *SpotPricesPerNewFacility `json:"syd1,omitempty"`
	Yyz1 *SpotPricesPerNewFacility `json:"yyz1,omitempty"`
}

// NewSpotPricesReport instantiates a new SpotPricesReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotPricesReport() *SpotPricesReport {
	this := SpotPricesReport{}
	return &this
}

// NewSpotPricesReportWithDefaults instantiates a new SpotPricesReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotPricesReportWithDefaults() *SpotPricesReport {
	this := SpotPricesReport{}
	return &this
}

// GetAms1 returns the Ams1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetAms1() SpotPricesPerFacility {
	if o == nil || o.Ams1 == nil {
		var ret SpotPricesPerFacility
		return ret
	}
	return *o.Ams1
}

// GetAms1Ok returns a tuple with the Ams1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetAms1Ok() (*SpotPricesPerFacility, bool) {
	if o == nil || o.Ams1 == nil {
		return nil, false
	}
	return o.Ams1, true
}

// HasAms1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasAms1() bool {
	if o != nil && o.Ams1 != nil {
		return true
	}

	return false
}

// SetAms1 gets a reference to the given SpotPricesPerFacility and assigns it to the Ams1 field.
func (o *SpotPricesReport) SetAms1(v SpotPricesPerFacility) {
	o.Ams1 = &v
}

// GetAtl1 returns the Atl1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetAtl1() SpotPricesPerNewFacility {
	if o == nil || o.Atl1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Atl1
}

// GetAtl1Ok returns a tuple with the Atl1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetAtl1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Atl1 == nil {
		return nil, false
	}
	return o.Atl1, true
}

// HasAtl1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasAtl1() bool {
	if o != nil && o.Atl1 != nil {
		return true
	}

	return false
}

// SetAtl1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Atl1 field.
func (o *SpotPricesReport) SetAtl1(v SpotPricesPerNewFacility) {
	o.Atl1 = &v
}

// GetDfw1 returns the Dfw1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetDfw1() SpotPricesPerNewFacility {
	if o == nil || o.Dfw1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Dfw1
}

// GetDfw1Ok returns a tuple with the Dfw1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetDfw1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Dfw1 == nil {
		return nil, false
	}
	return o.Dfw1, true
}

// HasDfw1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasDfw1() bool {
	if o != nil && o.Dfw1 != nil {
		return true
	}

	return false
}

// SetDfw1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Dfw1 field.
func (o *SpotPricesReport) SetDfw1(v SpotPricesPerNewFacility) {
	o.Dfw1 = &v
}

// GetEwr1 returns the Ewr1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetEwr1() SpotPricesPerFacility {
	if o == nil || o.Ewr1 == nil {
		var ret SpotPricesPerFacility
		return ret
	}
	return *o.Ewr1
}

// GetEwr1Ok returns a tuple with the Ewr1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetEwr1Ok() (*SpotPricesPerFacility, bool) {
	if o == nil || o.Ewr1 == nil {
		return nil, false
	}
	return o.Ewr1, true
}

// HasEwr1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasEwr1() bool {
	if o != nil && o.Ewr1 != nil {
		return true
	}

	return false
}

// SetEwr1 gets a reference to the given SpotPricesPerFacility and assigns it to the Ewr1 field.
func (o *SpotPricesReport) SetEwr1(v SpotPricesPerFacility) {
	o.Ewr1 = &v
}

// GetFra1 returns the Fra1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetFra1() SpotPricesPerNewFacility {
	if o == nil || o.Fra1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Fra1
}

// GetFra1Ok returns a tuple with the Fra1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetFra1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Fra1 == nil {
		return nil, false
	}
	return o.Fra1, true
}

// HasFra1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasFra1() bool {
	if o != nil && o.Fra1 != nil {
		return true
	}

	return false
}

// SetFra1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Fra1 field.
func (o *SpotPricesReport) SetFra1(v SpotPricesPerNewFacility) {
	o.Fra1 = &v
}

// GetIad1 returns the Iad1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetIad1() SpotPricesPerNewFacility {
	if o == nil || o.Iad1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Iad1
}

// GetIad1Ok returns a tuple with the Iad1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetIad1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Iad1 == nil {
		return nil, false
	}
	return o.Iad1, true
}

// HasIad1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasIad1() bool {
	if o != nil && o.Iad1 != nil {
		return true
	}

	return false
}

// SetIad1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Iad1 field.
func (o *SpotPricesReport) SetIad1(v SpotPricesPerNewFacility) {
	o.Iad1 = &v
}

// GetLax1 returns the Lax1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetLax1() SpotPricesPerNewFacility {
	if o == nil || o.Lax1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Lax1
}

// GetLax1Ok returns a tuple with the Lax1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetLax1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Lax1 == nil {
		return nil, false
	}
	return o.Lax1, true
}

// HasLax1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasLax1() bool {
	if o != nil && o.Lax1 != nil {
		return true
	}

	return false
}

// SetLax1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Lax1 field.
func (o *SpotPricesReport) SetLax1(v SpotPricesPerNewFacility) {
	o.Lax1 = &v
}

// GetNrt1 returns the Nrt1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetNrt1() SpotPricesPerFacility {
	if o == nil || o.Nrt1 == nil {
		var ret SpotPricesPerFacility
		return ret
	}
	return *o.Nrt1
}

// GetNrt1Ok returns a tuple with the Nrt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetNrt1Ok() (*SpotPricesPerFacility, bool) {
	if o == nil || o.Nrt1 == nil {
		return nil, false
	}
	return o.Nrt1, true
}

// HasNrt1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasNrt1() bool {
	if o != nil && o.Nrt1 != nil {
		return true
	}

	return false
}

// SetNrt1 gets a reference to the given SpotPricesPerFacility and assigns it to the Nrt1 field.
func (o *SpotPricesReport) SetNrt1(v SpotPricesPerFacility) {
	o.Nrt1 = &v
}

// GetOrd1 returns the Ord1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetOrd1() SpotPricesPerNewFacility {
	if o == nil || o.Ord1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Ord1
}

// GetOrd1Ok returns a tuple with the Ord1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetOrd1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Ord1 == nil {
		return nil, false
	}
	return o.Ord1, true
}

// HasOrd1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasOrd1() bool {
	if o != nil && o.Ord1 != nil {
		return true
	}

	return false
}

// SetOrd1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Ord1 field.
func (o *SpotPricesReport) SetOrd1(v SpotPricesPerNewFacility) {
	o.Ord1 = &v
}

// GetSea1 returns the Sea1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetSea1() SpotPricesPerNewFacility {
	if o == nil || o.Sea1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Sea1
}

// GetSea1Ok returns a tuple with the Sea1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetSea1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Sea1 == nil {
		return nil, false
	}
	return o.Sea1, true
}

// HasSea1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasSea1() bool {
	if o != nil && o.Sea1 != nil {
		return true
	}

	return false
}

// SetSea1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Sea1 field.
func (o *SpotPricesReport) SetSea1(v SpotPricesPerNewFacility) {
	o.Sea1 = &v
}

// GetSin1 returns the Sin1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetSin1() SpotPricesPerNewFacility {
	if o == nil || o.Sin1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Sin1
}

// GetSin1Ok returns a tuple with the Sin1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetSin1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Sin1 == nil {
		return nil, false
	}
	return o.Sin1, true
}

// HasSin1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasSin1() bool {
	if o != nil && o.Sin1 != nil {
		return true
	}

	return false
}

// SetSin1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Sin1 field.
func (o *SpotPricesReport) SetSin1(v SpotPricesPerNewFacility) {
	o.Sin1 = &v
}

// GetSjc1 returns the Sjc1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetSjc1() SpotPricesPerFacility {
	if o == nil || o.Sjc1 == nil {
		var ret SpotPricesPerFacility
		return ret
	}
	return *o.Sjc1
}

// GetSjc1Ok returns a tuple with the Sjc1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetSjc1Ok() (*SpotPricesPerFacility, bool) {
	if o == nil || o.Sjc1 == nil {
		return nil, false
	}
	return o.Sjc1, true
}

// HasSjc1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasSjc1() bool {
	if o != nil && o.Sjc1 != nil {
		return true
	}

	return false
}

// SetSjc1 gets a reference to the given SpotPricesPerFacility and assigns it to the Sjc1 field.
func (o *SpotPricesReport) SetSjc1(v SpotPricesPerFacility) {
	o.Sjc1 = &v
}

// GetSyd1 returns the Syd1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetSyd1() SpotPricesPerNewFacility {
	if o == nil || o.Syd1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Syd1
}

// GetSyd1Ok returns a tuple with the Syd1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetSyd1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Syd1 == nil {
		return nil, false
	}
	return o.Syd1, true
}

// HasSyd1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasSyd1() bool {
	if o != nil && o.Syd1 != nil {
		return true
	}

	return false
}

// SetSyd1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Syd1 field.
func (o *SpotPricesReport) SetSyd1(v SpotPricesPerNewFacility) {
	o.Syd1 = &v
}

// GetYyz1 returns the Yyz1 field value if set, zero value otherwise.
func (o *SpotPricesReport) GetYyz1() SpotPricesPerNewFacility {
	if o == nil || o.Yyz1 == nil {
		var ret SpotPricesPerNewFacility
		return ret
	}
	return *o.Yyz1
}

// GetYyz1Ok returns a tuple with the Yyz1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesReport) GetYyz1Ok() (*SpotPricesPerNewFacility, bool) {
	if o == nil || o.Yyz1 == nil {
		return nil, false
	}
	return o.Yyz1, true
}

// HasYyz1 returns a boolean if a field has been set.
func (o *SpotPricesReport) HasYyz1() bool {
	if o != nil && o.Yyz1 != nil {
		return true
	}

	return false
}

// SetYyz1 gets a reference to the given SpotPricesPerNewFacility and assigns it to the Yyz1 field.
func (o *SpotPricesReport) SetYyz1(v SpotPricesPerNewFacility) {
	o.Yyz1 = &v
}

func (o SpotPricesReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ams1 != nil {
		toSerialize["ams1"] = o.Ams1
	}
	if o.Atl1 != nil {
		toSerialize["atl1"] = o.Atl1
	}
	if o.Dfw1 != nil {
		toSerialize["dfw1"] = o.Dfw1
	}
	if o.Ewr1 != nil {
		toSerialize["ewr1"] = o.Ewr1
	}
	if o.Fra1 != nil {
		toSerialize["fra1"] = o.Fra1
	}
	if o.Iad1 != nil {
		toSerialize["iad1"] = o.Iad1
	}
	if o.Lax1 != nil {
		toSerialize["lax1"] = o.Lax1
	}
	if o.Nrt1 != nil {
		toSerialize["nrt1"] = o.Nrt1
	}
	if o.Ord1 != nil {
		toSerialize["ord1"] = o.Ord1
	}
	if o.Sea1 != nil {
		toSerialize["sea1"] = o.Sea1
	}
	if o.Sin1 != nil {
		toSerialize["sin1"] = o.Sin1
	}
	if o.Sjc1 != nil {
		toSerialize["sjc1"] = o.Sjc1
	}
	if o.Syd1 != nil {
		toSerialize["syd1"] = o.Syd1
	}
	if o.Yyz1 != nil {
		toSerialize["yyz1"] = o.Yyz1
	}
	return json.Marshal(toSerialize)
}

type NullableSpotPricesReport struct {
	value *SpotPricesReport
	isSet bool
}

func (v NullableSpotPricesReport) Get() *SpotPricesReport {
	return v.value
}

func (v *NullableSpotPricesReport) Set(val *SpotPricesReport) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotPricesReport) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotPricesReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotPricesReport(val *SpotPricesReport) *NullableSpotPricesReport {
	return &NullableSpotPricesReport{value: val, isSet: true}
}

func (v NullableSpotPricesReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotPricesReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


