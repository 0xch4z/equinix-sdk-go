/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// Coordinates struct for Coordinates
type Coordinates struct {
	Latitude *string `json:"latitude,omitempty"`
	Longitude *string `json:"longitude,omitempty"`
}

// NewCoordinates instantiates a new Coordinates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoordinates() *Coordinates {
	this := Coordinates{}
	return &this
}

// NewCoordinatesWithDefaults instantiates a new Coordinates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoordinatesWithDefaults() *Coordinates {
	this := Coordinates{}
	return &this
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *Coordinates) GetLatitude() string {
	if o == nil || o.Latitude == nil {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Coordinates) GetLatitudeOk() (*string, bool) {
	if o == nil || o.Latitude == nil {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *Coordinates) HasLatitude() bool {
	if o != nil && o.Latitude != nil {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *Coordinates) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *Coordinates) GetLongitude() string {
	if o == nil || o.Longitude == nil {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Coordinates) GetLongitudeOk() (*string, bool) {
	if o == nil || o.Longitude == nil {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *Coordinates) HasLongitude() bool {
	if o != nil && o.Longitude != nil {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *Coordinates) SetLongitude(v string) {
	o.Longitude = &v
}

func (o Coordinates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Latitude != nil {
		toSerialize["latitude"] = o.Latitude
	}
	if o.Longitude != nil {
		toSerialize["longitude"] = o.Longitude
	}
	return json.Marshal(toSerialize)
}

type NullableCoordinates struct {
	value *Coordinates
	isSet bool
}

func (v NullableCoordinates) Get() *Coordinates {
	return v.value
}

func (v *NullableCoordinates) Set(val *Coordinates) {
	v.value = val
	v.isSet = true
}

func (v NullableCoordinates) IsSet() bool {
	return v.isSet
}

func (v *NullableCoordinates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoordinates(val *Coordinates) *NullableCoordinates {
	return &NullableCoordinates{value: val, isSet: true}
}

func (v NullableCoordinates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoordinates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


