/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// PortConvertLayer3InputRequestIps struct for PortConvertLayer3InputRequestIps
type PortConvertLayer3InputRequestIps struct {
	AddressFamily *int32 `json:"address_family,omitempty"`
	Public *bool `json:"public,omitempty"`
}

// NewPortConvertLayer3InputRequestIps instantiates a new PortConvertLayer3InputRequestIps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortConvertLayer3InputRequestIps() *PortConvertLayer3InputRequestIps {
	this := PortConvertLayer3InputRequestIps{}
	return &this
}

// NewPortConvertLayer3InputRequestIpsWithDefaults instantiates a new PortConvertLayer3InputRequestIps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortConvertLayer3InputRequestIpsWithDefaults() *PortConvertLayer3InputRequestIps {
	this := PortConvertLayer3InputRequestIps{}
	return &this
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *PortConvertLayer3InputRequestIps) GetAddressFamily() int32 {
	if o == nil || o.AddressFamily == nil {
		var ret int32
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConvertLayer3InputRequestIps) GetAddressFamilyOk() (*int32, bool) {
	if o == nil || o.AddressFamily == nil {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *PortConvertLayer3InputRequestIps) HasAddressFamily() bool {
	if o != nil && o.AddressFamily != nil {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given int32 and assigns it to the AddressFamily field.
func (o *PortConvertLayer3InputRequestIps) SetAddressFamily(v int32) {
	o.AddressFamily = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *PortConvertLayer3InputRequestIps) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConvertLayer3InputRequestIps) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *PortConvertLayer3InputRequestIps) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *PortConvertLayer3InputRequestIps) SetPublic(v bool) {
	o.Public = &v
}

func (o PortConvertLayer3InputRequestIps) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddressFamily != nil {
		toSerialize["address_family"] = o.AddressFamily
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	return json.Marshal(toSerialize)
}

type NullablePortConvertLayer3InputRequestIps struct {
	value *PortConvertLayer3InputRequestIps
	isSet bool
}

func (v NullablePortConvertLayer3InputRequestIps) Get() *PortConvertLayer3InputRequestIps {
	return v.value
}

func (v *NullablePortConvertLayer3InputRequestIps) Set(val *PortConvertLayer3InputRequestIps) {
	v.value = val
	v.isSet = true
}

func (v NullablePortConvertLayer3InputRequestIps) IsSet() bool {
	return v.isSet
}

func (v *NullablePortConvertLayer3InputRequestIps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortConvertLayer3InputRequestIps(val *PortConvertLayer3InputRequestIps) *NullablePortConvertLayer3InputRequestIps {
	return &NullablePortConvertLayer3InputRequestIps{value: val, isSet: true}
}

func (v NullablePortConvertLayer3InputRequestIps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortConvertLayer3InputRequestIps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


