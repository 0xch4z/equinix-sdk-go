/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>. 

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// VirtualCircuit struct for VirtualCircuit
type VirtualCircuit struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Status *string `json:"status,omitempty"`
	Vnid *int32 `json:"vnid,omitempty"`
	NniVlan *int32 `json:"nni_vlan,omitempty"`
	// integer representing bps speed
	Speed *int32 `json:"speed,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Project *Href `json:"project,omitempty"`
	VirtualNetwork *Href `json:"virtual_network,omitempty"`
}

// NewVirtualCircuit instantiates a new VirtualCircuit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualCircuit() *VirtualCircuit {
	this := VirtualCircuit{}
	return &this
}

// NewVirtualCircuitWithDefaults instantiates a new VirtualCircuit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualCircuitWithDefaults() *VirtualCircuit {
	this := VirtualCircuit{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualCircuit) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualCircuit) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VirtualCircuit) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VirtualCircuit) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VirtualCircuit) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VirtualCircuit) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VirtualCircuit) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VirtualCircuit) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VirtualCircuit) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VirtualCircuit) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VirtualCircuit) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VirtualCircuit) SetStatus(v string) {
	o.Status = &v
}

// GetVnid returns the Vnid field value if set, zero value otherwise.
func (o *VirtualCircuit) GetVnid() int32 {
	if o == nil || o.Vnid == nil {
		var ret int32
		return ret
	}
	return *o.Vnid
}

// GetVnidOk returns a tuple with the Vnid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetVnidOk() (*int32, bool) {
	if o == nil || o.Vnid == nil {
		return nil, false
	}
	return o.Vnid, true
}

// HasVnid returns a boolean if a field has been set.
func (o *VirtualCircuit) HasVnid() bool {
	if o != nil && o.Vnid != nil {
		return true
	}

	return false
}

// SetVnid gets a reference to the given int32 and assigns it to the Vnid field.
func (o *VirtualCircuit) SetVnid(v int32) {
	o.Vnid = &v
}

// GetNniVlan returns the NniVlan field value if set, zero value otherwise.
func (o *VirtualCircuit) GetNniVlan() int32 {
	if o == nil || o.NniVlan == nil {
		var ret int32
		return ret
	}
	return *o.NniVlan
}

// GetNniVlanOk returns a tuple with the NniVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetNniVlanOk() (*int32, bool) {
	if o == nil || o.NniVlan == nil {
		return nil, false
	}
	return o.NniVlan, true
}

// HasNniVlan returns a boolean if a field has been set.
func (o *VirtualCircuit) HasNniVlan() bool {
	if o != nil && o.NniVlan != nil {
		return true
	}

	return false
}

// SetNniVlan gets a reference to the given int32 and assigns it to the NniVlan field.
func (o *VirtualCircuit) SetNniVlan(v int32) {
	o.NniVlan = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *VirtualCircuit) GetSpeed() int32 {
	if o == nil || o.Speed == nil {
		var ret int32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetSpeedOk() (*int32, bool) {
	if o == nil || o.Speed == nil {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *VirtualCircuit) HasSpeed() bool {
	if o != nil && o.Speed != nil {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int32 and assigns it to the Speed field.
func (o *VirtualCircuit) SetSpeed(v int32) {
	o.Speed = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VirtualCircuit) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VirtualCircuit) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *VirtualCircuit) SetTags(v []string) {
	o.Tags = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *VirtualCircuit) GetProject() Href {
	if o == nil || o.Project == nil {
		var ret Href
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetProjectOk() (*Href, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *VirtualCircuit) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given Href and assigns it to the Project field.
func (o *VirtualCircuit) SetProject(v Href) {
	o.Project = &v
}

// GetVirtualNetwork returns the VirtualNetwork field value if set, zero value otherwise.
func (o *VirtualCircuit) GetVirtualNetwork() Href {
	if o == nil || o.VirtualNetwork == nil {
		var ret Href
		return ret
	}
	return *o.VirtualNetwork
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualCircuit) GetVirtualNetworkOk() (*Href, bool) {
	if o == nil || o.VirtualNetwork == nil {
		return nil, false
	}
	return o.VirtualNetwork, true
}

// HasVirtualNetwork returns a boolean if a field has been set.
func (o *VirtualCircuit) HasVirtualNetwork() bool {
	if o != nil && o.VirtualNetwork != nil {
		return true
	}

	return false
}

// SetVirtualNetwork gets a reference to the given Href and assigns it to the VirtualNetwork field.
func (o *VirtualCircuit) SetVirtualNetwork(v Href) {
	o.VirtualNetwork = &v
}

func (o VirtualCircuit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Vnid != nil {
		toSerialize["vnid"] = o.Vnid
	}
	if o.NniVlan != nil {
		toSerialize["nni_vlan"] = o.NniVlan
	}
	if o.Speed != nil {
		toSerialize["speed"] = o.Speed
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.VirtualNetwork != nil {
		toSerialize["virtual_network"] = o.VirtualNetwork
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualCircuit struct {
	value *VirtualCircuit
	isSet bool
}

func (v NullableVirtualCircuit) Get() *VirtualCircuit {
	return v.value
}

func (v *NullableVirtualCircuit) Set(val *VirtualCircuit) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualCircuit) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualCircuit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualCircuit(val *VirtualCircuit) *NullableVirtualCircuit {
	return &NullableVirtualCircuit{value: val, isSet: true}
}

func (v NullableVirtualCircuit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualCircuit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


