/*
 * Metal API
 *
 * This is the API for Equinix Metal Product. Interact with your devices, user account, and projects.
 *
 * API version: 1.0.0
 * Contact: support@equinixmetal.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// PortList struct for PortList
type PortList struct {
	Ports *[]Port `json:"ports,omitempty"`
}

// NewPortList instantiates a new PortList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortList() *PortList {
	this := PortList{}
	return &this
}

// NewPortListWithDefaults instantiates a new PortList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortListWithDefaults() *PortList {
	this := PortList{}
	return &this
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *PortList) GetPorts() []Port {
	if o == nil || o.Ports == nil {
		var ret []Port
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortList) GetPortsOk() (*[]Port, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *PortList) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []Port and assigns it to the Ports field.
func (o *PortList) SetPorts(v []Port) {
	o.Ports = &v
}

func (o PortList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	return json.Marshal(toSerialize)
}

type NullablePortList struct {
	value *PortList
	isSet bool
}

func (v NullablePortList) Get() *PortList {
	return v.value
}

func (v *NullablePortList) Set(val *PortList) {
	v.value = val
	v.isSet = true
}

func (v NullablePortList) IsSet() bool {
	return v.isSet
}

func (v *NullablePortList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortList(val *PortList) *NullablePortList {
	return &NullablePortList{value: val, isSet: true}
}

func (v NullablePortList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


