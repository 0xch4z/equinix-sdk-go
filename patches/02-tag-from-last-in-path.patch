diff --git a/equinix-metal.fetched.json b/equinix-metal.fetched.json
index 3f01934..f03fcfd 100644
--- a/equinix-metal.fetched.json
+++ b/equinix-metal.fetched.json
@@ -180,7 +180,6 @@
         "description": "Returns all batches for the given project",
         "operationId": "findBatchesByProject",
         "tags": [
-          "Projects",
           "Batches"
         ],
         "parameters": [
@@ -331,7 +330,6 @@
     "/projects/{id}/bgp-configs": {
       "post": {
         "tags": [
-          "Projects",
           "BGP"
         ],
         "parameters": [
@@ -381,7 +379,6 @@
         "description": "Returns a bgp config",
         "operationId": "findBgpConfigByProject",
         "tags": [
-          "Projects",
           "BGP"
         ],
         "parameters": [
@@ -441,7 +438,6 @@
         "description": "Provides a summary of the BGP neighbor data associated to the BGP sessions for this device.",
         "operationId": "getBgpNeighborData",
         "tags": [
-          "Devices",
           "BGP"
         ],
         "parameters": [
@@ -479,7 +475,6 @@
         "description": "Provides a listing of available BGP sessions for the project.",
         "operationId": "findProjectBgpSessions",
         "tags": [
-          "Projects",
           "BGP"
         ],
         "parameters": [
@@ -514,7 +509,6 @@
         "description": "Provides a listing of available BGP sessions for the device.",
         "operationId": "findBgpSessions",
         "tags": [
-          "Devices",
           "BGP"
         ],
         "parameters": [
@@ -547,7 +541,6 @@
         "description": "Creates a BGP session.",
         "operationId": "createBgpSession",
         "tags": [
-          "Devices",
           "BGP"
         ],
         "parameters": [
@@ -789,8 +782,7 @@
         "description": "Returns a list of events pertaining to a specific device",
         "operationId": "findDeviceEvents",
         "tags": [
-          "Events",
-          "Devices"
+          "Events"
         ],
         "parameters": [
           {
@@ -871,8 +863,7 @@
         "description": "Returns a list of events for a single organization",
         "operationId": "findOrganizationEvents",
         "tags": [
-          "Events",
-          "Organizations"
+          "Events"
         ],
         "parameters": [
           {
@@ -953,8 +944,7 @@
         "description": "Returns a list of events for a single project",
         "operationId": "findProjectEvents",
         "tags": [
-          "Events",
-          "Projects"
+          "Events"
         ],
         "parameters": [
           {
@@ -1035,8 +1025,7 @@
         "description": "Returns a list of the current volume’s events",
         "operationId": "findVolumeEvents",
         "tags": [
-          "Events",
-          "Volumes"
+          "Events"
         ],
         "parameters": [
           {
@@ -1243,8 +1232,7 @@
         "description": "Returns a list of the connection events",
         "operationId": "findConnectionEvents",
         "tags": [
-          "Events",
-          "Connections"
+          "Events"
         ],
         "parameters": [
           {
@@ -1325,8 +1313,7 @@
         "description": "Returns a list of the connection port events",
         "operationId": "findConnectionPortEvents",
         "tags": [
-          "Events",
-          "Connections"
+          "Events"
         ],
         "parameters": [
           {
@@ -1415,8 +1402,7 @@
         "description": "Returns a list of the virtual circuit events",
         "operationId": "findVirtualCircuitEvents",
         "tags": [
-          "Events",
-          "Connections"
+          "Events"
         ],
         "parameters": [
           {
@@ -1553,8 +1539,7 @@
         "description": "Returns a listing of available datacenters for the given project",
         "operationId": "findFacilitiesByProject",
         "tags": [
-          "Facilities",
-          "Projects"
+          "Facilities"
         ],
         "parameters": [
           {
@@ -1613,8 +1598,7 @@
         "description": "Returns a listing of available datacenters for the given organization",
         "operationId": "findFacilitiesByOrganization",
         "tags": [
-          "Facilities",
-          "Organizations"
+          "Facilities"
         ],
         "parameters": [
           {
@@ -1673,7 +1657,6 @@
         "description": "Provides a collection of hardware reservations for a given project.",
         "operationId": "findProjectHardwareReservations",
         "tags": [
-          "Projects",
           "HardwareReservations"
         ],
         "parameters": [
@@ -1903,7 +1886,6 @@
         "description": "Provides a collection of devices for a given organization.",
         "operationId": "findOrganizationDevices",
         "tags": [
-          "Organizations",
           "Devices"
         ],
         "parameters": [
@@ -1985,7 +1967,6 @@
         "description": "Provides a collection of devices for a given project.",
         "operationId": "findProjectDevices",
         "tags": [
-          "Projects",
           "Devices"
         ],
         "parameters": [
@@ -2065,7 +2046,6 @@
         "description": "Creates a new device and provisions it in our datacenter.\n\nType-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.\n\nThe features attribute allows you to optionally specify what features your server should have.\n\nFor example, if you require a server with a TPM chip, you may specify `{ \"features\": { \"tpm\": \"required\" } }` (or `{ \"features\": [\"tpm\"] }` in shorthand).\n\nThe request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).\n\nThe request will not fail if we have no servers with that feature in our inventory.\n\nThe facilities attribute specifies in what datacenter you wish to create the device.\n\nYou can either specify a single facility `{ \"facility\": \"f1\" }` , or you can instruct to create the device in the best available datacenter `{ \"facility\": \"any\" }`. Additionally it is possible to set a prioritized location selection.\n\nFor example `{ \"facility\": [\"f3\", \"f2\", \"any\"] }` will try to assign to the facility f3, if there are no available f2, and so on. If \"any\" is not specified for \"facility\", the request will fail unless it can assign in the selected locations.\n\nThe `ip_addresses attribute will allow you to specify the addresses you want created with your device.\n\nTo maintain backwards compatibility, If the attribute is not sent in the request, it will be treated as if `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": true }, { \"address_family\": 4, \"public\": false }, { \"address_family\": 6, \"public\": true }] }` was sent.\n\nThe private IPv4 address is required and always need to be sent in the array. Not all operating systems support no public IPv4 address, so in those cases you will receive an error message.\n\nFor example, to only configure your server with a private IPv4 address, you can send `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": false }] }`.\n\nNote: when specifying a subnet size larger than a /30, you will need to supply the UUID(s) of existing ip_reservations in your project to assign IPs from.\n\nFor example, `{ \"ip_addresses\": [..., {\"address_family\": 4, \"public\": true, \"ip_reservations\": [\"uuid1\", \"uuid2\"]}] }`\n\nTo access a server without public IPs, you can use our Out-of-Band console access (SOS) or use another server with public IPs as a proxy.\n",
         "operationId": "createDevice",
         "tags": [
-          "Projects",
           "Devices"
         ],
         "parameters": [
@@ -2260,7 +2240,6 @@
         "description": "Creates new devices in batch and provisions them in our datacenter.\n\nType-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.\n\nThe features attribute allows you to optionally specify what features your server should have.\n\nFor example, if you require a server with a TPM chip, you may specify `{ \"features\": { \"tpm\": \"required\" } }` (or `{ \"features\": [\"tpm\"] }` in shorthand).\n\nThe request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).\n\nThe request will not fail if we have no servers with that feature in our inventory.\n\nThe facilities attribute specifies in what datacenter you wish to create the device.\n\nYou can either specify a single facility `{ \"facility\": \"f1\" }` , or you can instruct to create the device in the best available datacenter `{ \"facility\": \"any\" }`. Additionally it is possible to set a prioritized location selection.\n\nFor example `{ \"facility\": [\"f3\", \"f2\", \"any\"] }` will try to assign to the facility f3, if there are no available f2, and so on. If \"any\" is not specified for \"facility\", the request will fail unless it can assign in the selected locations.\n\nWith `{ \"facility\": \"any\" }` you have the option to diversify to indicate how many facilities you are willing to be spread across. For this purpose use parameter: `facility_diversity_level = N`.\n\nFor example:\n\n`{ \"facilities\": [\"sjc1\", \"ewr1\", \"any\"] ,  \"facility_diversity_level\" = 1, \"quantity\" = 10 }` will assign 10 devices into the same facility, trying first in \"sjc1\", and if there aren’t available, it will try in  \"ewr1\", otherwise any other.\n\nThe `ip_addresses` attribute will allow you to specify the addresses you want created with your device.\n\nTo maintain backwards compatibility, If the attribute is not sent in the request, it will be treated as if `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": true }, { \"address_family\": 4, \"public\": false }, { \"address_family\": 6, \"public\": true }] }` was sent.\n\nThe private IPv4 address is required and always need to be sent in the array. Not all operating systems support no public IPv4 address, so in those cases you will receive an error message.\n\nFor example, to only configure your server with a private IPv4 address, you can send `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": false }] }`.\n\nNote: when specifying a subnet size larger than a /30, you will need to supply the UUID(s) of existing ip_reservations in your project to assign IPs from.\n\nFor example, `{ \"ip_addresses\": [..., {\"address_family\": 4, \"public\": true, \"ip_reservations\": [\"uuid1\", \"uuid2\"]}] }`\n\nTo access a server without public IPs, you can use our Out-of-Band console access (SOS) or use another server with public IPs as a proxy.",
         "operationId": "createDeviceBatch",
         "tags": [
-          "Devices",
           "Batches"
         ],
         "parameters": [
@@ -3060,8 +3038,7 @@
         "description": "Returns all invitations in a project.",
         "operationId": "findProjectInvitations",
         "tags": [
-          "Invitations",
-          "Projects"
+          "Invitations"
         ],
         "parameters": [
           {
@@ -3140,8 +3117,7 @@
         "description": "In order to add a user to a project, they must first be invited.",
         "operationId": "createProjectInvitation",
         "tags": [
-          "Invitations",
-          "Projects"
+          "Invitations"
         ],
         "parameters": [
           {
@@ -3190,8 +3166,7 @@
         "description": "Returns all invitations in an organization.",
         "operationId": "findOrganizationInvitations",
         "tags": [
-          "Invitations",
-          "Organizations"
+          "Invitations"
         ],
         "parameters": [
           {
@@ -3270,8 +3245,7 @@
         "description": "In order to add a user to an organization, they must first be invited.\nTo invite to several projects the parameter `projects_ids:[a,b,c]` can be used",
         "operationId": "createOrganizationInvitation",
         "tags": [
-          "Invitations",
-          "Organizations"
+          "Invitations"
         ],
         "parameters": [
           {
@@ -3320,8 +3294,7 @@
         "description": "Returns all invitations in current user.",
         "operationId": "findInvitations",
         "tags": [
-          "Invitations",
-          "Users"
+          "Invitations"
         ],
         "parameters": [
           {
@@ -3485,7 +3458,6 @@
         "description": "Returns all ip assignments for a device.",
         "operationId": "findIPAssignments",
         "tags": [
-          "Devices",
           "IPAddresses"
         ],
         "parameters": [
@@ -3540,7 +3512,6 @@
         "description": "Creates an ip assignment for a device.",
         "operationId": "createIPAssignment",
         "tags": [
-          "Devices",
           "IPAddresses"
         ],
         "parameters": [
@@ -3742,7 +3713,6 @@
         "description": "Provides a list of IP resevations for a single project.",
         "operationId": "findIPReservations",
         "tags": [
-          "Projects",
           "IPAddresses"
         ],
         "parameters": [
@@ -3797,7 +3767,6 @@
       },
       "post": {
         "tags": [
-          "Projects",
           "IPAddresses"
         ],
         "parameters": [
@@ -3850,7 +3819,6 @@
         "description": "Provides a collection of licenses for a given project.",
         "operationId": "findProjectLicenses",
         "tags": [
-          "Projects",
           "Licenses"
         ],
         "parameters": [
@@ -3930,7 +3898,6 @@
         "description": "Creates a new license for the given project",
         "operationId": "createLicense",
         "tags": [
-          "Projects",
           "Licenses"
         ],
         "parameters": [
@@ -4118,7 +4085,6 @@
         "description": "Returns all memberships in a project.",
         "operationId": "findProjectMemberships",
         "tags": [
-          "Projects",
           "Memberships"
         ],
         "parameters": [
@@ -4672,8 +4638,7 @@
         "description": "Returns a listing of available operating systems for the given organization",
         "operationId": "findOperatingSystemsByOrganization",
         "tags": [
-          "OperatingSystems",
-          "Organizations"
+          "OperatingSystems"
         ],
         "parameters": [
           {
@@ -5197,7 +5162,6 @@
         "description": "Returns all payment methods of an organization.",
         "operationId": "findOrganizationPaymentMethods",
         "tags": [
-          "Organizations",
           "PaymentMethods"
         ],
         "parameters": [
@@ -5274,7 +5238,6 @@
         "description": "Creates a payment method.",
         "operationId": "createPaymentMethod",
         "tags": [
-          "Organizations",
           "PaymentMethods"
         ],
         "parameters": [
@@ -5495,8 +5458,7 @@
         "description": "Returns a listing of available plans for the given project",
         "operationId": "findPlansByProject",
         "tags": [
-          "Plans",
-          "Projects"
+          "Plans"
         ],
         "parameters": [
           {
@@ -5555,8 +5517,7 @@
         "description": "Returns a listing of available plans for the given organization",
         "operationId": "findPlansByOrganization",
         "tags": [
-          "Plans",
-          "Organizations"
+          "Plans"
         ],
         "parameters": [
           {
@@ -5671,7 +5632,6 @@
         "description": "Assign a port for a hardware to virtual network.",
         "operationId": "assignPort",
         "tags": [
-          "Ports",
           "VLANs"
         ],
         "parameters": [
@@ -5721,7 +5681,6 @@
         "description": "Unassign a port for a hardware.",
         "operationId": "unassignPort",
         "tags": [
-          "Ports",
           "VLANs"
         ],
         "parameters": [
@@ -5963,7 +5922,6 @@
         "description": "Sets a virtual network on this port as a \"native VLAN\". The VLAN must have already been assigned using the using the \"Assign a port to a virtual network\" operation.",
         "operationId": "assignNativeVlan",
         "tags": [
-          "Ports",
           "VLANs"
         ],
         "parameters": [
@@ -6006,7 +5964,6 @@
         "description": "Removes the native VLAN from this port",
         "operationId": "deleteNativeVlan",
         "tags": [
-          "Ports",
           "VLANs"
         ],
         "parameters": [
@@ -6044,7 +6001,6 @@
         "description": "Returns a collection of projects that belong to the organization.",
         "operationId": "findOrganizationProjects",
         "tags": [
-          "Organizations",
           "Projects"
         ],
         "parameters": [
@@ -6118,7 +6074,6 @@
         "description": "Creates a new project for the organization",
         "operationId": "createOrganizationProject",
         "tags": [
-          "Organizations",
           "Projects"
         ],
         "parameters": [
@@ -6549,7 +6504,6 @@
         "description": "Creates a new spot market request.\n\nType-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.\n\nThe features attribute allows you to optionally specify what features your server should have. For example, if you require a server with a TPM chip, you may specify `{ \"features\": { \"tpm\": \"required\" } }` (or `{ \"features\": [\"tpm\"] }` in shorthand).\n\nThe request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).\n\nThe request will not fail if we have no servers with that feature in our inventory.",
         "operationId": "createSpotMarketRequest",
         "tags": [
-          "Projects",
           "SpotMarketRequest"
         ],
         "parameters": [
@@ -6594,7 +6548,6 @@
         "description": "View all spot market requests for a given project.",
         "operationId": "listSpotMarketRequests",
         "tags": [
-          "Projects",
           "SpotMarketRequest"
         ],
         "parameters": [
@@ -6812,7 +6765,6 @@
         "description": "Returns a collection of the project's ssh keys.",
         "operationId": "findProjectSSHKeys",
         "tags": [
-          "Projects",
           "SSHKeys"
         ],
         "parameters": [
@@ -6871,7 +6823,6 @@
         "description": "Creates a ssh key.",
         "operationId": "createProjectSSHKey",
         "tags": [
-          "Projects",
           "SSHKeys"
         ],
         "parameters": [
@@ -6915,7 +6866,6 @@
         "description": "Returns a collection of the device's ssh keys.",
         "operationId": "findDeviceSSHKeys",
         "tags": [
-          "Projects",
           "SSHKeys"
         ],
         "parameters": [
@@ -8088,7 +8038,6 @@
         "description": "Provides a collection of project transfer requests from or to the organization.",
         "operationId": "findOrganizationTransfers",
         "tags": [
-          "Organizations",
           "TransferRequests"
         ],
         "parameters": [
@@ -8145,7 +8094,6 @@
         "description": "Organization owners can transfer their projects to other organizations.",
         "operationId": "createTransferRequest",
         "tags": [
-          "Projects",
           "TransferRequests"
         ],
         "parameters": [
@@ -8318,7 +8266,6 @@
         "description": "Returns all usages for a device.",
         "operationId": "findDeviceUsages",
         "tags": [
-          "Devices",
           "Usages"
         ],
         "parameters": [
@@ -8369,7 +8316,6 @@
         "description": "Returns all usages for a project.",
         "operationId": "findProjectUsage",
         "tags": [
-          "Devices",
           "Usages"
         ],
         "parameters": [
@@ -8706,7 +8652,6 @@
         "description": "Provides a list of virtual networks for a single project.",
         "operationId": "findVirtualNetworks",
         "tags": [
-          "Projects",
           "VLANs"
         ],
         "parameters": [
@@ -8761,7 +8706,6 @@
       },
       "post": {
         "tags": [
-          "Projects",
           "VLANs"
         ],
         "parameters": [
