/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindProjectUsage200ResponseUsagesInner struct for FindProjectUsage200ResponseUsagesInner
type FindProjectUsage200ResponseUsagesInner struct {
	Facility    *string `json:"facility,omitempty"`
	Name        *string `json:"name,omitempty"`
	Plan        *string `json:"plan,omitempty"`
	PlanVersion *string `json:"plan_version,omitempty"`
	Price       *string `json:"price,omitempty"`
	Quantity    *string `json:"quantity,omitempty"`
	Total       *string `json:"total,omitempty"`
	Type        *string `json:"type,omitempty"`
	Unit        *string `json:"unit,omitempty"`
}

// NewFindProjectUsage200ResponseUsagesInner instantiates a new FindProjectUsage200ResponseUsagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindProjectUsage200ResponseUsagesInner() *FindProjectUsage200ResponseUsagesInner {
	this := FindProjectUsage200ResponseUsagesInner{}
	return &this
}

// NewFindProjectUsage200ResponseUsagesInnerWithDefaults instantiates a new FindProjectUsage200ResponseUsagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindProjectUsage200ResponseUsagesInnerWithDefaults() *FindProjectUsage200ResponseUsagesInner {
	this := FindProjectUsage200ResponseUsagesInner{}
	return &this
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetFacility() string {
	if o == nil || o.Facility == nil {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetFacilityOk() (*string, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *FindProjectUsage200ResponseUsagesInner) SetFacility(v string) {
	o.Facility = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FindProjectUsage200ResponseUsagesInner) SetName(v string) {
	o.Name = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetPlan() string {
	if o == nil || o.Plan == nil {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetPlanOk() (*string, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *FindProjectUsage200ResponseUsagesInner) SetPlan(v string) {
	o.Plan = &v
}

// GetPlanVersion returns the PlanVersion field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetPlanVersion() string {
	if o == nil || o.PlanVersion == nil {
		var ret string
		return ret
	}
	return *o.PlanVersion
}

// GetPlanVersionOk returns a tuple with the PlanVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetPlanVersionOk() (*string, bool) {
	if o == nil || o.PlanVersion == nil {
		return nil, false
	}
	return o.PlanVersion, true
}

// HasPlanVersion returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasPlanVersion() bool {
	if o != nil && o.PlanVersion != nil {
		return true
	}

	return false
}

// SetPlanVersion gets a reference to the given string and assigns it to the PlanVersion field.
func (o *FindProjectUsage200ResponseUsagesInner) SetPlanVersion(v string) {
	o.PlanVersion = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *FindProjectUsage200ResponseUsagesInner) SetPrice(v string) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetQuantity() string {
	if o == nil || o.Quantity == nil {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetQuantityOk() (*string, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *FindProjectUsage200ResponseUsagesInner) SetQuantity(v string) {
	o.Quantity = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetTotal() string {
	if o == nil || o.Total == nil {
		var ret string
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetTotalOk() (*string, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given string and assigns it to the Total field.
func (o *FindProjectUsage200ResponseUsagesInner) SetTotal(v string) {
	o.Total = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FindProjectUsage200ResponseUsagesInner) SetType(v string) {
	o.Type = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *FindProjectUsage200ResponseUsagesInner) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectUsage200ResponseUsagesInner) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *FindProjectUsage200ResponseUsagesInner) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *FindProjectUsage200ResponseUsagesInner) SetUnit(v string) {
	o.Unit = &v
}

func (o FindProjectUsage200ResponseUsagesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.PlanVersion != nil {
		toSerialize["plan_version"] = o.PlanVersion
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	return json.Marshal(toSerialize)
}

type NullableFindProjectUsage200ResponseUsagesInner struct {
	value *FindProjectUsage200ResponseUsagesInner
	isSet bool
}

func (v NullableFindProjectUsage200ResponseUsagesInner) Get() *FindProjectUsage200ResponseUsagesInner {
	return v.value
}

func (v *NullableFindProjectUsage200ResponseUsagesInner) Set(val *FindProjectUsage200ResponseUsagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFindProjectUsage200ResponseUsagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFindProjectUsage200ResponseUsagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindProjectUsage200ResponseUsagesInner(val *FindProjectUsage200ResponseUsagesInner) *NullableFindProjectUsage200ResponseUsagesInner {
	return &NullableFindProjectUsage200ResponseUsagesInner{value: val, isSet: true}
}

func (v NullableFindProjectUsage200ResponseUsagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindProjectUsage200ResponseUsagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
