/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindBatchById200ResponseDevicesInner struct for FindBatchById200ResponseDevicesInner
type FindBatchById200ResponseDevicesInner struct {
	Href string `json:"href"`
}

// NewFindBatchById200ResponseDevicesInner instantiates a new FindBatchById200ResponseDevicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindBatchById200ResponseDevicesInner(href string) *FindBatchById200ResponseDevicesInner {
	this := FindBatchById200ResponseDevicesInner{}
	this.Href = href
	return &this
}

// NewFindBatchById200ResponseDevicesInnerWithDefaults instantiates a new FindBatchById200ResponseDevicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindBatchById200ResponseDevicesInnerWithDefaults() *FindBatchById200ResponseDevicesInner {
	this := FindBatchById200ResponseDevicesInner{}
	return &this
}

// GetHref returns the Href field value
func (o *FindBatchById200ResponseDevicesInner) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *FindBatchById200ResponseDevicesInner) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *FindBatchById200ResponseDevicesInner) SetHref(v string) {
	o.Href = v
}

func (o FindBatchById200ResponseDevicesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["href"] = o.Href
	}
	return json.Marshal(toSerialize)
}

type NullableFindBatchById200ResponseDevicesInner struct {
	value *FindBatchById200ResponseDevicesInner
	isSet bool
}

func (v NullableFindBatchById200ResponseDevicesInner) Get() *FindBatchById200ResponseDevicesInner {
	return v.value
}

func (v *NullableFindBatchById200ResponseDevicesInner) Set(val *FindBatchById200ResponseDevicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFindBatchById200ResponseDevicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFindBatchById200ResponseDevicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindBatchById200ResponseDevicesInner(val *FindBatchById200ResponseDevicesInner) *NullableFindBatchById200ResponseDevicesInner {
	return &NullableFindBatchById200ResponseDevicesInner{value: val, isSet: true}
}

func (v NullableFindBatchById200ResponseDevicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindBatchById200ResponseDevicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
