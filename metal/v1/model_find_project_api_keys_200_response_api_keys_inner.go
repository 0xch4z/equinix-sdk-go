/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// FindProjectAPIKeys200ResponseApiKeysInner struct for FindProjectAPIKeys200ResponseApiKeysInner
type FindProjectAPIKeys200ResponseApiKeysInner struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Available only for API keys
	Description *string                                           `json:"description,omitempty"`
	Id          *string                                           `json:"id,omitempty"`
	Project     *FindProjectAPIKeys200ResponseApiKeysInnerProject `json:"project,omitempty"`
	ReadOnly    *bool                                             `json:"read_only,omitempty"`
	Token       *string                                           `json:"token,omitempty"`
	UpdatedAt   *time.Time                                        `json:"updated_at,omitempty"`
	User        *FindProjectAPIKeys200ResponseApiKeysInnerUser    `json:"user,omitempty"`
}

// NewFindProjectAPIKeys200ResponseApiKeysInner instantiates a new FindProjectAPIKeys200ResponseApiKeysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindProjectAPIKeys200ResponseApiKeysInner() *FindProjectAPIKeys200ResponseApiKeysInner {
	this := FindProjectAPIKeys200ResponseApiKeysInner{}
	return &this
}

// NewFindProjectAPIKeys200ResponseApiKeysInnerWithDefaults instantiates a new FindProjectAPIKeys200ResponseApiKeysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindProjectAPIKeys200ResponseApiKeysInnerWithDefaults() *FindProjectAPIKeys200ResponseApiKeysInner {
	this := FindProjectAPIKeys200ResponseApiKeysInner{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetId(v string) {
	o.Id = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetProject() FindProjectAPIKeys200ResponseApiKeysInnerProject {
	if o == nil || o.Project == nil {
		var ret FindProjectAPIKeys200ResponseApiKeysInnerProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetProjectOk() (*FindProjectAPIKeys200ResponseApiKeysInnerProject, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given FindProjectAPIKeys200ResponseApiKeysInnerProject and assigns it to the Project field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetProject(v FindProjectAPIKeys200ResponseApiKeysInnerProject) {
	o.Project = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetToken(v string) {
	o.Token = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetUser() FindProjectAPIKeys200ResponseApiKeysInnerUser {
	if o == nil || o.User == nil {
		var ret FindProjectAPIKeys200ResponseApiKeysInnerUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) GetUserOk() (*FindProjectAPIKeys200ResponseApiKeysInnerUser, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given FindProjectAPIKeys200ResponseApiKeysInnerUser and assigns it to the User field.
func (o *FindProjectAPIKeys200ResponseApiKeysInner) SetUser(v FindProjectAPIKeys200ResponseApiKeysInnerUser) {
	o.User = &v
}

func (o FindProjectAPIKeys200ResponseApiKeysInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ReadOnly != nil {
		toSerialize["read_only"] = o.ReadOnly
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableFindProjectAPIKeys200ResponseApiKeysInner struct {
	value *FindProjectAPIKeys200ResponseApiKeysInner
	isSet bool
}

func (v NullableFindProjectAPIKeys200ResponseApiKeysInner) Get() *FindProjectAPIKeys200ResponseApiKeysInner {
	return v.value
}

func (v *NullableFindProjectAPIKeys200ResponseApiKeysInner) Set(val *FindProjectAPIKeys200ResponseApiKeysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFindProjectAPIKeys200ResponseApiKeysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFindProjectAPIKeys200ResponseApiKeysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindProjectAPIKeys200ResponseApiKeysInner(val *FindProjectAPIKeys200ResponseApiKeysInner) *NullableFindProjectAPIKeys200ResponseApiKeysInner {
	return &NullableFindProjectAPIKeys200ResponseApiKeysInner{value: val, isSet: true}
}

func (v NullableFindProjectAPIKeys200ResponseApiKeysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindProjectAPIKeys200ResponseApiKeysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
