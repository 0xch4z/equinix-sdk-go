/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ConvertLayer3RequestRequestIpsInner struct for ConvertLayer3RequestRequestIpsInner
type ConvertLayer3RequestRequestIpsInner struct {
	AddressFamily *int32 `json:"address_family,omitempty"`
	Public        *bool  `json:"public,omitempty"`
}

// NewConvertLayer3RequestRequestIpsInner instantiates a new ConvertLayer3RequestRequestIpsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertLayer3RequestRequestIpsInner() *ConvertLayer3RequestRequestIpsInner {
	this := ConvertLayer3RequestRequestIpsInner{}
	return &this
}

// NewConvertLayer3RequestRequestIpsInnerWithDefaults instantiates a new ConvertLayer3RequestRequestIpsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertLayer3RequestRequestIpsInnerWithDefaults() *ConvertLayer3RequestRequestIpsInner {
	this := ConvertLayer3RequestRequestIpsInner{}
	return &this
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *ConvertLayer3RequestRequestIpsInner) GetAddressFamily() int32 {
	if o == nil || o.AddressFamily == nil {
		var ret int32
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertLayer3RequestRequestIpsInner) GetAddressFamilyOk() (*int32, bool) {
	if o == nil || o.AddressFamily == nil {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *ConvertLayer3RequestRequestIpsInner) HasAddressFamily() bool {
	if o != nil && o.AddressFamily != nil {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given int32 and assigns it to the AddressFamily field.
func (o *ConvertLayer3RequestRequestIpsInner) SetAddressFamily(v int32) {
	o.AddressFamily = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *ConvertLayer3RequestRequestIpsInner) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertLayer3RequestRequestIpsInner) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *ConvertLayer3RequestRequestIpsInner) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *ConvertLayer3RequestRequestIpsInner) SetPublic(v bool) {
	o.Public = &v
}

func (o ConvertLayer3RequestRequestIpsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddressFamily != nil {
		toSerialize["address_family"] = o.AddressFamily
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	return json.Marshal(toSerialize)
}

type NullableConvertLayer3RequestRequestIpsInner struct {
	value *ConvertLayer3RequestRequestIpsInner
	isSet bool
}

func (v NullableConvertLayer3RequestRequestIpsInner) Get() *ConvertLayer3RequestRequestIpsInner {
	return v.value
}

func (v *NullableConvertLayer3RequestRequestIpsInner) Set(val *ConvertLayer3RequestRequestIpsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertLayer3RequestRequestIpsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertLayer3RequestRequestIpsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertLayer3RequestRequestIpsInner(val *ConvertLayer3RequestRequestIpsInner) *NullableConvertLayer3RequestRequestIpsInner {
	return &NullableConvertLayer3RequestRequestIpsInner{value: val, isSet: true}
}

func (v NullableConvertLayer3RequestRequestIpsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertLayer3RequestRequestIpsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
