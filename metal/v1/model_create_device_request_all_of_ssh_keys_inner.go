/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateDeviceRequestAllOfSshKeysInner struct for CreateDeviceRequestAllOfSshKeysInner
type CreateDeviceRequestAllOfSshKeysInner struct {
	Key   *string `json:"key,omitempty"`
	Label *string `json:"label,omitempty"`
}

// NewCreateDeviceRequestAllOfSshKeysInner instantiates a new CreateDeviceRequestAllOfSshKeysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceRequestAllOfSshKeysInner() *CreateDeviceRequestAllOfSshKeysInner {
	this := CreateDeviceRequestAllOfSshKeysInner{}
	return &this
}

// NewCreateDeviceRequestAllOfSshKeysInnerWithDefaults instantiates a new CreateDeviceRequestAllOfSshKeysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceRequestAllOfSshKeysInnerWithDefaults() *CreateDeviceRequestAllOfSshKeysInner {
	this := CreateDeviceRequestAllOfSshKeysInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CreateDeviceRequestAllOfSshKeysInner) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequestAllOfSshKeysInner) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CreateDeviceRequestAllOfSshKeysInner) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CreateDeviceRequestAllOfSshKeysInner) SetKey(v string) {
	o.Key = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateDeviceRequestAllOfSshKeysInner) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequestAllOfSshKeysInner) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateDeviceRequestAllOfSshKeysInner) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CreateDeviceRequestAllOfSshKeysInner) SetLabel(v string) {
	o.Label = &v
}

func (o CreateDeviceRequestAllOfSshKeysInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDeviceRequestAllOfSshKeysInner struct {
	value *CreateDeviceRequestAllOfSshKeysInner
	isSet bool
}

func (v NullableCreateDeviceRequestAllOfSshKeysInner) Get() *CreateDeviceRequestAllOfSshKeysInner {
	return v.value
}

func (v *NullableCreateDeviceRequestAllOfSshKeysInner) Set(val *CreateDeviceRequestAllOfSshKeysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceRequestAllOfSshKeysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceRequestAllOfSshKeysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceRequestAllOfSshKeysInner(val *CreateDeviceRequestAllOfSshKeysInner) *NullableCreateDeviceRequestAllOfSshKeysInner {
	return &NullableCreateDeviceRequestAllOfSshKeysInner{value: val, isSet: true}
}

func (v NullableCreateDeviceRequestAllOfSshKeysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceRequestAllOfSshKeysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
