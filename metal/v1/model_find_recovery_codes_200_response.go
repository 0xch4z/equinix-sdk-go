/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindRecoveryCodes200Response struct for FindRecoveryCodes200Response
type FindRecoveryCodes200Response struct {
	RecoveryCodes []string `json:"recovery_codes,omitempty"`
}

// NewFindRecoveryCodes200Response instantiates a new FindRecoveryCodes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindRecoveryCodes200Response() *FindRecoveryCodes200Response {
	this := FindRecoveryCodes200Response{}
	return &this
}

// NewFindRecoveryCodes200ResponseWithDefaults instantiates a new FindRecoveryCodes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindRecoveryCodes200ResponseWithDefaults() *FindRecoveryCodes200Response {
	this := FindRecoveryCodes200Response{}
	return &this
}

// GetRecoveryCodes returns the RecoveryCodes field value if set, zero value otherwise.
func (o *FindRecoveryCodes200Response) GetRecoveryCodes() []string {
	if o == nil || o.RecoveryCodes == nil {
		var ret []string
		return ret
	}
	return o.RecoveryCodes
}

// GetRecoveryCodesOk returns a tuple with the RecoveryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindRecoveryCodes200Response) GetRecoveryCodesOk() ([]string, bool) {
	if o == nil || o.RecoveryCodes == nil {
		return nil, false
	}
	return o.RecoveryCodes, true
}

// HasRecoveryCodes returns a boolean if a field has been set.
func (o *FindRecoveryCodes200Response) HasRecoveryCodes() bool {
	if o != nil && o.RecoveryCodes != nil {
		return true
	}

	return false
}

// SetRecoveryCodes gets a reference to the given []string and assigns it to the RecoveryCodes field.
func (o *FindRecoveryCodes200Response) SetRecoveryCodes(v []string) {
	o.RecoveryCodes = v
}

func (o FindRecoveryCodes200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoveryCodes != nil {
		toSerialize["recovery_codes"] = o.RecoveryCodes
	}
	return json.Marshal(toSerialize)
}

type NullableFindRecoveryCodes200Response struct {
	value *FindRecoveryCodes200Response
	isSet bool
}

func (v NullableFindRecoveryCodes200Response) Get() *FindRecoveryCodes200Response {
	return v.value
}

func (v *NullableFindRecoveryCodes200Response) Set(val *FindRecoveryCodes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindRecoveryCodes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindRecoveryCodes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindRecoveryCodes200Response(val *FindRecoveryCodes200Response) *NullableFindRecoveryCodes200Response {
	return &NullableFindRecoveryCodes200Response{value: val, isSet: true}
}

func (v NullableFindRecoveryCodes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindRecoveryCodes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
