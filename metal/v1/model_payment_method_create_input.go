/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// PaymentMethodCreateInput struct for PaymentMethodCreateInput
type PaymentMethodCreateInput struct {
	Default *bool  `json:"default,omitempty"`
	Name    string `json:"name"`
	Nonce   string `json:"nonce"`
}

// NewPaymentMethodCreateInput instantiates a new PaymentMethodCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodCreateInput(name string, nonce string) *PaymentMethodCreateInput {
	this := PaymentMethodCreateInput{}
	this.Name = name
	this.Nonce = nonce
	return &this
}

// NewPaymentMethodCreateInputWithDefaults instantiates a new PaymentMethodCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodCreateInputWithDefaults() *PaymentMethodCreateInput {
	this := PaymentMethodCreateInput{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *PaymentMethodCreateInput) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodCreateInput) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *PaymentMethodCreateInput) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *PaymentMethodCreateInput) SetDefault(v bool) {
	o.Default = &v
}

// GetName returns the Name field value
func (o *PaymentMethodCreateInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCreateInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PaymentMethodCreateInput) SetName(v string) {
	o.Name = v
}

// GetNonce returns the Nonce field value
func (o *PaymentMethodCreateInput) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCreateInput) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *PaymentMethodCreateInput) SetNonce(v string) {
	o.Nonce = v
}

func (o PaymentMethodCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["nonce"] = o.Nonce
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentMethodCreateInput struct {
	value *PaymentMethodCreateInput
	isSet bool
}

func (v NullablePaymentMethodCreateInput) Get() *PaymentMethodCreateInput {
	return v.value
}

func (v *NullablePaymentMethodCreateInput) Set(val *PaymentMethodCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodCreateInput(val *PaymentMethodCreateInput) *NullablePaymentMethodCreateInput {
	return &NullablePaymentMethodCreateInput{value: val, isSet: true}
}

func (v NullablePaymentMethodCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
