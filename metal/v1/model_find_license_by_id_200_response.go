/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindLicenseById200Response struct for FindLicenseById200Response
type FindLicenseById200Response struct {
	Description     *string                               `json:"description,omitempty"`
	Id              *string                               `json:"id,omitempty"`
	LicenseKey      *string                               `json:"license_key,omitempty"`
	LicenseeProduct *FindBatchById200ResponseDevicesInner `json:"licensee_product,omitempty"`
	Project         *FindBatchById200ResponseDevicesInner `json:"project,omitempty"`
	Size            *float32                              `json:"size,omitempty"`
}

// NewFindLicenseById200Response instantiates a new FindLicenseById200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindLicenseById200Response() *FindLicenseById200Response {
	this := FindLicenseById200Response{}
	return &this
}

// NewFindLicenseById200ResponseWithDefaults instantiates a new FindLicenseById200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindLicenseById200ResponseWithDefaults() *FindLicenseById200Response {
	this := FindLicenseById200Response{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FindLicenseById200Response) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindLicenseById200Response) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FindLicenseById200Response) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FindLicenseById200Response) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FindLicenseById200Response) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindLicenseById200Response) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FindLicenseById200Response) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FindLicenseById200Response) SetId(v string) {
	o.Id = &v
}

// GetLicenseKey returns the LicenseKey field value if set, zero value otherwise.
func (o *FindLicenseById200Response) GetLicenseKey() string {
	if o == nil || o.LicenseKey == nil {
		var ret string
		return ret
	}
	return *o.LicenseKey
}

// GetLicenseKeyOk returns a tuple with the LicenseKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindLicenseById200Response) GetLicenseKeyOk() (*string, bool) {
	if o == nil || o.LicenseKey == nil {
		return nil, false
	}
	return o.LicenseKey, true
}

// HasLicenseKey returns a boolean if a field has been set.
func (o *FindLicenseById200Response) HasLicenseKey() bool {
	if o != nil && o.LicenseKey != nil {
		return true
	}

	return false
}

// SetLicenseKey gets a reference to the given string and assigns it to the LicenseKey field.
func (o *FindLicenseById200Response) SetLicenseKey(v string) {
	o.LicenseKey = &v
}

// GetLicenseeProduct returns the LicenseeProduct field value if set, zero value otherwise.
func (o *FindLicenseById200Response) GetLicenseeProduct() FindBatchById200ResponseDevicesInner {
	if o == nil || o.LicenseeProduct == nil {
		var ret FindBatchById200ResponseDevicesInner
		return ret
	}
	return *o.LicenseeProduct
}

// GetLicenseeProductOk returns a tuple with the LicenseeProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindLicenseById200Response) GetLicenseeProductOk() (*FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || o.LicenseeProduct == nil {
		return nil, false
	}
	return o.LicenseeProduct, true
}

// HasLicenseeProduct returns a boolean if a field has been set.
func (o *FindLicenseById200Response) HasLicenseeProduct() bool {
	if o != nil && o.LicenseeProduct != nil {
		return true
	}

	return false
}

// SetLicenseeProduct gets a reference to the given FindBatchById200ResponseDevicesInner and assigns it to the LicenseeProduct field.
func (o *FindLicenseById200Response) SetLicenseeProduct(v FindBatchById200ResponseDevicesInner) {
	o.LicenseeProduct = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *FindLicenseById200Response) GetProject() FindBatchById200ResponseDevicesInner {
	if o == nil || o.Project == nil {
		var ret FindBatchById200ResponseDevicesInner
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindLicenseById200Response) GetProjectOk() (*FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *FindLicenseById200Response) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given FindBatchById200ResponseDevicesInner and assigns it to the Project field.
func (o *FindLicenseById200Response) SetProject(v FindBatchById200ResponseDevicesInner) {
	o.Project = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *FindLicenseById200Response) GetSize() float32 {
	if o == nil || o.Size == nil {
		var ret float32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindLicenseById200Response) GetSizeOk() (*float32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *FindLicenseById200Response) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given float32 and assigns it to the Size field.
func (o *FindLicenseById200Response) SetSize(v float32) {
	o.Size = &v
}

func (o FindLicenseById200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LicenseKey != nil {
		toSerialize["license_key"] = o.LicenseKey
	}
	if o.LicenseeProduct != nil {
		toSerialize["licensee_product"] = o.LicenseeProduct
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableFindLicenseById200Response struct {
	value *FindLicenseById200Response
	isSet bool
}

func (v NullableFindLicenseById200Response) Get() *FindLicenseById200Response {
	return v.value
}

func (v *NullableFindLicenseById200Response) Set(val *FindLicenseById200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindLicenseById200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindLicenseById200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindLicenseById200Response(val *FindLicenseById200Response) *NullableFindLicenseById200Response {
	return &NullableFindLicenseById200Response{value: val, isSet: true}
}

func (v NullableFindLicenseById200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindLicenseById200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
