/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindInvitations200Response struct for FindInvitations200Response
type FindInvitations200Response struct {
	Invitations []FindInvitations200ResponseInvitationsInner `json:"invitations,omitempty"`
}

// NewFindInvitations200Response instantiates a new FindInvitations200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindInvitations200Response() *FindInvitations200Response {
	this := FindInvitations200Response{}
	return &this
}

// NewFindInvitations200ResponseWithDefaults instantiates a new FindInvitations200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindInvitations200ResponseWithDefaults() *FindInvitations200Response {
	this := FindInvitations200Response{}
	return &this
}

// GetInvitations returns the Invitations field value if set, zero value otherwise.
func (o *FindInvitations200Response) GetInvitations() []FindInvitations200ResponseInvitationsInner {
	if o == nil || o.Invitations == nil {
		var ret []FindInvitations200ResponseInvitationsInner
		return ret
	}
	return o.Invitations
}

// GetInvitationsOk returns a tuple with the Invitations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindInvitations200Response) GetInvitationsOk() ([]FindInvitations200ResponseInvitationsInner, bool) {
	if o == nil || o.Invitations == nil {
		return nil, false
	}
	return o.Invitations, true
}

// HasInvitations returns a boolean if a field has been set.
func (o *FindInvitations200Response) HasInvitations() bool {
	if o != nil && o.Invitations != nil {
		return true
	}

	return false
}

// SetInvitations gets a reference to the given []FindInvitations200ResponseInvitationsInner and assigns it to the Invitations field.
func (o *FindInvitations200Response) SetInvitations(v []FindInvitations200ResponseInvitationsInner) {
	o.Invitations = v
}

func (o FindInvitations200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Invitations != nil {
		toSerialize["invitations"] = o.Invitations
	}
	return json.Marshal(toSerialize)
}

type NullableFindInvitations200Response struct {
	value *FindInvitations200Response
	isSet bool
}

func (v NullableFindInvitations200Response) Get() *FindInvitations200Response {
	return v.value
}

func (v *NullableFindInvitations200Response) Set(val *FindInvitations200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindInvitations200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindInvitations200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindInvitations200Response(val *FindInvitations200Response) *NullableFindInvitations200Response {
	return &NullableFindInvitations200Response{value: val, isSet: true}
}

func (v NullableFindInvitations200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindInvitations200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
