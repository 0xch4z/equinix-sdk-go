/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CreateEmailRequest struct for CreateEmailRequest
type CreateEmailRequest struct {
	Address string `json:"address"`
}

// NewCreateEmailRequest instantiates a new CreateEmailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmailRequest(address string) *CreateEmailRequest {
	this := CreateEmailRequest{}
	this.Address = address
	return &this
}

// NewCreateEmailRequestWithDefaults instantiates a new CreateEmailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmailRequestWithDefaults() *CreateEmailRequest {
	this := CreateEmailRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *CreateEmailRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *CreateEmailRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *CreateEmailRequest) SetAddress(v string) {
	o.Address = v
}

func (o CreateEmailRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableCreateEmailRequest struct {
	value *CreateEmailRequest
	isSet bool
}

func (v NullableCreateEmailRequest) Get() *CreateEmailRequest {
	return v.value
}

func (v *NullableCreateEmailRequest) Set(val *CreateEmailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmailRequest(val *CreateEmailRequest) *NullableCreateEmailRequest {
	return &NullableCreateEmailRequest{value: val, isSet: true}
}

func (v NullableCreateEmailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
