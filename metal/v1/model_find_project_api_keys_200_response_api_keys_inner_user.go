/*
Metal API

# Introduction Equinix Metal provides a RESTful HTTP API which can be reached at <https://api.equinix.com/metal/v1>. This document describes the API and how to use it.  The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account. Every feature of the Equinix Metal web interface is accessible through the API.  The API docs are generated from the Equinix Metal OpenAPI specification and are officially hosted at <https://metal.equinix.com/developers/api>.  # Common Parameters  The Equinix Metal API uses a few methods to minimize network traffic and improve throughput. These parameters are not used in all API calls, but are used often enough to warrant their own section. Look for these parameters in the documentation for the API calls that support them.  ## Pagination  Pagination is used to limit the number of results returned in a single request. The API will return a maximum of 100 results per page. To retrieve additional results, you can use the `page` and `per_page` query parameters.  The `page` parameter is used to specify the page number. The first page is `1`. The `per_page` parameter is used to specify the number of results per page. The maximum number of results differs by resource type.  ## Sorting  Where offered, the API allows you to sort results by a specific field. To sort results use the `sort_by` query parameter with the root level field name as the value. The `sort_direction` parameter is used to specify the sort direction, either either `asc` (ascending) or `desc` (descending).  ## Filtering  Filtering is used to limit the results returned in a single request. The API supports filtering by certain fields in the response. To filter results, you can use the field as a query parameter.  For example, to filter the IP list to only return public IPv4 addresses, you can filter by the `type` field, as in the following request:  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/projects/id/ips?type=public_ipv4 ```  Only IP addresses with the `type` field set to `public_ipv4` will be returned.  ## Searching  Searching is used to find matching resources using multiple field comparissons. The API supports searching in resources that define this behavior. The fields available for search differ by resource, as does the search strategy.  To search resources you can use the `search` query parameter.  ## Include and Exclude  For resources that contain references to other resources, sucha as a Device that refers to the Project it resides in, the Equinix Metal API will returns `href` values (API links) to the associated resource.  ```json {   ...   \"project\": {     \"href\": \"/metal/v1/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd\"   } } ```  If you're going need the project details, you can avoid a second API request.  Specify the contained `href` resources and collections that you'd like to have included in the response using the `include` query parameter.  For example:    ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=projects ```  The `include` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests where `href` resources are presented.  To have multiple resources include, use a comma-separated list (e.g. `?include=emails,projects,memberships`).  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=emails,projects,memberships ```  You may also include nested associations up to three levels deep using dot notation (`?include=memberships.projects`):  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=memberships.projects ```  To exclude resources, and optimize response delivery, use the `exclude` query parameter. The `exclude` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests for fields with nested object responses. When excluded, these fields will be replaced with an object that contains only an `href` field.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindProjectAPIKeys200ResponseApiKeysInnerUser struct for FindProjectAPIKeys200ResponseApiKeysInnerUser
type FindProjectAPIKeys200ResponseApiKeysInnerUser struct {
	AvatarThumbUrl   *string                                `json:"avatar_thumb_url,omitempty"`
	AvatarUrl        *string                                `json:"avatar_url,omitempty"`
	CreatedAt        *time.Time                             `json:"created_at,omitempty"`
	Customdata       map[string]interface{}                 `json:"customdata,omitempty"`
	Email            *string                                `json:"email,omitempty"`
	Emails           []FindBatchById200ResponseDevicesInner `json:"emails,omitempty"`
	FirstName        *string                                `json:"first_name,omitempty"`
	FraudScore       *string                                `json:"fraud_score,omitempty"`
	FullName         *string                                `json:"full_name,omitempty"`
	Href             *string                                `json:"href,omitempty"`
	Id               *string                                `json:"id,omitempty"`
	LastLoginAt      *time.Time                             `json:"last_login_at,omitempty"`
	LastName         *string                                `json:"last_name,omitempty"`
	MaxOrganizations *int32                                 `json:"max_organizations,omitempty"`
	MaxProjects      *int32                                 `json:"max_projects,omitempty"`
	PhoneNumber      *string                                `json:"phone_number,omitempty"`
	ShortId          *string                                `json:"short_id,omitempty"`
	Timezone         *string                                `json:"timezone,omitempty"`
	TwoFactorAuth    *string                                `json:"two_factor_auth,omitempty"`
	UpdatedAt        *time.Time                             `json:"updated_at,omitempty"`
}

// NewFindProjectAPIKeys200ResponseApiKeysInnerUser instantiates a new FindProjectAPIKeys200ResponseApiKeysInnerUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindProjectAPIKeys200ResponseApiKeysInnerUser() *FindProjectAPIKeys200ResponseApiKeysInnerUser {
	this := FindProjectAPIKeys200ResponseApiKeysInnerUser{}
	return &this
}

// NewFindProjectAPIKeys200ResponseApiKeysInnerUserWithDefaults instantiates a new FindProjectAPIKeys200ResponseApiKeysInnerUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindProjectAPIKeys200ResponseApiKeysInnerUserWithDefaults() *FindProjectAPIKeys200ResponseApiKeysInnerUser {
	this := FindProjectAPIKeys200ResponseApiKeysInnerUser{}
	return &this
}

// GetAvatarThumbUrl returns the AvatarThumbUrl field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetAvatarThumbUrl() string {
	if o == nil || isNil(o.AvatarThumbUrl) {
		var ret string
		return ret
	}
	return *o.AvatarThumbUrl
}

// GetAvatarThumbUrlOk returns a tuple with the AvatarThumbUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetAvatarThumbUrlOk() (*string, bool) {
	if o == nil || isNil(o.AvatarThumbUrl) {
		return nil, false
	}
	return o.AvatarThumbUrl, true
}

// HasAvatarThumbUrl returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasAvatarThumbUrl() bool {
	if o != nil && !isNil(o.AvatarThumbUrl) {
		return true
	}

	return false
}

// SetAvatarThumbUrl gets a reference to the given string and assigns it to the AvatarThumbUrl field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetAvatarThumbUrl(v string) {
	o.AvatarThumbUrl = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetAvatarUrl() string {
	if o == nil || isNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetAvatarUrlOk() (*string, bool) {
	if o == nil || isNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasAvatarUrl() bool {
	if o != nil && !isNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetCustomdata() map[string]interface{} {
	if o == nil || isNil(o.Customdata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetCustomdataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Customdata) {
		return map[string]interface{}{}, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasCustomdata() bool {
	if o != nil && !isNil(o.Customdata) {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given map[string]interface{} and assigns it to the Customdata field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetCustomdata(v map[string]interface{}) {
	o.Customdata = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetEmail(v string) {
	o.Email = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetEmails() []FindBatchById200ResponseDevicesInner {
	if o == nil || isNil(o.Emails) {
		var ret []FindBatchById200ResponseDevicesInner
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetEmailsOk() ([]FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || isNil(o.Emails) {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasEmails() bool {
	if o != nil && !isNil(o.Emails) {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []FindBatchById200ResponseDevicesInner and assigns it to the Emails field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetEmails(v []FindBatchById200ResponseDevicesInner) {
	o.Emails = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetFirstName() string {
	if o == nil || isNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetFirstNameOk() (*string, bool) {
	if o == nil || isNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasFirstName() bool {
	if o != nil && !isNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetFirstName(v string) {
	o.FirstName = &v
}

// GetFraudScore returns the FraudScore field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetFraudScore() string {
	if o == nil || isNil(o.FraudScore) {
		var ret string
		return ret
	}
	return *o.FraudScore
}

// GetFraudScoreOk returns a tuple with the FraudScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetFraudScoreOk() (*string, bool) {
	if o == nil || isNil(o.FraudScore) {
		return nil, false
	}
	return o.FraudScore, true
}

// HasFraudScore returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasFraudScore() bool {
	if o != nil && !isNil(o.FraudScore) {
		return true
	}

	return false
}

// SetFraudScore gets a reference to the given string and assigns it to the FraudScore field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetFraudScore(v string) {
	o.FraudScore = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetFullName() string {
	if o == nil || isNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetFullNameOk() (*string, bool) {
	if o == nil || isNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasFullName() bool {
	if o != nil && !isNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetFullName(v string) {
	o.FullName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetHref() string {
	if o == nil || isNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetHrefOk() (*string, bool) {
	if o == nil || isNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasHref() bool {
	if o != nil && !isNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetId(v string) {
	o.Id = &v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetLastLoginAt() time.Time {
	if o == nil || isNil(o.LastLoginAt) {
		var ret time.Time
		return ret
	}
	return *o.LastLoginAt
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetLastLoginAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastLoginAt) {
		return nil, false
	}
	return o.LastLoginAt, true
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasLastLoginAt() bool {
	if o != nil && !isNil(o.LastLoginAt) {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given time.Time and assigns it to the LastLoginAt field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetLastLoginAt(v time.Time) {
	o.LastLoginAt = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetLastName() string {
	if o == nil || isNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetLastNameOk() (*string, bool) {
	if o == nil || isNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasLastName() bool {
	if o != nil && !isNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetLastName(v string) {
	o.LastName = &v
}

// GetMaxOrganizations returns the MaxOrganizations field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetMaxOrganizations() int32 {
	if o == nil || isNil(o.MaxOrganizations) {
		var ret int32
		return ret
	}
	return *o.MaxOrganizations
}

// GetMaxOrganizationsOk returns a tuple with the MaxOrganizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetMaxOrganizationsOk() (*int32, bool) {
	if o == nil || isNil(o.MaxOrganizations) {
		return nil, false
	}
	return o.MaxOrganizations, true
}

// HasMaxOrganizations returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasMaxOrganizations() bool {
	if o != nil && !isNil(o.MaxOrganizations) {
		return true
	}

	return false
}

// SetMaxOrganizations gets a reference to the given int32 and assigns it to the MaxOrganizations field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetMaxOrganizations(v int32) {
	o.MaxOrganizations = &v
}

// GetMaxProjects returns the MaxProjects field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetMaxProjects() int32 {
	if o == nil || isNil(o.MaxProjects) {
		var ret int32
		return ret
	}
	return *o.MaxProjects
}

// GetMaxProjectsOk returns a tuple with the MaxProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetMaxProjectsOk() (*int32, bool) {
	if o == nil || isNil(o.MaxProjects) {
		return nil, false
	}
	return o.MaxProjects, true
}

// HasMaxProjects returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasMaxProjects() bool {
	if o != nil && !isNil(o.MaxProjects) {
		return true
	}

	return false
}

// SetMaxProjects gets a reference to the given int32 and assigns it to the MaxProjects field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetMaxProjects(v int32) {
	o.MaxProjects = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetPhoneNumber() string {
	if o == nil || isNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetPhoneNumberOk() (*string, bool) {
	if o == nil || isNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasPhoneNumber() bool {
	if o != nil && !isNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetShortId returns the ShortId field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetShortId() string {
	if o == nil || isNil(o.ShortId) {
		var ret string
		return ret
	}
	return *o.ShortId
}

// GetShortIdOk returns a tuple with the ShortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetShortIdOk() (*string, bool) {
	if o == nil || isNil(o.ShortId) {
		return nil, false
	}
	return o.ShortId, true
}

// HasShortId returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasShortId() bool {
	if o != nil && !isNil(o.ShortId) {
		return true
	}

	return false
}

// SetShortId gets a reference to the given string and assigns it to the ShortId field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetShortId(v string) {
	o.ShortId = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetTimezone() string {
	if o == nil || isNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetTimezoneOk() (*string, bool) {
	if o == nil || isNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasTimezone() bool {
	if o != nil && !isNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetTimezone(v string) {
	o.Timezone = &v
}

// GetTwoFactorAuth returns the TwoFactorAuth field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetTwoFactorAuth() string {
	if o == nil || isNil(o.TwoFactorAuth) {
		var ret string
		return ret
	}
	return *o.TwoFactorAuth
}

// GetTwoFactorAuthOk returns a tuple with the TwoFactorAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetTwoFactorAuthOk() (*string, bool) {
	if o == nil || isNil(o.TwoFactorAuth) {
		return nil, false
	}
	return o.TwoFactorAuth, true
}

// HasTwoFactorAuth returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasTwoFactorAuth() bool {
	if o != nil && !isNil(o.TwoFactorAuth) {
		return true
	}

	return false
}

// SetTwoFactorAuth gets a reference to the given string and assigns it to the TwoFactorAuth field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetTwoFactorAuth(v string) {
	o.TwoFactorAuth = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FindProjectAPIKeys200ResponseApiKeysInnerUser) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o FindProjectAPIKeys200ResponseApiKeysInnerUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AvatarThumbUrl) {
		toSerialize["avatar_thumb_url"] = o.AvatarThumbUrl
	}
	if !isNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.Customdata) {
		toSerialize["customdata"] = o.Customdata
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Emails) {
		toSerialize["emails"] = o.Emails
	}
	if !isNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !isNil(o.FraudScore) {
		toSerialize["fraud_score"] = o.FraudScore
	}
	if !isNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	if !isNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.LastLoginAt) {
		toSerialize["last_login_at"] = o.LastLoginAt
	}
	if !isNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !isNil(o.MaxOrganizations) {
		toSerialize["max_organizations"] = o.MaxOrganizations
	}
	if !isNil(o.MaxProjects) {
		toSerialize["max_projects"] = o.MaxProjects
	}
	if !isNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !isNil(o.ShortId) {
		toSerialize["short_id"] = o.ShortId
	}
	if !isNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !isNil(o.TwoFactorAuth) {
		toSerialize["two_factor_auth"] = o.TwoFactorAuth
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableFindProjectAPIKeys200ResponseApiKeysInnerUser struct {
	value *FindProjectAPIKeys200ResponseApiKeysInnerUser
	isSet bool
}

func (v NullableFindProjectAPIKeys200ResponseApiKeysInnerUser) Get() *FindProjectAPIKeys200ResponseApiKeysInnerUser {
	return v.value
}

func (v *NullableFindProjectAPIKeys200ResponseApiKeysInnerUser) Set(val *FindProjectAPIKeys200ResponseApiKeysInnerUser) {
	v.value = val
	v.isSet = true
}

func (v NullableFindProjectAPIKeys200ResponseApiKeysInnerUser) IsSet() bool {
	return v.isSet
}

func (v *NullableFindProjectAPIKeys200ResponseApiKeysInnerUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindProjectAPIKeys200ResponseApiKeysInnerUser(val *FindProjectAPIKeys200ResponseApiKeysInnerUser) *NullableFindProjectAPIKeys200ResponseApiKeysInnerUser {
	return &NullableFindProjectAPIKeys200ResponseApiKeysInnerUser{value: val, isSet: true}
}

func (v NullableFindProjectAPIKeys200ResponseApiKeysInnerUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindProjectAPIKeys200ResponseApiKeysInnerUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
