/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ResetPassword201Response struct for ResetPassword201Response
type ResetPassword201Response struct {
	NewPassword *string `json:"new_password,omitempty"`
}

// NewResetPassword201Response instantiates a new ResetPassword201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetPassword201Response() *ResetPassword201Response {
	this := ResetPassword201Response{}
	return &this
}

// NewResetPassword201ResponseWithDefaults instantiates a new ResetPassword201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetPassword201ResponseWithDefaults() *ResetPassword201Response {
	this := ResetPassword201Response{}
	return &this
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *ResetPassword201Response) GetNewPassword() string {
	if o == nil || o.NewPassword == nil {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResetPassword201Response) GetNewPasswordOk() (*string, bool) {
	if o == nil || o.NewPassword == nil {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *ResetPassword201Response) HasNewPassword() bool {
	if o != nil && o.NewPassword != nil {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *ResetPassword201Response) SetNewPassword(v string) {
	o.NewPassword = &v
}

func (o ResetPassword201Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NewPassword != nil {
		toSerialize["new_password"] = o.NewPassword
	}
	return json.Marshal(toSerialize)
}

type NullableResetPassword201Response struct {
	value *ResetPassword201Response
	isSet bool
}

func (v NullableResetPassword201Response) Get() *ResetPassword201Response {
	return v.value
}

func (v *NullableResetPassword201Response) Set(val *ResetPassword201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableResetPassword201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableResetPassword201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetPassword201Response(val *ResetPassword201Response) *NullableResetPassword201Response {
	return &NullableResetPassword201Response{value: val, isSet: true}
}

func (v NullableResetPassword201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetPassword201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
