/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// VrfMetalGatewayCreateInput struct for VrfMetalGatewayCreateInput
type VrfMetalGatewayCreateInput struct {
	// The UUID an a VRF IP Reservation that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the VRF IP Reservation and the Virtual Network must reside in the same Metro.
	IpReservationId string `json:"ip_reservation_id"`
	// THe UUID of a Metro Virtual Network that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the Virtual Network and the VRF IP Reservation must reside in the same metro.
	VirtualNetworkId string `json:"virtual_network_id"`
}

// NewVrfMetalGatewayCreateInput instantiates a new VrfMetalGatewayCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVrfMetalGatewayCreateInput(ipReservationId string, virtualNetworkId string) *VrfMetalGatewayCreateInput {
	this := VrfMetalGatewayCreateInput{}
	this.IpReservationId = ipReservationId
	this.VirtualNetworkId = virtualNetworkId
	return &this
}

// NewVrfMetalGatewayCreateInputWithDefaults instantiates a new VrfMetalGatewayCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVrfMetalGatewayCreateInputWithDefaults() *VrfMetalGatewayCreateInput {
	this := VrfMetalGatewayCreateInput{}
	return &this
}

// GetIpReservationId returns the IpReservationId field value
func (o *VrfMetalGatewayCreateInput) GetIpReservationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpReservationId
}

// GetIpReservationIdOk returns a tuple with the IpReservationId field value
// and a boolean to check if the value has been set.
func (o *VrfMetalGatewayCreateInput) GetIpReservationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpReservationId, true
}

// SetIpReservationId sets field value
func (o *VrfMetalGatewayCreateInput) SetIpReservationId(v string) {
	o.IpReservationId = v
}

// GetVirtualNetworkId returns the VirtualNetworkId field value
func (o *VrfMetalGatewayCreateInput) GetVirtualNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualNetworkId
}

// GetVirtualNetworkIdOk returns a tuple with the VirtualNetworkId field value
// and a boolean to check if the value has been set.
func (o *VrfMetalGatewayCreateInput) GetVirtualNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualNetworkId, true
}

// SetVirtualNetworkId sets field value
func (o *VrfMetalGatewayCreateInput) SetVirtualNetworkId(v string) {
	o.VirtualNetworkId = v
}

func (o VrfMetalGatewayCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ip_reservation_id"] = o.IpReservationId
	}
	if true {
		toSerialize["virtual_network_id"] = o.VirtualNetworkId
	}
	return json.Marshal(toSerialize)
}

type NullableVrfMetalGatewayCreateInput struct {
	value *VrfMetalGatewayCreateInput
	isSet bool
}

func (v NullableVrfMetalGatewayCreateInput) Get() *VrfMetalGatewayCreateInput {
	return v.value
}

func (v *NullableVrfMetalGatewayCreateInput) Set(val *VrfMetalGatewayCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVrfMetalGatewayCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVrfMetalGatewayCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVrfMetalGatewayCreateInput(val *VrfMetalGatewayCreateInput) *NullableVrfMetalGatewayCreateInput {
	return &NullableVrfMetalGatewayCreateInput{value: val, isSet: true}
}

func (v NullableVrfMetalGatewayCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVrfMetalGatewayCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
