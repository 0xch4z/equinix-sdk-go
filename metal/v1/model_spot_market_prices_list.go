/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// SpotMarketPricesList struct for SpotMarketPricesList
type SpotMarketPricesList struct {
	SpotMarketPrices *SpotPricesReport `json:"spot_market_prices,omitempty"`
}

// NewSpotMarketPricesList instantiates a new SpotMarketPricesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotMarketPricesList() *SpotMarketPricesList {
	this := SpotMarketPricesList{}
	return &this
}

// NewSpotMarketPricesListWithDefaults instantiates a new SpotMarketPricesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotMarketPricesListWithDefaults() *SpotMarketPricesList {
	this := SpotMarketPricesList{}
	return &this
}

// GetSpotMarketPrices returns the SpotMarketPrices field value if set, zero value otherwise.
func (o *SpotMarketPricesList) GetSpotMarketPrices() SpotPricesReport {
	if o == nil || o.SpotMarketPrices == nil {
		var ret SpotPricesReport
		return ret
	}
	return *o.SpotMarketPrices
}

// GetSpotMarketPricesOk returns a tuple with the SpotMarketPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotMarketPricesList) GetSpotMarketPricesOk() (*SpotPricesReport, bool) {
	if o == nil || o.SpotMarketPrices == nil {
		return nil, false
	}
	return o.SpotMarketPrices, true
}

// HasSpotMarketPrices returns a boolean if a field has been set.
func (o *SpotMarketPricesList) HasSpotMarketPrices() bool {
	if o != nil && o.SpotMarketPrices != nil {
		return true
	}

	return false
}

// SetSpotMarketPrices gets a reference to the given SpotPricesReport and assigns it to the SpotMarketPrices field.
func (o *SpotMarketPricesList) SetSpotMarketPrices(v SpotPricesReport) {
	o.SpotMarketPrices = &v
}

func (o SpotMarketPricesList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SpotMarketPrices != nil {
		toSerialize["spot_market_prices"] = o.SpotMarketPrices
	}
	return json.Marshal(toSerialize)
}

type NullableSpotMarketPricesList struct {
	value *SpotMarketPricesList
	isSet bool
}

func (v NullableSpotMarketPricesList) Get() *SpotMarketPricesList {
	return v.value
}

func (v *NullableSpotMarketPricesList) Set(val *SpotMarketPricesList) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotMarketPricesList) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotMarketPricesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotMarketPricesList(val *SpotMarketPricesList) *NullableSpotMarketPricesList {
	return &NullableSpotMarketPricesList{value: val, isSet: true}
}

func (v NullableSpotMarketPricesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotMarketPricesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
