/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CapacityList struct for CapacityList
type CapacityList struct {
	Capacity *FindCapacityForFacility200ResponseCapacity `json:"capacity,omitempty"`
}

// NewCapacityList instantiates a new CapacityList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityList() *CapacityList {
	this := CapacityList{}
	return &this
}

// NewCapacityListWithDefaults instantiates a new CapacityList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityListWithDefaults() *CapacityList {
	this := CapacityList{}
	return &this
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *CapacityList) GetCapacity() FindCapacityForFacility200ResponseCapacity {
	if o == nil || o.Capacity == nil {
		var ret FindCapacityForFacility200ResponseCapacity
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityList) GetCapacityOk() (*FindCapacityForFacility200ResponseCapacity, bool) {
	if o == nil || o.Capacity == nil {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *CapacityList) HasCapacity() bool {
	if o != nil && o.Capacity != nil {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given FindCapacityForFacility200ResponseCapacity and assigns it to the Capacity field.
func (o *CapacityList) SetCapacity(v FindCapacityForFacility200ResponseCapacity) {
	o.Capacity = &v
}

func (o CapacityList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capacity != nil {
		toSerialize["capacity"] = o.Capacity
	}
	return json.Marshal(toSerialize)
}

type NullableCapacityList struct {
	value *CapacityList
	isSet bool
}

func (v NullableCapacityList) Get() *CapacityList {
	return v.value
}

func (v *NullableCapacityList) Set(val *CapacityList) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityList) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityList(val *CapacityList) *NullableCapacityList {
	return &NullableCapacityList{value: val, isSet: true}
}

func (v NullableCapacityList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
