/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// PortVlanAssignmentList struct for PortVlanAssignmentList
type PortVlanAssignmentList struct {
	VlanAssignments []PortVlanAssignment `json:"vlan_assignments,omitempty"`
}

// NewPortVlanAssignmentList instantiates a new PortVlanAssignmentList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortVlanAssignmentList() *PortVlanAssignmentList {
	this := PortVlanAssignmentList{}
	return &this
}

// NewPortVlanAssignmentListWithDefaults instantiates a new PortVlanAssignmentList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortVlanAssignmentListWithDefaults() *PortVlanAssignmentList {
	this := PortVlanAssignmentList{}
	return &this
}

// GetVlanAssignments returns the VlanAssignments field value if set, zero value otherwise.
func (o *PortVlanAssignmentList) GetVlanAssignments() []PortVlanAssignment {
	if o == nil || o.VlanAssignments == nil {
		var ret []PortVlanAssignment
		return ret
	}
	return o.VlanAssignments
}

// GetVlanAssignmentsOk returns a tuple with the VlanAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentList) GetVlanAssignmentsOk() ([]PortVlanAssignment, bool) {
	if o == nil || o.VlanAssignments == nil {
		return nil, false
	}
	return o.VlanAssignments, true
}

// HasVlanAssignments returns a boolean if a field has been set.
func (o *PortVlanAssignmentList) HasVlanAssignments() bool {
	if o != nil && o.VlanAssignments != nil {
		return true
	}

	return false
}

// SetVlanAssignments gets a reference to the given []PortVlanAssignment and assigns it to the VlanAssignments field.
func (o *PortVlanAssignmentList) SetVlanAssignments(v []PortVlanAssignment) {
	o.VlanAssignments = v
}

func (o PortVlanAssignmentList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VlanAssignments != nil {
		toSerialize["vlan_assignments"] = o.VlanAssignments
	}
	return json.Marshal(toSerialize)
}

type NullablePortVlanAssignmentList struct {
	value *PortVlanAssignmentList
	isSet bool
}

func (v NullablePortVlanAssignmentList) Get() *PortVlanAssignmentList {
	return v.value
}

func (v *NullablePortVlanAssignmentList) Set(val *PortVlanAssignmentList) {
	v.value = val
	v.isSet = true
}

func (v NullablePortVlanAssignmentList) IsSet() bool {
	return v.isSet
}

func (v *NullablePortVlanAssignmentList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortVlanAssignmentList(val *PortVlanAssignmentList) *NullablePortVlanAssignmentList {
	return &NullablePortVlanAssignmentList{value: val, isSet: true}
}

func (v NullablePortVlanAssignmentList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortVlanAssignmentList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
