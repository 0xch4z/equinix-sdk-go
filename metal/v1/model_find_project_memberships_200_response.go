/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindProjectMemberships200Response struct for FindProjectMemberships200Response
type FindProjectMemberships200Response struct {
	Memberships []FindInvitations200ResponseInvitationsInner `json:"memberships,omitempty"`
}

// NewFindProjectMemberships200Response instantiates a new FindProjectMemberships200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindProjectMemberships200Response() *FindProjectMemberships200Response {
	this := FindProjectMemberships200Response{}
	return &this
}

// NewFindProjectMemberships200ResponseWithDefaults instantiates a new FindProjectMemberships200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindProjectMemberships200ResponseWithDefaults() *FindProjectMemberships200Response {
	this := FindProjectMemberships200Response{}
	return &this
}

// GetMemberships returns the Memberships field value if set, zero value otherwise.
func (o *FindProjectMemberships200Response) GetMemberships() []FindInvitations200ResponseInvitationsInner {
	if o == nil || o.Memberships == nil {
		var ret []FindInvitations200ResponseInvitationsInner
		return ret
	}
	return o.Memberships
}

// GetMembershipsOk returns a tuple with the Memberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindProjectMemberships200Response) GetMembershipsOk() ([]FindInvitations200ResponseInvitationsInner, bool) {
	if o == nil || o.Memberships == nil {
		return nil, false
	}
	return o.Memberships, true
}

// HasMemberships returns a boolean if a field has been set.
func (o *FindProjectMemberships200Response) HasMemberships() bool {
	if o != nil && o.Memberships != nil {
		return true
	}

	return false
}

// SetMemberships gets a reference to the given []FindInvitations200ResponseInvitationsInner and assigns it to the Memberships field.
func (o *FindProjectMemberships200Response) SetMemberships(v []FindInvitations200ResponseInvitationsInner) {
	o.Memberships = v
}

func (o FindProjectMemberships200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Memberships != nil {
		toSerialize["memberships"] = o.Memberships
	}
	return json.Marshal(toSerialize)
}

type NullableFindProjectMemberships200Response struct {
	value *FindProjectMemberships200Response
	isSet bool
}

func (v NullableFindProjectMemberships200Response) Get() *FindProjectMemberships200Response {
	return v.value
}

func (v *NullableFindProjectMemberships200Response) Set(val *FindProjectMemberships200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindProjectMemberships200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindProjectMemberships200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindProjectMemberships200Response(val *FindProjectMemberships200Response) *NullableFindProjectMemberships200Response {
	return &NullableFindProjectMemberships200Response{value: val, isSet: true}
}

func (v NullableFindProjectMemberships200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindProjectMemberships200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
