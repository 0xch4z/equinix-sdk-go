/*
Metal API

# Introduction Equinix Metal provides a RESTful HTTP API which can be reached at <https://api.equinix.com/metal/v1>. This document describes the API and how to use it.  The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account. Every feature of the Equinix Metal web interface is accessible through the API.  The API docs are generated from the Equinix Metal OpenAPI specification and are officially hosted at <https://metal.equinix.com/developers/api>.  # Common Parameters  The Equinix Metal API uses a few methods to minimize network traffic and improve throughput. These parameters are not used in all API calls, but are used often enough to warrant their own section. Look for these parameters in the documentation for the API calls that support them.  ## Pagination  Pagination is used to limit the number of results returned in a single request. The API will return a maximum of 100 results per page. To retrieve additional results, you can use the `page` and `per_page` query parameters.  The `page` parameter is used to specify the page number. The first page is `1`. The `per_page` parameter is used to specify the number of results per page. The maximum number of results differs by resource type.  ## Sorting  Where offered, the API allows you to sort results by a specific field. To sort results use the `sort_by` query parameter with the root level field name as the value. The `sort_direction` parameter is used to specify the sort direction, either either `asc` (ascending) or `desc` (descending).  ## Filtering  Filtering is used to limit the results returned in a single request. The API supports filtering by certain fields in the response. To filter results, you can use the field as a query parameter.  For example, to filter the IP list to only return public IPv4 addresses, you can filter by the `type` field, as in the following request:  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/projects/id/ips?type=public_ipv4 ```  Only IP addresses with the `type` field set to `public_ipv4` will be returned.  ## Searching  Searching is used to find matching resources using multiple field comparissons. The API supports searching in resources that define this behavior. The fields available for search differ by resource, as does the search strategy.  To search resources you can use the `search` query parameter.  ## Include and Exclude  For resources that contain references to other resources, sucha as a Device that refers to the Project it resides in, the Equinix Metal API will returns `href` values (API links) to the associated resource.  ```json {   ...   \"project\": {     \"href\": \"/metal/v1/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd\"   } } ```  If you're going need the project details, you can avoid a second API request.  Specify the contained `href` resources and collections that you'd like to have included in the response using the `include` query parameter.  For example:    ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=projects ```  The `include` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests where `href` resources are presented.  To have multiple resources include, use a comma-separated list (e.g. `?include=emails,projects,memberships`).  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=emails,projects,memberships ```  You may also include nested associations up to three levels deep using dot notation (`?include=memberships.projects`):  ```sh curl -H 'X-Auth-Token: my_authentication_token' \\   https://api.equinix.com/metal/v1/user?include=memberships.projects ```  To exclude resources, and optimize response delivery, use the `exclude` query parameter. The `exclude` parameter is generally accepted in `GET`, `POST`, `PUT`, and `PATCH` requests for fields with nested object responses. When excluded, these fields will be replaced with an object that contains only an `href` field.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// FindMetalGatewayById200ResponseOneOf1 struct for FindMetalGatewayById200ResponseOneOf1
type FindMetalGatewayById200ResponseOneOf1 struct {
	CreatedAt     *time.Time                                                                                  `json:"created_at,omitempty"`
	CreatedBy     *FindBatchById200ResponseDevicesInner                                                       `json:"created_by,omitempty"`
	Href          *string                                                                                     `json:"href,omitempty"`
	Id            *string                                                                                     `json:"id,omitempty"`
	IpReservation *FindIPAddressById200ResponseOneOf1                                                         `json:"ip_reservation,omitempty"`
	Project       *GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject `json:"project,omitempty"`
	// The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.
	State          *string                                                                              `json:"state,omitempty"`
	UpdatedAt      *time.Time                                                                           `json:"updated_at,omitempty"`
	VirtualNetwork *FindDeviceById200ResponseNetworkPortsInnerNativeVirtualNetwork                      `json:"virtual_network,omitempty"`
	Vrf            *GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1Vrf `json:"vrf,omitempty"`
}

// NewFindMetalGatewayById200ResponseOneOf1 instantiates a new FindMetalGatewayById200ResponseOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindMetalGatewayById200ResponseOneOf1() *FindMetalGatewayById200ResponseOneOf1 {
	this := FindMetalGatewayById200ResponseOneOf1{}
	return &this
}

// NewFindMetalGatewayById200ResponseOneOf1WithDefaults instantiates a new FindMetalGatewayById200ResponseOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindMetalGatewayById200ResponseOneOf1WithDefaults() *FindMetalGatewayById200ResponseOneOf1 {
	this := FindMetalGatewayById200ResponseOneOf1{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetCreatedBy() FindBatchById200ResponseDevicesInner {
	if o == nil || isNil(o.CreatedBy) {
		var ret FindBatchById200ResponseDevicesInner
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetCreatedByOk() (*FindBatchById200ResponseDevicesInner, bool) {
	if o == nil || isNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasCreatedBy() bool {
	if o != nil && !isNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given FindBatchById200ResponseDevicesInner and assigns it to the CreatedBy field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetCreatedBy(v FindBatchById200ResponseDevicesInner) {
	o.CreatedBy = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetHref() string {
	if o == nil || isNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetHrefOk() (*string, bool) {
	if o == nil || isNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasHref() bool {
	if o != nil && !isNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetId(v string) {
	o.Id = &v
}

// GetIpReservation returns the IpReservation field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetIpReservation() FindIPAddressById200ResponseOneOf1 {
	if o == nil || isNil(o.IpReservation) {
		var ret FindIPAddressById200ResponseOneOf1
		return ret
	}
	return *o.IpReservation
}

// GetIpReservationOk returns a tuple with the IpReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetIpReservationOk() (*FindIPAddressById200ResponseOneOf1, bool) {
	if o == nil || isNil(o.IpReservation) {
		return nil, false
	}
	return o.IpReservation, true
}

// HasIpReservation returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasIpReservation() bool {
	if o != nil && !isNil(o.IpReservation) {
		return true
	}

	return false
}

// SetIpReservation gets a reference to the given FindIPAddressById200ResponseOneOf1 and assigns it to the IpReservation field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetIpReservation(v FindIPAddressById200ResponseOneOf1) {
	o.IpReservation = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetProject() GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject {
	if o == nil || isNil(o.Project) {
		var ret GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetProjectOk() (*GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject, bool) {
	if o == nil || isNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasProject() bool {
	if o != nil && !isNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject and assigns it to the Project field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetProject(v GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1VrfProject) {
	o.Project = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVirtualNetwork returns the VirtualNetwork field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetVirtualNetwork() FindDeviceById200ResponseNetworkPortsInnerNativeVirtualNetwork {
	if o == nil || isNil(o.VirtualNetwork) {
		var ret FindDeviceById200ResponseNetworkPortsInnerNativeVirtualNetwork
		return ret
	}
	return *o.VirtualNetwork
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetVirtualNetworkOk() (*FindDeviceById200ResponseNetworkPortsInnerNativeVirtualNetwork, bool) {
	if o == nil || isNil(o.VirtualNetwork) {
		return nil, false
	}
	return o.VirtualNetwork, true
}

// HasVirtualNetwork returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasVirtualNetwork() bool {
	if o != nil && !isNil(o.VirtualNetwork) {
		return true
	}

	return false
}

// SetVirtualNetwork gets a reference to the given FindDeviceById200ResponseNetworkPortsInnerNativeVirtualNetwork and assigns it to the VirtualNetwork field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetVirtualNetwork(v FindDeviceById200ResponseNetworkPortsInnerNativeVirtualNetwork) {
	o.VirtualNetwork = &v
}

// GetVrf returns the Vrf field value if set, zero value otherwise.
func (o *FindMetalGatewayById200ResponseOneOf1) GetVrf() GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1Vrf {
	if o == nil || isNil(o.Vrf) {
		var ret GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1Vrf
		return ret
	}
	return *o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) GetVrfOk() (*GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1Vrf, bool) {
	if o == nil || isNil(o.Vrf) {
		return nil, false
	}
	return o.Vrf, true
}

// HasVrf returns a boolean if a field has been set.
func (o *FindMetalGatewayById200ResponseOneOf1) HasVrf() bool {
	if o != nil && !isNil(o.Vrf) {
		return true
	}

	return false
}

// SetVrf gets a reference to the given GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1Vrf and assigns it to the Vrf field.
func (o *FindMetalGatewayById200ResponseOneOf1) SetVrf(v GetInterconnection200ResponsePortsInnerVirtualCircuitsVirtualCircuitsInnerAnyOf1Vrf) {
	o.Vrf = &v
}

func (o FindMetalGatewayById200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !isNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.IpReservation) {
		toSerialize["ip_reservation"] = o.IpReservation
	}
	if !isNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.VirtualNetwork) {
		toSerialize["virtual_network"] = o.VirtualNetwork
	}
	if !isNil(o.Vrf) {
		toSerialize["vrf"] = o.Vrf
	}
	return json.Marshal(toSerialize)
}

type NullableFindMetalGatewayById200ResponseOneOf1 struct {
	value *FindMetalGatewayById200ResponseOneOf1
	isSet bool
}

func (v NullableFindMetalGatewayById200ResponseOneOf1) Get() *FindMetalGatewayById200ResponseOneOf1 {
	return v.value
}

func (v *NullableFindMetalGatewayById200ResponseOneOf1) Set(val *FindMetalGatewayById200ResponseOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableFindMetalGatewayById200ResponseOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableFindMetalGatewayById200ResponseOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindMetalGatewayById200ResponseOneOf1(val *FindMetalGatewayById200ResponseOneOf1) *NullableFindMetalGatewayById200ResponseOneOf1 {
	return &NullableFindMetalGatewayById200ResponseOneOf1{value: val, isSet: true}
}

func (v NullableFindMetalGatewayById200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindMetalGatewayById200ResponseOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
