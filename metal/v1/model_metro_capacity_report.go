/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// MetroCapacityReport struct for MetroCapacityReport
type MetroCapacityReport struct {
	Am *FindCapacityForFacility200ResponseCapacityAms1 `json:"am,omitempty"`
	At *FindCapacityForFacility200ResponseCapacityAms1 `json:"at,omitempty"`
	Ch *FindCapacityForFacility200ResponseCapacityAms1 `json:"ch,omitempty"`
	Da *FindCapacityForFacility200ResponseCapacityAms1 `json:"da,omitempty"`
	Dc *FindCapacityForFacility200ResponseCapacityAms1 `json:"dc,omitempty"`
	Fr *FindCapacityForFacility200ResponseCapacityAms1 `json:"fr,omitempty"`
	Hk *FindCapacityForFacility200ResponseCapacityAms1 `json:"hk,omitempty"`
	La *FindCapacityForFacility200ResponseCapacityAms1 `json:"la,omitempty"`
	Ld *FindCapacityForFacility200ResponseCapacityAms1 `json:"ld,omitempty"`
	Md *FindCapacityForFacility200ResponseCapacityAms1 `json:"md,omitempty"`
	Ny *FindCapacityForFacility200ResponseCapacityAms1 `json:"ny,omitempty"`
	Pa *FindCapacityForFacility200ResponseCapacityAms1 `json:"pa,omitempty"`
	Se *FindCapacityForFacility200ResponseCapacityAms1 `json:"se,omitempty"`
	Sg *FindCapacityForFacility200ResponseCapacityAms1 `json:"sg,omitempty"`
	Sl *FindCapacityForFacility200ResponseCapacityAms1 `json:"sl,omitempty"`
	Sp *FindCapacityForFacility200ResponseCapacityAms1 `json:"sp,omitempty"`
	Sv *FindCapacityForFacility200ResponseCapacityAms1 `json:"sv,omitempty"`
	Sy *FindCapacityForFacility200ResponseCapacityAms1 `json:"sy,omitempty"`
	Tr *FindCapacityForFacility200ResponseCapacityAms1 `json:"tr,omitempty"`
	Ty *FindCapacityForFacility200ResponseCapacityAms1 `json:"ty,omitempty"`
}

// NewMetroCapacityReport instantiates a new MetroCapacityReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetroCapacityReport() *MetroCapacityReport {
	this := MetroCapacityReport{}
	return &this
}

// NewMetroCapacityReportWithDefaults instantiates a new MetroCapacityReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetroCapacityReportWithDefaults() *MetroCapacityReport {
	this := MetroCapacityReport{}
	return &this
}

// GetAm returns the Am field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetAm() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Am == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Am
}

// GetAmOk returns a tuple with the Am field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetAmOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Am == nil {
		return nil, false
	}
	return o.Am, true
}

// HasAm returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasAm() bool {
	if o != nil && o.Am != nil {
		return true
	}

	return false
}

// SetAm gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Am field.
func (o *MetroCapacityReport) SetAm(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Am = &v
}

// GetAt returns the At field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetAt() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.At == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.At
}

// GetAtOk returns a tuple with the At field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetAtOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.At == nil {
		return nil, false
	}
	return o.At, true
}

// HasAt returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasAt() bool {
	if o != nil && o.At != nil {
		return true
	}

	return false
}

// SetAt gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the At field.
func (o *MetroCapacityReport) SetAt(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.At = &v
}

// GetCh returns the Ch field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetCh() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Ch == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Ch
}

// GetChOk returns a tuple with the Ch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetChOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Ch == nil {
		return nil, false
	}
	return o.Ch, true
}

// HasCh returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasCh() bool {
	if o != nil && o.Ch != nil {
		return true
	}

	return false
}

// SetCh gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Ch field.
func (o *MetroCapacityReport) SetCh(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Ch = &v
}

// GetDa returns the Da field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetDa() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Da == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Da
}

// GetDaOk returns a tuple with the Da field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetDaOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Da == nil {
		return nil, false
	}
	return o.Da, true
}

// HasDa returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasDa() bool {
	if o != nil && o.Da != nil {
		return true
	}

	return false
}

// SetDa gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Da field.
func (o *MetroCapacityReport) SetDa(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Da = &v
}

// GetDc returns the Dc field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetDc() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Dc == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Dc
}

// GetDcOk returns a tuple with the Dc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetDcOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Dc == nil {
		return nil, false
	}
	return o.Dc, true
}

// HasDc returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasDc() bool {
	if o != nil && o.Dc != nil {
		return true
	}

	return false
}

// SetDc gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Dc field.
func (o *MetroCapacityReport) SetDc(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Dc = &v
}

// GetFr returns the Fr field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetFr() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Fr == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Fr
}

// GetFrOk returns a tuple with the Fr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetFrOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Fr == nil {
		return nil, false
	}
	return o.Fr, true
}

// HasFr returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasFr() bool {
	if o != nil && o.Fr != nil {
		return true
	}

	return false
}

// SetFr gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Fr field.
func (o *MetroCapacityReport) SetFr(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Fr = &v
}

// GetHk returns the Hk field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetHk() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Hk == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Hk
}

// GetHkOk returns a tuple with the Hk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetHkOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Hk == nil {
		return nil, false
	}
	return o.Hk, true
}

// HasHk returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasHk() bool {
	if o != nil && o.Hk != nil {
		return true
	}

	return false
}

// SetHk gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Hk field.
func (o *MetroCapacityReport) SetHk(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Hk = &v
}

// GetLa returns the La field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetLa() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.La == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.La
}

// GetLaOk returns a tuple with the La field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetLaOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.La == nil {
		return nil, false
	}
	return o.La, true
}

// HasLa returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasLa() bool {
	if o != nil && o.La != nil {
		return true
	}

	return false
}

// SetLa gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the La field.
func (o *MetroCapacityReport) SetLa(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.La = &v
}

// GetLd returns the Ld field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetLd() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Ld == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Ld
}

// GetLdOk returns a tuple with the Ld field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetLdOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Ld == nil {
		return nil, false
	}
	return o.Ld, true
}

// HasLd returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasLd() bool {
	if o != nil && o.Ld != nil {
		return true
	}

	return false
}

// SetLd gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Ld field.
func (o *MetroCapacityReport) SetLd(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Ld = &v
}

// GetMd returns the Md field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetMd() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Md == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Md
}

// GetMdOk returns a tuple with the Md field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetMdOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Md == nil {
		return nil, false
	}
	return o.Md, true
}

// HasMd returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasMd() bool {
	if o != nil && o.Md != nil {
		return true
	}

	return false
}

// SetMd gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Md field.
func (o *MetroCapacityReport) SetMd(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Md = &v
}

// GetNy returns the Ny field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetNy() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Ny == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Ny
}

// GetNyOk returns a tuple with the Ny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetNyOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Ny == nil {
		return nil, false
	}
	return o.Ny, true
}

// HasNy returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasNy() bool {
	if o != nil && o.Ny != nil {
		return true
	}

	return false
}

// SetNy gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Ny field.
func (o *MetroCapacityReport) SetNy(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Ny = &v
}

// GetPa returns the Pa field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetPa() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Pa == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Pa
}

// GetPaOk returns a tuple with the Pa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetPaOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Pa == nil {
		return nil, false
	}
	return o.Pa, true
}

// HasPa returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasPa() bool {
	if o != nil && o.Pa != nil {
		return true
	}

	return false
}

// SetPa gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Pa field.
func (o *MetroCapacityReport) SetPa(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Pa = &v
}

// GetSe returns the Se field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetSe() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Se == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Se
}

// GetSeOk returns a tuple with the Se field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetSeOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Se == nil {
		return nil, false
	}
	return o.Se, true
}

// HasSe returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasSe() bool {
	if o != nil && o.Se != nil {
		return true
	}

	return false
}

// SetSe gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Se field.
func (o *MetroCapacityReport) SetSe(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Se = &v
}

// GetSg returns the Sg field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetSg() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Sg == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Sg
}

// GetSgOk returns a tuple with the Sg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetSgOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Sg == nil {
		return nil, false
	}
	return o.Sg, true
}

// HasSg returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasSg() bool {
	if o != nil && o.Sg != nil {
		return true
	}

	return false
}

// SetSg gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Sg field.
func (o *MetroCapacityReport) SetSg(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Sg = &v
}

// GetSl returns the Sl field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetSl() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Sl == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Sl
}

// GetSlOk returns a tuple with the Sl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetSlOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Sl == nil {
		return nil, false
	}
	return o.Sl, true
}

// HasSl returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasSl() bool {
	if o != nil && o.Sl != nil {
		return true
	}

	return false
}

// SetSl gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Sl field.
func (o *MetroCapacityReport) SetSl(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Sl = &v
}

// GetSp returns the Sp field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetSp() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Sp == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Sp
}

// GetSpOk returns a tuple with the Sp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetSpOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Sp == nil {
		return nil, false
	}
	return o.Sp, true
}

// HasSp returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasSp() bool {
	if o != nil && o.Sp != nil {
		return true
	}

	return false
}

// SetSp gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Sp field.
func (o *MetroCapacityReport) SetSp(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Sp = &v
}

// GetSv returns the Sv field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetSv() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Sv == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Sv
}

// GetSvOk returns a tuple with the Sv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetSvOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Sv == nil {
		return nil, false
	}
	return o.Sv, true
}

// HasSv returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasSv() bool {
	if o != nil && o.Sv != nil {
		return true
	}

	return false
}

// SetSv gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Sv field.
func (o *MetroCapacityReport) SetSv(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Sv = &v
}

// GetSy returns the Sy field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetSy() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Sy == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Sy
}

// GetSyOk returns a tuple with the Sy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetSyOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Sy == nil {
		return nil, false
	}
	return o.Sy, true
}

// HasSy returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasSy() bool {
	if o != nil && o.Sy != nil {
		return true
	}

	return false
}

// SetSy gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Sy field.
func (o *MetroCapacityReport) SetSy(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Sy = &v
}

// GetTr returns the Tr field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetTr() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Tr == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Tr
}

// GetTrOk returns a tuple with the Tr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetTrOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Tr == nil {
		return nil, false
	}
	return o.Tr, true
}

// HasTr returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasTr() bool {
	if o != nil && o.Tr != nil {
		return true
	}

	return false
}

// SetTr gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Tr field.
func (o *MetroCapacityReport) SetTr(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Tr = &v
}

// GetTy returns the Ty field value if set, zero value otherwise.
func (o *MetroCapacityReport) GetTy() FindCapacityForFacility200ResponseCapacityAms1 {
	if o == nil || o.Ty == nil {
		var ret FindCapacityForFacility200ResponseCapacityAms1
		return ret
	}
	return *o.Ty
}

// GetTyOk returns a tuple with the Ty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetroCapacityReport) GetTyOk() (*FindCapacityForFacility200ResponseCapacityAms1, bool) {
	if o == nil || o.Ty == nil {
		return nil, false
	}
	return o.Ty, true
}

// HasTy returns a boolean if a field has been set.
func (o *MetroCapacityReport) HasTy() bool {
	if o != nil && o.Ty != nil {
		return true
	}

	return false
}

// SetTy gets a reference to the given FindCapacityForFacility200ResponseCapacityAms1 and assigns it to the Ty field.
func (o *MetroCapacityReport) SetTy(v FindCapacityForFacility200ResponseCapacityAms1) {
	o.Ty = &v
}

func (o MetroCapacityReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Am != nil {
		toSerialize["am"] = o.Am
	}
	if o.At != nil {
		toSerialize["at"] = o.At
	}
	if o.Ch != nil {
		toSerialize["ch"] = o.Ch
	}
	if o.Da != nil {
		toSerialize["da"] = o.Da
	}
	if o.Dc != nil {
		toSerialize["dc"] = o.Dc
	}
	if o.Fr != nil {
		toSerialize["fr"] = o.Fr
	}
	if o.Hk != nil {
		toSerialize["hk"] = o.Hk
	}
	if o.La != nil {
		toSerialize["la"] = o.La
	}
	if o.Ld != nil {
		toSerialize["ld"] = o.Ld
	}
	if o.Md != nil {
		toSerialize["md"] = o.Md
	}
	if o.Ny != nil {
		toSerialize["ny"] = o.Ny
	}
	if o.Pa != nil {
		toSerialize["pa"] = o.Pa
	}
	if o.Se != nil {
		toSerialize["se"] = o.Se
	}
	if o.Sg != nil {
		toSerialize["sg"] = o.Sg
	}
	if o.Sl != nil {
		toSerialize["sl"] = o.Sl
	}
	if o.Sp != nil {
		toSerialize["sp"] = o.Sp
	}
	if o.Sv != nil {
		toSerialize["sv"] = o.Sv
	}
	if o.Sy != nil {
		toSerialize["sy"] = o.Sy
	}
	if o.Tr != nil {
		toSerialize["tr"] = o.Tr
	}
	if o.Ty != nil {
		toSerialize["ty"] = o.Ty
	}
	return json.Marshal(toSerialize)
}

type NullableMetroCapacityReport struct {
	value *MetroCapacityReport
	isSet bool
}

func (v NullableMetroCapacityReport) Get() *MetroCapacityReport {
	return v.value
}

func (v *NullableMetroCapacityReport) Set(val *MetroCapacityReport) {
	v.value = val
	v.isSet = true
}

func (v NullableMetroCapacityReport) IsSet() bool {
	return v.isSet
}

func (v *NullableMetroCapacityReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetroCapacityReport(val *MetroCapacityReport) *NullableMetroCapacityReport {
	return &NullableMetroCapacityReport{value: val, isSet: true}
}

func (v NullableMetroCapacityReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetroCapacityReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
