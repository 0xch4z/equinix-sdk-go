/*
Metal API

This is the API for Equinix Metal. The API allows you to programmatically interact with all of your Equinix Metal resources, including devices, networks, addresses, organizations, projects, and your user account.  The official API docs are hosted at <https://metal.equinix.com/developers/api>.

API version: 1.0.0
Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// FindGlobalBgpRanges200Response struct for FindGlobalBgpRanges200Response
type FindGlobalBgpRanges200Response struct {
	GlobalBgpRanges []FindBgpConfigByProject200ResponseRangesInner `json:"global_bgp_ranges,omitempty"`
}

// NewFindGlobalBgpRanges200Response instantiates a new FindGlobalBgpRanges200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindGlobalBgpRanges200Response() *FindGlobalBgpRanges200Response {
	this := FindGlobalBgpRanges200Response{}
	return &this
}

// NewFindGlobalBgpRanges200ResponseWithDefaults instantiates a new FindGlobalBgpRanges200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindGlobalBgpRanges200ResponseWithDefaults() *FindGlobalBgpRanges200Response {
	this := FindGlobalBgpRanges200Response{}
	return &this
}

// GetGlobalBgpRanges returns the GlobalBgpRanges field value if set, zero value otherwise.
func (o *FindGlobalBgpRanges200Response) GetGlobalBgpRanges() []FindBgpConfigByProject200ResponseRangesInner {
	if o == nil || o.GlobalBgpRanges == nil {
		var ret []FindBgpConfigByProject200ResponseRangesInner
		return ret
	}
	return o.GlobalBgpRanges
}

// GetGlobalBgpRangesOk returns a tuple with the GlobalBgpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindGlobalBgpRanges200Response) GetGlobalBgpRangesOk() ([]FindBgpConfigByProject200ResponseRangesInner, bool) {
	if o == nil || o.GlobalBgpRanges == nil {
		return nil, false
	}
	return o.GlobalBgpRanges, true
}

// HasGlobalBgpRanges returns a boolean if a field has been set.
func (o *FindGlobalBgpRanges200Response) HasGlobalBgpRanges() bool {
	if o != nil && o.GlobalBgpRanges != nil {
		return true
	}

	return false
}

// SetGlobalBgpRanges gets a reference to the given []FindBgpConfigByProject200ResponseRangesInner and assigns it to the GlobalBgpRanges field.
func (o *FindGlobalBgpRanges200Response) SetGlobalBgpRanges(v []FindBgpConfigByProject200ResponseRangesInner) {
	o.GlobalBgpRanges = v
}

func (o FindGlobalBgpRanges200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GlobalBgpRanges != nil {
		toSerialize["global_bgp_ranges"] = o.GlobalBgpRanges
	}
	return json.Marshal(toSerialize)
}

type NullableFindGlobalBgpRanges200Response struct {
	value *FindGlobalBgpRanges200Response
	isSet bool
}

func (v NullableFindGlobalBgpRanges200Response) Get() *FindGlobalBgpRanges200Response {
	return v.value
}

func (v *NullableFindGlobalBgpRanges200Response) Set(val *FindGlobalBgpRanges200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFindGlobalBgpRanges200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFindGlobalBgpRanges200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindGlobalBgpRanges200Response(val *FindGlobalBgpRanges200Response) *NullableFindGlobalBgpRanges200Response {
	return &NullableFindGlobalBgpRanges200Response{value: val, isSet: true}
}

func (v NullableFindGlobalBgpRanges200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindGlobalBgpRanges200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
