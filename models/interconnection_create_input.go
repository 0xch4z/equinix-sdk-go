// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InterconnectionCreateInput interconnection create input
//
// swagger:model InterconnectionCreateInput
type InterconnectionCreateInput struct {

	// contact email
	ContactEmail string `json:"contact_email,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// A Facility ID or code.
	// Required: true
	Facility *string `json:"facility"`

	// name
	// Required: true
	Name *string `json:"name"`

	// project
	Project string `json:"project,omitempty"`

	// Either 'primary' or 'redundant'.
	// Required: true
	Redundancy *string `json:"redundancy"`

	// A connection speed, in bps, mbps, or gbps. Ex: '100000000' or '100 mbps'.
	Speed string `json:"speed,omitempty"`

	// tags
	Tags []string `json:"tags"`

	// Either 'shared' or 'dedicated'.
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this interconnection create input
func (m *InterconnectionCreateInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFacility(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRedundancy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InterconnectionCreateInput) validateFacility(formats strfmt.Registry) error {

	if err := validate.Required("facility", "body", m.Facility); err != nil {
		return err
	}

	return nil
}

func (m *InterconnectionCreateInput) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *InterconnectionCreateInput) validateRedundancy(formats strfmt.Registry) error {

	if err := validate.Required("redundancy", "body", m.Redundancy); err != nil {
		return err
	}

	return nil
}

func (m *InterconnectionCreateInput) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InterconnectionCreateInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InterconnectionCreateInput) UnmarshalBinary(b []byte) error {
	var res InterconnectionCreateInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
