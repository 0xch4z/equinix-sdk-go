{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support@equinixmetal.com",
      "name": "Equinix Metal API Team"
    },
    "description": "This is the API for Equinix Metal. The API allows you to programmatically interact with all\nof your Equinix Metal resources, including devices, networks, addresses, organizations,\nprojects, and your user account.\n\nThe official API docs are hosted at <https://metal.equinix.com/developers/api>.\n",
    "license": {
      "name": "Equinix Metal",
      "url": "https://metal.equinix.com/legal/"
    },
    "termsOfService": "https://metal.equinix.com/legal/",
    "title": "Metal API",
    "version": "1.0.0"
  },
  "host": "api.equinix.com",
  "basePath": "/metal/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api-keys/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "API Key UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Deletes the API key.",
        "operationId": "deleteAPIKey",
        "summary": "Delete the API key"
      }
    },
    "/batches/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Batch UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Delete all instances created from this batch",
            "in": "query",
            "name": "remove_associated_instances",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Batches"
        ],
        "description": "Deletes the Batch.",
        "operationId": "deleteBatch",
        "summary": "Delete the Batch"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Batch UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "error_messages": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Batches"
        ],
        "description": "Returns a Batch",
        "operationId": "findBatchById",
        "summary": "Retrieve a Batch"
      }
    },
    "/bgp/sessions/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "BGP session UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Deletes the BGP session.",
        "operationId": "deleteBgpSession",
        "summary": "Delete the BGP session"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "BGP session UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "address_family": {
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "default_route": {
                  "type": "boolean"
                },
                "device": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "learned_routes": {
                  "items": {
                    "description": "IPv4 or IPv6 range",
                    "example": "10.32.16.0/31",
                    "type": "string"
                  },
                  "type": "array"
                },
                "status": {
                  "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                  "enum": [
                    "unknown",
                    "up",
                    "down"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "address_family"
              ],
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Returns a BGP session",
        "operationId": "findBgpSessionById",
        "summary": "Retrieve a BGP session"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "BGP session UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Default route",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Updates the BGP session by either enabling or disabling the default route functionality.",
        "operationId": "updateBgpSession",
        "summary": "Update the BGP session"
      }
    },
    "/capacity": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "capacity": {
                  "properties": {
                    "ams1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "atl1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "dfw1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ewr1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "fra1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "iad1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "lax1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "nrt1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ord1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sea1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sin1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sjc1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "syd1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "yyz1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Capacity"
        ],
        "description": "Returns a list of facilities and plans with their current capacity.",
        "operationId": "findCapacityForFacility",
        "summary": "View capacity"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Facility to check capacity in",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "servers": {
                  "items": {
                    "properties": {
                      "facility": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "servers": {
                  "items": {
                    "properties": {
                      "available": {
                        "type": "boolean"
                      },
                      "facility": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Capacity"
        ],
        "description": "Validates if a deploy can be fulfilled.",
        "operationId": "checkCapacityForFacility",
        "summary": "Check capacity"
      }
    },
    "/capacity/metros": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "capacity": {
                  "properties": {
                    "am": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "at": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ch": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "da": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "dc": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "fr": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "hk": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "la": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ld": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "md": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ny": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "pa": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "se": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sg": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sl": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sp": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sv": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sy": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "tr": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ty": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Capacity"
        ],
        "description": "Returns a list of metros and plans with their current capacity.",
        "operationId": "findCapacityForMetro",
        "summary": "View capacity for metros"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Metro to check capacity in",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "servers": {
                  "items": {
                    "properties": {
                      "metro": {
                        "description": "The metro ID or code to check the capacity in.",
                        "type": "string"
                      },
                      "plan": {
                        "description": "The plan ID or slug to check the capacity of.",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "The number of servers to check the capacity of.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "servers": {
                  "items": {
                    "properties": {
                      "available": {
                        "description": "Returns true if there is enough capacity in the metro to fulfill the quantity set. Returns false if there is not enough.",
                        "type": "boolean"
                      },
                      "metro": {
                        "description": "The metro ID or code sent to check capacity.",
                        "type": "string"
                      },
                      "plan": {
                        "description": "The plan ID or slug sent to check capacity.",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "The number of servers sent to check capacity.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Capacity"
        ],
        "description": "Validates if a deploy can be fulfilled in a metro.",
        "operationId": "checkCapacityForMetro",
        "summary": "Check capacity for a metro"
      }
    },
    "/connections/{connection_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Connection UUID",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "accepted",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Details of the metro the facility is in"
                    }
                  ]
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ports": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Either 'primary' or 'secondary'.",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "switch_id": {
                        "description": "A switch 'short ID'",
                        "type": "string"
                      },
                      "virtual_circuits": {
                        "properties": {
                          "virtual_circuits": {
                            "items": {},
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "redundancy": {
                  "type": "string"
                },
                "service_tokens": {
                  "items": {
                    "properties": {
                      "expires_at": {
                        "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                        "format": "uuid",
                        "type": "string"
                      },
                      "max_allowed_speed": {
                        "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                        "example": "'200000000' or '200mbps'",
                        "type": "string"
                      },
                      "role": {
                        "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                        "enum": [
                          "primary",
                          "redundant"
                        ],
                        "type": "string"
                      },
                      "service_token_type": {
                        "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                        "enum": [
                          "a_side"
                        ],
                        "type": "string"
                      },
                      "state": {
                        "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                        "enum": [
                          "inactive",
                          "active",
                          "expired"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "speed": {
                  "description": "The connection's speed in bps.",
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Delete a connection, its associated ports and virtual circuits.",
        "operationId": "deleteInterconnection",
        "summary": "Delete connection"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Connection UUID",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Details of the metro the facility is in"
                    }
                  ]
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ports": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Either 'primary' or 'secondary'.",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "switch_id": {
                        "description": "A switch 'short ID'",
                        "type": "string"
                      },
                      "virtual_circuits": {
                        "properties": {
                          "virtual_circuits": {
                            "items": {},
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "redundancy": {
                  "type": "string"
                },
                "service_tokens": {
                  "items": {
                    "properties": {
                      "expires_at": {
                        "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                        "format": "uuid",
                        "type": "string"
                      },
                      "max_allowed_speed": {
                        "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                        "example": "'200000000' or '200mbps'",
                        "type": "string"
                      },
                      "role": {
                        "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                        "enum": [
                          "primary",
                          "redundant"
                        ],
                        "type": "string"
                      },
                      "service_token_type": {
                        "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                        "enum": [
                          "a_side"
                        ],
                        "type": "string"
                      },
                      "state": {
                        "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                        "enum": [
                          "inactive",
                          "active",
                          "expired"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "speed": {
                  "description": "The connection's speed in bps.",
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Get the details of a connection",
        "operationId": "getInterconnection",
        "summary": "Get connection"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Connection UUID",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updated connection details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "redundancy": {
                  "description": "Updating from 'redundant' to 'primary' will remove a secondary port, while updating from 'primary' to 'redundant' will add one.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Details of the metro the facility is in"
                    }
                  ]
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ports": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Either 'primary' or 'secondary'.",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "switch_id": {
                        "description": "A switch 'short ID'",
                        "type": "string"
                      },
                      "virtual_circuits": {
                        "properties": {
                          "virtual_circuits": {
                            "items": {},
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "redundancy": {
                  "type": "string"
                },
                "service_tokens": {
                  "items": {
                    "properties": {
                      "expires_at": {
                        "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                        "format": "uuid",
                        "type": "string"
                      },
                      "max_allowed_speed": {
                        "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                        "example": "'200000000' or '200mbps'",
                        "type": "string"
                      },
                      "role": {
                        "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                        "enum": [
                          "primary",
                          "redundant"
                        ],
                        "type": "string"
                      },
                      "service_token_type": {
                        "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                        "enum": [
                          "a_side"
                        ],
                        "type": "string"
                      },
                      "state": {
                        "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                        "enum": [
                          "inactive",
                          "active",
                          "expired"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "speed": {
                  "description": "The connection's speed in bps.",
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Update the details of a connection",
        "operationId": "updateInterconnection",
        "summary": "Update connection"
      }
    },
    "/connections/{connection_id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Connection UUID",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "interpolated": {
                  "type": "string"
                },
                "relationships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of the connection events",
        "operationId": "findConnectionEvents",
        "summary": "Retrieve connection events"
      }
    },
    "/connections/{connection_id}/ports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the connection",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ports": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Either 'primary' or 'secondary'.",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "switch_id": {
                        "description": "A switch 'short ID'",
                        "type": "string"
                      },
                      "virtual_circuits": {
                        "properties": {
                          "virtual_circuits": {
                            "items": {},
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "List the ports associated to an connection.",
        "operationId": "listConnectionPorts",
        "summary": "List a connection's ports"
      }
    },
    "/connections/{connection_id}/ports/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the connection",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "role": {
                  "description": "Either 'primary' or 'secondary'.",
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "switch_id": {
                  "description": "A switch 'short ID'",
                  "type": "string"
                },
                "virtual_circuits": {
                  "properties": {
                    "virtual_circuits": {
                      "items": {},
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Get the details of an connection port.",
        "operationId": "getConnectionPort",
        "summary": "Get a connection port"
      }
    },
    "/connections/{connection_id}/ports/{id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Connection UUID",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Connection Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "interpolated": {
                  "type": "string"
                },
                "relationships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of the connection port events",
        "operationId": "findConnectionPortEvents",
        "summary": "Retrieve connection port events"
      }
    },
    "/connections/{connection_id}/ports/{port_id}/virtual-circuits": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the connection",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "UUID of the connection port",
            "format": "uuid",
            "in": "path",
            "name": "port_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "virtual_circuits": {
                  "items": {},
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "List the virtual circuit record(s) associatiated with a particular connection port.",
        "operationId": "listConnectionPortVirtualCircuits",
        "summary": "List a connection port's virtual circuits"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the connection",
            "format": "uuid",
            "in": "path",
            "name": "connection_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "UUID of the connection port",
            "format": "uuid",
            "in": "path",
            "name": "port_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Virtual Circuit details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "ok",
            "schema": {}
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Create a new Virtual Circuit on a dedicated connection. To create a regular Virtual Circuit, specify a Virtual Network record and an NNI VLAN value. To create a VRF-based Virtual Circuit, specify the VRF ID and subnet, along with the NNI VLAN value.",
        "operationId": "createConnectionPortVirtualCircuit",
        "summary": "Create a new Virtual Circuit"
      }
    },
    "/devices/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Force the deletion of the device, by detaching any storage volume still active.",
            "in": "query",
            "name": "force_delete",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Deletes a device and deprovisions it in our datacenter.",
        "operationId": "deleteDevice",
        "summary": "Delete the device"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "always_pxe": {
                  "type": "boolean"
                },
                "billing_cycle": {
                  "type": "string"
                },
                "bonding_mode": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "allOf": [
                    {
                      "properties": {
                        "avatar_thumb_url": {
                          "description": "Avatar thumbnail URL of the User",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "When the user was created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "email": {
                          "description": "Primary email address of the User",
                          "type": "string"
                        },
                        "first_name": {
                          "description": "First name of the User",
                          "type": "string"
                        },
                        "full_name": {
                          "description": "Full name of the User",
                          "type": "string"
                        },
                        "href": {
                          "description": "API URL uniquely representing the User",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID of the User",
                          "format": "uuid",
                          "type": "string"
                        },
                        "last_name": {
                          "description": "Last name of the User",
                          "type": "string"
                        },
                        "short_id": {
                          "description": "Short ID of the User",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "When the user details were last updated",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "short_id"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "The user that created the device."
                    }
                  ]
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "address": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "coordinates": {
                          "properties": {
                            "latitude": {
                              "type": "string"
                            },
                            "longitude": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "country": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "features": {
                      "example": [
                        "baremetal",
                        "backend_transfer",
                        "global_ipv4"
                      ],
                      "items": {
                        "enum": [
                          "baremetal",
                          "backend_transfer",
                          "layer_2",
                          "global_ipv4",
                          "ibx"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "ip_ranges": {
                      "description": "IP ranges registered in facility. Can be used for GeoIP location",
                      "example": [
                        "2604:1380::/36",
                        "147.75.192.0/21"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the facility is in"
                        }
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "hardware_reservation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "hostname": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "ip_addresses": {
                  "items": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address_family": {
                        "type": "integer"
                      },
                      "assigned_to": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "cidr": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gateway": {
                        "type": "string"
                      },
                      "global_ip": {
                        "type": "boolean"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "manageable": {
                        "type": "boolean"
                      },
                      "management": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the IP address is in"
                          }
                        ]
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "parent_block": {
                        "properties": {
                          "cidr": {
                            "type": "integer"
                          },
                          "href": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "ipxe_script_url": {
                  "type": "string"
                },
                "iqn": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the facility is in"
                    }
                  ]
                },
                "network_ports": {
                  "allOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "object"
                        },
                        "disbond_operation_supported": {
                          "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                          "type": "boolean"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "virtual_networks": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                    }
                  ]
                },
                "operating_system": {
                  "properties": {
                    "distro": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "licensed": {
                      "description": "Licenced OS is priced according to pricing property",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "preinstallable": {
                      "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                      "type": "boolean"
                    },
                    "pricing": {
                      "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                      "type": "object"
                    },
                    "provisionable_on": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "plan": {
                  "properties": {
                    "available_in": {
                      "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "class": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "legacy": {
                      "type": "boolean"
                    },
                    "line": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pricing": {
                      "type": "object"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "specs": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Full version of project object when included"
                    }
                  ]
                },
                "project_lite": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Lite version of project object when included"
                    }
                  ]
                },
                "provisioning_events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "provisioning_percentage": {
                  "description": "Only visible while device provisioning",
                  "format": "float",
                  "type": "number"
                },
                "root_password": {
                  "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "spot_instance": {
                  "description": "Whether or not the device is a spot instance.",
                  "type": "boolean"
                },
                "spot_price_max": {
                  "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                  "format": "float",
                  "type": "number"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "switch_uuid": {
                  "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                  "type": "string"
                },
                "termination_time": {
                  "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "userdata": {
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Type-specific options (such as facility for baremetal devices) will be included as part of the main data structure.\n                         State value can be one of: active inactive queued or provisioning",
        "operationId": "findDeviceById",
        "summary": "Retrieve a device"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Facility to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "always_pxe": {
                  "type": "boolean"
                },
                "billing_cycle": {
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "ipxe_script_url": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "network_frozen": {
                  "description": "If true, this instance can not be converted to a different network type.",
                  "type": "boolean"
                },
                "spot_instance": {
                  "type": "boolean"
                },
                "userdata": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "always_pxe": {
                  "type": "boolean"
                },
                "billing_cycle": {
                  "type": "string"
                },
                "bonding_mode": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "allOf": [
                    {
                      "properties": {
                        "avatar_thumb_url": {
                          "description": "Avatar thumbnail URL of the User",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "When the user was created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "email": {
                          "description": "Primary email address of the User",
                          "type": "string"
                        },
                        "first_name": {
                          "description": "First name of the User",
                          "type": "string"
                        },
                        "full_name": {
                          "description": "Full name of the User",
                          "type": "string"
                        },
                        "href": {
                          "description": "API URL uniquely representing the User",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID of the User",
                          "format": "uuid",
                          "type": "string"
                        },
                        "last_name": {
                          "description": "Last name of the User",
                          "type": "string"
                        },
                        "short_id": {
                          "description": "Short ID of the User",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "When the user details were last updated",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "short_id"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "The user that created the device."
                    }
                  ]
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "address": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "coordinates": {
                          "properties": {
                            "latitude": {
                              "type": "string"
                            },
                            "longitude": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "country": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "features": {
                      "example": [
                        "baremetal",
                        "backend_transfer",
                        "global_ipv4"
                      ],
                      "items": {
                        "enum": [
                          "baremetal",
                          "backend_transfer",
                          "layer_2",
                          "global_ipv4",
                          "ibx"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "ip_ranges": {
                      "description": "IP ranges registered in facility. Can be used for GeoIP location",
                      "example": [
                        "2604:1380::/36",
                        "147.75.192.0/21"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the facility is in"
                        }
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "hardware_reservation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "hostname": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "ip_addresses": {
                  "items": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address_family": {
                        "type": "integer"
                      },
                      "assigned_to": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "cidr": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gateway": {
                        "type": "string"
                      },
                      "global_ip": {
                        "type": "boolean"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "manageable": {
                        "type": "boolean"
                      },
                      "management": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the IP address is in"
                          }
                        ]
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "parent_block": {
                        "properties": {
                          "cidr": {
                            "type": "integer"
                          },
                          "href": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "ipxe_script_url": {
                  "type": "string"
                },
                "iqn": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the facility is in"
                    }
                  ]
                },
                "network_ports": {
                  "allOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "object"
                        },
                        "disbond_operation_supported": {
                          "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                          "type": "boolean"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "virtual_networks": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                    }
                  ]
                },
                "operating_system": {
                  "properties": {
                    "distro": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "licensed": {
                      "description": "Licenced OS is priced according to pricing property",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "preinstallable": {
                      "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                      "type": "boolean"
                    },
                    "pricing": {
                      "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                      "type": "object"
                    },
                    "provisionable_on": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "plan": {
                  "properties": {
                    "available_in": {
                      "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "class": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "legacy": {
                      "type": "boolean"
                    },
                    "line": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pricing": {
                      "type": "object"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "specs": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Full version of project object when included"
                    }
                  ]
                },
                "project_lite": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Lite version of project object when included"
                    }
                  ]
                },
                "provisioning_events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "provisioning_percentage": {
                  "description": "Only visible while device provisioning",
                  "format": "float",
                  "type": "number"
                },
                "root_password": {
                  "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "spot_instance": {
                  "description": "Whether or not the device is a spot instance.",
                  "type": "boolean"
                },
                "spot_price_max": {
                  "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                  "format": "float",
                  "type": "number"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "switch_uuid": {
                  "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                  "type": "string"
                },
                "termination_time": {
                  "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "userdata": {
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Updates the device.",
        "operationId": "updateDevice",
        "summary": "Update the device"
      }
    },
    "/devices/{id}/actions": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Action to perform",
            "enum": [
              "power_on",
              "power_off",
              "reboot",
              "rescue",
              "reinstall"
            ],
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "accepted"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Performs an action for the given device.  Possible actions include: power_on, power_off, reboot, reinstall, and rescue (reboot the device into rescue OS.)",
        "operationId": "performAction",
        "summary": "Perform an action"
      }
    },
    "/devices/{id}/bandwidth": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp from range",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp to range",
            "in": "query",
            "name": "until",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Retrieve an instance bandwidth for a given period of time.",
        "operationId": "findInstanceBandwidth",
        "summary": "Retrieve an instance bandwidth"
      }
    },
    "/devices/{id}/bgp/neighbors": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "bgp_neighbors": {
                  "description": "A list of BGP session neighbor data",
                  "items": {
                    "properties": {
                      "address_family": {
                        "description": "Address Family for IP Address. Accepted values are 4 or 6",
                        "example": 4,
                        "format": "integer",
                        "type": "number"
                      },
                      "customer_as": {
                        "description": "The customer's ASN. In a local BGP deployment, this will be an internal ASN used to route within the data center. For a global BGP deployment, this will be the your own ASN, configured when you set up BGP for your project.",
                        "example": 65000,
                        "format": "integer",
                        "type": "number"
                      },
                      "customer_ip": {
                        "description": "The device's IP address. For an IPv4 BGP session, this is typically the private bond0 address for the device.",
                        "example": "10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)",
                        "type": "string"
                      },
                      "md5_enabled": {
                        "description": "True if an MD5 password is configured for the project.",
                        "type": "boolean"
                      },
                      "md5_password": {
                        "description": "The MD5 password configured for the project, if set.",
                        "type": "string"
                      },
                      "multihop": {
                        "description": "True when the BGP session should be configured as multihop.",
                        "type": "boolean"
                      },
                      "peer_as": {
                        "description": "The Peer ASN to use when configuring BGP on your device.",
                        "example": 65530,
                        "format": "integer",
                        "type": "number"
                      },
                      "peer_ips": {
                        "description": "A list of one or more IP addresses to use for the Peer IP section of your BGP configuration. For non-multihop sessions, this will typically be a single gateway address for the device. For multihop sessions, it will be a list of IPs.",
                        "example": [
                          "169.254.255.1",
                          "169.254.255.2"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "routes_in": {
                        "description": "A list of project subnets",
                        "items": {
                          "properties": {
                            "exact": {
                              "type": "boolean"
                            },
                            "route": {
                              "description": "A project network",
                              "example": "10.32.16.0/31",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "routes_out": {
                        "description": "A list of outgoing routes. Only populated if the BGP session has default route enabled.",
                        "items": {
                          "properties": {
                            "exact": {
                              "type": "boolean"
                            },
                            "route": {
                              "example": "0.0.0.0/0",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides a summary of the BGP neighbor data associated to the BGP sessions for this device.",
        "operationId": "getBgpNeighborData",
        "summary": "Retrieve BGP neighbor data for this device"
      }
    },
    "/devices/{id}/bgp/sessions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "bgp_sessions": {
                  "items": {
                    "properties": {
                      "address_family": {
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "default_route": {
                        "type": "boolean"
                      },
                      "device": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "learned_routes": {
                        "items": {
                          "description": "IPv4 or IPv6 range",
                          "example": "10.32.16.0/31",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                        "enum": [
                          "unknown",
                          "up",
                          "down"
                        ],
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "address_family"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides a listing of available BGP sessions for the device.",
        "operationId": "findBgpSessions",
        "summary": "Retrieve all BGP sessions"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "BGP session to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "address_family": {
                  "description": "Address family for BGP session.",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "example": "ipv4",
                  "type": "string"
                },
                "default_route": {
                  "default": false,
                  "description": "Set the default route policy.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "address_family": {
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "default_route": {
                  "type": "boolean"
                },
                "device": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "learned_routes": {
                  "items": {
                    "description": "IPv4 or IPv6 range",
                    "example": "10.32.16.0/31",
                    "type": "string"
                  },
                  "type": "array"
                },
                "status": {
                  "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                  "enum": [
                    "unknown",
                    "up",
                    "down"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "address_family"
              ],
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Creates a BGP session.",
        "operationId": "createBgpSession",
        "summary": "Create a BGP session"
      }
    },
    "/devices/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Instance UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides the custom metadata stored for this instance in json format",
        "operationId": "findDeviceCustomdata",
        "summary": "Retrieve the custom metadata of an instance"
      }
    },
    "/devices/{id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of events pertaining to a specific device",
        "operationId": "findDeviceEvents",
        "summary": "Retrieve device's events"
      }
    },
    "/devices/{id}/ips": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ip_addresses": {
                  "items": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address_family": {
                        "type": "integer"
                      },
                      "assigned_to": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "cidr": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gateway": {
                        "type": "string"
                      },
                      "global_ip": {
                        "type": "boolean"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "manageable": {
                        "type": "boolean"
                      },
                      "management": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the IP address is in"
                          }
                        ]
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "parent_block": {
                        "properties": {
                          "cidr": {
                            "type": "integer"
                          },
                          "href": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns all ip assignments for a device.",
        "operationId": "findIPAssignments",
        "summary": "Retrieve all ip assignments"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "IPAssignment to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "manageable": {
                  "type": "boolean"
                }
              },
              "required": [
                "address"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "address_family": {
                  "type": "integer"
                },
                "assigned_to": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "cidr": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "gateway": {
                  "type": "string"
                },
                "global_ip": {
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "manageable": {
                  "type": "boolean"
                },
                "management": {
                  "type": "boolean"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the IP address is in"
                    }
                  ]
                },
                "netmask": {
                  "type": "string"
                },
                "network": {
                  "type": "string"
                },
                "parent_block": {
                  "properties": {
                    "cidr": {
                      "type": "integer"
                    },
                    "href": {
                      "type": "string"
                    },
                    "netmask": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "public": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Creates an ip assignment for a device.",
        "operationId": "createIPAssignment",
        "summary": "Create an ip assignment"
      }
    },
    "/devices/{id}/ssh-keys": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Search by key, label, or fingerprint",
            "in": "query",
            "name": "Search string",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "entity": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "fingerprint": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Returns a collection of the device's ssh keys.",
        "operationId": "findDeviceSSHKeys",
        "summary": "Retrieve a device's ssh keys"
      }
    },
    "/devices/{id}/traffic": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Traffic direction",
            "enum": [
              "inbound",
              "outbound"
            ],
            "in": "query",
            "name": "direction",
            "required": true,
            "type": "string"
          },
          {
            "description": "Traffic interval",
            "enum": [
              "minute",
              "hour",
              "day",
              "week",
              "month",
              "year",
              "hour_of_day",
              "day_of_week",
              "day_of_month",
              "month_of_year"
            ],
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "description": "Traffic bucket",
            "enum": [
              "internal",
              "external"
            ],
            "in": "query",
            "name": "bucket",
            "type": "string"
          },
          {
            "description": "Traffic timeframe",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "ended_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "started_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "started_at",
                "ended_at"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Returns traffic for a specific device.",
        "operationId": "findTraffic",
        "summary": "Retrieve device traffic"
      }
    },
    "/devices/{id}/usages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Device UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter usages created after this date",
            "format": "datetime",
            "in": "query",
            "name": "created[after]",
            "type": "string"
          },
          {
            "description": "Filter usages created before this date",
            "format": "datetime",
            "in": "query",
            "name": "created[before]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "usages": {
                  "items": {
                    "properties": {
                      "quantity": {
                        "type": "string"
                      },
                      "total": {
                        "type": "string"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Usages"
        ],
        "description": "Returns all usages for a device.",
        "operationId": "findDeviceUsages",
        "summary": "Retrieve all usages for device"
      }
    },
    "/devices/{instance_id}/ips/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Instance UUID",
            "format": "uuid",
            "in": "path",
            "name": "instance_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ip Assignment UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides the custom metadata stored for this IP Assignment in json format",
        "operationId": "findIPAssignmentCustomdata",
        "summary": "Retrieve the custom metadata of an IP Assignment"
      }
    },
    "/emails": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Email to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                }
              },
              "required": [
                "address"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Emails"
        ],
        "description": "Add a new email address to the current user.",
        "operationId": "createEmail",
        "summary": "Create an email"
      }
    },
    "/emails/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Email UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Emails"
        ],
        "description": "Deletes the email.",
        "operationId": "deleteEmail",
        "summary": "Delete the email"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Email UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Emails"
        ],
        "description": "Provides one of the user’s emails.",
        "operationId": "findEmailById",
        "summary": "Retrieve an email"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Email UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "email to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "default": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Emails"
        ],
        "description": "Updates the email.",
        "operationId": "updateEmail",
        "summary": "Update the email"
      }
    },
    "/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of the current user’s events",
        "operationId": "findEvents",
        "summary": "Retrieve current user's events"
      }
    },
    "/events/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Event UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "interpolated": {
                  "type": "string"
                },
                "relationships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a single event if the user has access",
        "operationId": "findEventById",
        "summary": "Retrieve an event"
      }
    },
    "/facilities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.",
            "in": "query",
            "items": {
              "enum": [
                "address",
                "labels"
              ],
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "default": [
              "address"
            ],
            "description": "Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.",
            "in": "query",
            "items": {
              "enum": [
                "address",
                "labels"
              ],
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "facilities": {
                  "items": {
                    "properties": {
                      "address": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "coordinates": {
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "code": {
                        "type": "string"
                      },
                      "features": {
                        "example": [
                          "baremetal",
                          "backend_transfer",
                          "global_ipv4"
                        ],
                        "items": {
                          "enum": [
                            "baremetal",
                            "backend_transfer",
                            "layer_2",
                            "global_ipv4",
                            "ibx"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "ip_ranges": {
                        "description": "IP ranges registered in facility. Can be used for GeoIP location",
                        "example": [
                          "2604:1380::/36",
                          "147.75.192.0/21"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the facility is in"
                          }
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Facilities"
        ],
        "description": "Provides a listing of available datacenters where you can provision Packet devices.",
        "operationId": "findFacilities",
        "summary": "Retrieve all facilities"
      }
    },
    "/hardware-reservations/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "HardwareReservation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "always_pxe": {
                  "type": "boolean"
                },
                "billing_cycle": {
                  "type": "string"
                },
                "bonding_mode": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "allOf": [
                    {
                      "properties": {
                        "avatar_thumb_url": {
                          "description": "Avatar thumbnail URL of the User",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "When the user was created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "email": {
                          "description": "Primary email address of the User",
                          "type": "string"
                        },
                        "first_name": {
                          "description": "First name of the User",
                          "type": "string"
                        },
                        "full_name": {
                          "description": "Full name of the User",
                          "type": "string"
                        },
                        "href": {
                          "description": "API URL uniquely representing the User",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID of the User",
                          "format": "uuid",
                          "type": "string"
                        },
                        "last_name": {
                          "description": "Last name of the User",
                          "type": "string"
                        },
                        "short_id": {
                          "description": "Short ID of the User",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "When the user details were last updated",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "short_id"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "The user that created the device."
                    }
                  ]
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "address": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "coordinates": {
                          "properties": {
                            "latitude": {
                              "type": "string"
                            },
                            "longitude": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "country": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "features": {
                      "example": [
                        "baremetal",
                        "backend_transfer",
                        "global_ipv4"
                      ],
                      "items": {
                        "enum": [
                          "baremetal",
                          "backend_transfer",
                          "layer_2",
                          "global_ipv4",
                          "ibx"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "ip_ranges": {
                      "description": "IP ranges registered in facility. Can be used for GeoIP location",
                      "example": [
                        "2604:1380::/36",
                        "147.75.192.0/21"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the facility is in"
                        }
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "hardware_reservation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "hostname": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "ip_addresses": {
                  "items": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address_family": {
                        "type": "integer"
                      },
                      "assigned_to": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "cidr": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gateway": {
                        "type": "string"
                      },
                      "global_ip": {
                        "type": "boolean"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "manageable": {
                        "type": "boolean"
                      },
                      "management": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the IP address is in"
                          }
                        ]
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "parent_block": {
                        "properties": {
                          "cidr": {
                            "type": "integer"
                          },
                          "href": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "ipxe_script_url": {
                  "type": "string"
                },
                "iqn": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the facility is in"
                    }
                  ]
                },
                "network_ports": {
                  "allOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "object"
                        },
                        "disbond_operation_supported": {
                          "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                          "type": "boolean"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "virtual_networks": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                    }
                  ]
                },
                "operating_system": {
                  "properties": {
                    "distro": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "licensed": {
                      "description": "Licenced OS is priced according to pricing property",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "preinstallable": {
                      "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                      "type": "boolean"
                    },
                    "pricing": {
                      "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                      "type": "object"
                    },
                    "provisionable_on": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "plan": {
                  "properties": {
                    "available_in": {
                      "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "class": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "legacy": {
                      "type": "boolean"
                    },
                    "line": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pricing": {
                      "type": "object"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "specs": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Full version of project object when included"
                    }
                  ]
                },
                "project_lite": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Lite version of project object when included"
                    }
                  ]
                },
                "provisioning_events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "provisioning_percentage": {
                  "description": "Only visible while device provisioning",
                  "format": "float",
                  "type": "number"
                },
                "root_password": {
                  "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "spot_instance": {
                  "description": "Whether or not the device is a spot instance.",
                  "type": "boolean"
                },
                "spot_price_max": {
                  "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                  "format": "float",
                  "type": "number"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "switch_uuid": {
                  "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                  "type": "string"
                },
                "termination_time": {
                  "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "userdata": {
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "HardwareReservations"
        ],
        "description": "Returns a single hardware reservation",
        "operationId": "findHardwareReservationById",
        "summary": "Retrieve a hardware reservation"
      }
    },
    "/hardware-reservations/{id}/move": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Hardware Reservation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project UUID",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "custom_rate": {
                  "description": "Amount that will be charged for every billing_cycle.",
                  "example": 1050.5,
                  "format": "float",
                  "type": "number"
                },
                "device": {
                  "properties": {
                    "tags": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "always_pxe": {
                      "type": "boolean"
                    },
                    "billing_cycle": {
                      "type": "string"
                    },
                    "bonding_mode": {
                      "type": "integer"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "allOf": [
                        {
                          "properties": {
                            "avatar_thumb_url": {
                              "description": "Avatar thumbnail URL of the User",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "When the user was created",
                              "format": "date-time",
                              "type": "string"
                            },
                            "email": {
                              "description": "Primary email address of the User",
                              "type": "string"
                            },
                            "first_name": {
                              "description": "First name of the User",
                              "type": "string"
                            },
                            "full_name": {
                              "description": "Full name of the User",
                              "type": "string"
                            },
                            "href": {
                              "description": "API URL uniquely representing the User",
                              "type": "string"
                            },
                            "id": {
                              "description": "ID of the User",
                              "format": "uuid",
                              "type": "string"
                            },
                            "last_name": {
                              "description": "Last name of the User",
                              "type": "string"
                            },
                            "short_id": {
                              "description": "Short ID of the User",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "When the user details were last updated",
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "short_id"
                          ],
                          "type": "object"
                        },
                        {
                          "description": "The user that created the device."
                        }
                      ]
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "facility": {
                      "properties": {
                        "address": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "address2": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "coordinates": {
                              "properties": {
                                "latitude": {
                                  "type": "string"
                                },
                                "longitude": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "country": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "zip_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "address",
                            "zip_code",
                            "country"
                          ],
                          "type": "object"
                        },
                        "code": {
                          "type": "string"
                        },
                        "features": {
                          "example": [
                            "baremetal",
                            "backend_transfer",
                            "global_ipv4"
                          ],
                          "items": {
                            "enum": [
                              "baremetal",
                              "backend_transfer",
                              "layer_2",
                              "global_ipv4",
                              "ibx"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "ip_ranges": {
                          "description": "IP ranges registered in facility. Can be used for GeoIP location",
                          "example": [
                            "2604:1380::/36",
                            "147.75.192.0/21"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "metro": {
                          "allOf": [
                            {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                },
                                "id": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "description": "The metro the facility is in"
                            }
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hardware_reservation": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "hostname": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "image_url": {
                      "type": "string"
                    },
                    "ip_addresses": {
                      "items": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address_family": {
                            "type": "integer"
                          },
                          "assigned_to": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "cidr": {
                            "type": "integer"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "gateway": {
                            "type": "string"
                          },
                          "global_ip": {
                            "type": "boolean"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "manageable": {
                            "type": "boolean"
                          },
                          "management": {
                            "type": "boolean"
                          },
                          "metro": {
                            "allOf": [
                              {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "The metro the IP address is in"
                              }
                            ]
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          },
                          "parent_block": {
                            "properties": {
                              "cidr": {
                                "type": "integer"
                              },
                              "href": {
                                "type": "string"
                              },
                              "netmask": {
                                "type": "string"
                              },
                              "network": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "public": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "ipxe_script_url": {
                      "type": "string"
                    },
                    "iqn": {
                      "type": "string"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the facility is in"
                        }
                      ]
                    },
                    "network_ports": {
                      "allOf": [
                        {
                          "properties": {
                            "data": {
                              "type": "object"
                            },
                            "disbond_operation_supported": {
                              "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                              "type": "boolean"
                            },
                            "href": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "virtual_networks": {
                              "items": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                        }
                      ]
                    },
                    "operating_system": {
                      "properties": {
                        "distro": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "licensed": {
                          "description": "Licenced OS is priced according to pricing property",
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "preinstallable": {
                          "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                          "type": "boolean"
                        },
                        "pricing": {
                          "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                          "type": "object"
                        },
                        "provisionable_on": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "plan": {
                      "properties": {
                        "available_in": {
                          "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "class": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "legacy": {
                          "type": "boolean"
                        },
                        "line": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "pricing": {
                          "type": "object"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "specs": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "allOf": [
                        {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        {
                          "description": "Full version of project object when included"
                        }
                      ]
                    },
                    "project_lite": {
                      "allOf": [
                        {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        {
                          "description": "Lite version of project object when included"
                        }
                      ]
                    },
                    "provisioning_events": {
                      "items": {
                        "properties": {
                          "body": {
                            "type": "string"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "interpolated": {
                            "type": "string"
                          },
                          "relationships": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "state": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "provisioning_percentage": {
                      "description": "Only visible while device provisioning",
                      "format": "float",
                      "type": "number"
                    },
                    "root_password": {
                      "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "spot_instance": {
                      "description": "Whether or not the device is a spot instance.",
                      "type": "boolean"
                    },
                    "spot_price_max": {
                      "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                      "format": "float",
                      "type": "number"
                    },
                    "ssh_keys": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "state": {
                      "type": "string"
                    },
                    "switch_uuid": {
                      "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                      "type": "string"
                    },
                    "termination_time": {
                      "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    },
                    "userdata": {
                      "type": "string"
                    },
                    "volumes": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "facility": {
                  "properties": {
                    "address": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "coordinates": {
                          "properties": {
                            "latitude": {
                              "type": "string"
                            },
                            "longitude": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "country": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "features": {
                      "example": [
                        "baremetal",
                        "backend_transfer",
                        "global_ipv4"
                      ],
                      "items": {
                        "enum": [
                          "baremetal",
                          "backend_transfer",
                          "layer_2",
                          "global_ipv4",
                          "ibx"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "ip_ranges": {
                      "description": "IP ranges registered in facility. Can be used for GeoIP location",
                      "example": [
                        "2604:1380::/36",
                        "147.75.192.0/21"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the facility is in"
                        }
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "need_of_service": {
                  "description": "Whether this Device requires assistance from Metal Equinix.",
                  "type": "boolean"
                },
                "plan": {
                  "properties": {
                    "available_in": {
                      "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "class": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "legacy": {
                      "type": "boolean"
                    },
                    "line": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pricing": {
                      "type": "object"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "specs": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "properties": {
                    "bgp_config": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "devices": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "invitations": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max_devices": {
                      "type": "object"
                    },
                    "members": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "memberships": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "network_status": {
                      "type": "object"
                    },
                    "payment_method": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "ssh_keys": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "volumes": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "provisionable": {
                  "description": "Whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first.",
                  "type": "boolean"
                },
                "short_id": {
                  "description": "Short version of the ID.",
                  "format": "string",
                  "type": "string"
                },
                "spare": {
                  "description": "Whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix",
                  "type": "boolean"
                },
                "switch_uuid": {
                  "description": "Switch short id. This can be used to determine if two devices are connected to the same switch, for example.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "HardwareReservations"
        ],
        "description": "Move a hardware reservation to another project",
        "operationId": "moveHardwareReservation",
        "summary": "Move a hardware reservation"
      }
    },
    "/incidents": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Retrieve the number of incidents.",
        "operationId": "findIncidents",
        "summary": "Retrieve the number of incidents"
      }
    },
    "/invitations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "invitations": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "roles": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Returns all invitations in current user.",
        "operationId": "findInvitations",
        "summary": "Retrieve current user invitations"
      }
    },
    "/invitations/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Invitation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Invitations"
        ],
        "description": "Decline an invitation.",
        "operationId": "declineInvitation",
        "summary": "Decline an invitation"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Invitation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "invited_by": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "invitee": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "projects_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Invitations"
        ],
        "description": "Returns a single invitation. (It include the `invitable` to maintain backward compatibility but will be removed soon)",
        "operationId": "findInvitationById",
        "summary": "View an invitation"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Invitation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Invitations"
        ],
        "description": "Accept an invitation.",
        "operationId": "acceptInvitation",
        "summary": "Accept an invitation"
      }
    },
    "/ips/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "IP Address UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Note! This call can be used to un-assign an IP assignment or delete an IP reservation. Un-assign an IP address record. Use the assignment UUID you get after attaching the IP. This will remove the relationship between an IP and the device and will make the IP address available to be assigned to another device. Delete and IP reservation. Use the reservation UUID you get after adding the IP to the project. This will permanently delete the IP block reservation from the project.",
        "operationId": "deleteIPAddress",
        "summary": "Unassign an ip address"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "IP Address UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {}
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Returns a single ip address if the user has access.",
        "operationId": "findIPAddressById",
        "summary": "Retrieve an ip address"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "IP Address UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Notes for this IP Assignment",
            "in": "query",
            "name": "details",
            "required": true,
            "type": "string"
          },
          {
            "description": "Provides the custom metadata stored for this IP Assignment in json format",
            "in": "query",
            "name": "customdata",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {}
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Update details about an ip address",
        "operationId": "updateIPAddress",
        "summary": "Update an ip address"
      }
    },
    "/ips/{id}/available": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "IP Reservation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Size of subnets in bits",
            "enum": [
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "28",
              "29",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37",
              "38",
              "39",
              "40",
              "41",
              "42",
              "43",
              "44",
              "45",
              "46",
              "47",
              "48",
              "49",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59",
              "60",
              "61",
              "62",
              "63",
              "64",
              "65",
              "66",
              "67",
              "68",
              "69",
              "70",
              "71",
              "72",
              "73",
              "74",
              "75",
              "76",
              "77",
              "78",
              "79",
              "80",
              "81",
              "82",
              "83",
              "84",
              "85",
              "86",
              "87",
              "88",
              "89",
              "90",
              "91",
              "92",
              "93",
              "94",
              "95",
              "96",
              "97",
              "98",
              "99",
              "100",
              "101",
              "102",
              "103",
              "104",
              "105",
              "106",
              "107",
              "108",
              "109",
              "110",
              "111",
              "112",
              "113",
              "114",
              "115",
              "116",
              "117",
              "118",
              "119",
              "120",
              "121",
              "122",
              "123",
              "124",
              "125",
              "126",
              "127",
              "128"
            ],
            "in": "query",
            "name": "cidr",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "available": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Provides a list of IP resevations for a single project.",
        "operationId": "findIPAvailabilities",
        "summary": "Retrieve all available subnets of a particular reservation"
      }
    },
    "/ips/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Ip Reservation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Provides the custom metadata stored for this IP Reservation or IP Assignment in json format",
        "operationId": "findIPAddressCustomdata",
        "summary": "Retrieve the custom metadata of an IP Reservation or IP Assignment"
      }
    },
    "/licenses/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "License UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Deletes a license.",
        "operationId": "deleteLicense",
        "summary": "Delete the license"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "License UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "license_key": {
                  "type": "string"
                },
                "licensee_product": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "size": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Returns a license",
        "operationId": "findLicenseById",
        "summary": "Retrieve a license"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "License UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "License to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "license_key": {
                  "type": "string"
                },
                "licensee_product": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "size": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Updates the license.",
        "operationId": "updateLicense",
        "summary": "Update the license"
      }
    },
    "/locations/metros": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "metros": {
                  "items": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Metros"
        ],
        "description": "Provides a listing of available metros",
        "operationId": "findMetros",
        "summary": "Retrieve all metros"
      }
    },
    "/locations/metros/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Metro UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Metros"
        ],
        "description": "Show the details for a metro, including name, code, and country.",
        "operationId": "getMetro",
        "summary": "Retrieve a specific Metro's details"
      }
    },
    "/market/spot/prices": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Facility to check spot market prices",
            "in": "query",
            "name": "facility",
            "type": "string"
          },
          {
            "description": "Plan to check spot market prices",
            "in": "query",
            "name": "plan",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "spot_market_prices": {
                  "properties": {
                    "ams1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "atl1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "dfw1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ewr1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "fra1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "iad1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "lax1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "nrt1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ord1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sea1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sin1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sjc1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "syd1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "yyz1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "Get Equinix Metal current spot market prices.",
        "operationId": "findSpotMarketPrices",
        "summary": "Get current spot market prices"
      }
    },
    "/market/spot/prices/history": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Facility to check spot market prices",
            "in": "query",
            "name": "facility",
            "required": true,
            "type": "string"
          },
          {
            "description": "Plan to check spot market prices",
            "in": "query",
            "name": "plan",
            "required": true,
            "type": "string"
          },
          {
            "description": "Metro to check spot market price history",
            "in": "query",
            "name": "metro",
            "type": "string"
          },
          {
            "description": "Timestamp from range",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "Timestamp to range",
            "in": "query",
            "name": "until",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "prices_history": {
                  "properties": {
                    "datapoints": {
                      "items": {
                        "items": {
                          "type": "number"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "Get spot market prices for a given plan and facility in a fixed period of time\n\n*Note: In the `200` response, the property `datapoints` contains arrays of `[float, integer]`.*",
        "operationId": "findSpotMarketPricesHistory",
        "summary": "Get spot market prices for a given period of time"
      }
    },
    "/market/spot/prices/metros": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Metro to filter spot market prices",
            "in": "query",
            "name": "metro",
            "type": "string"
          },
          {
            "description": "Plan to filter spot market prices",
            "in": "query",
            "name": "plan",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "spot_market_prices": {
                  "properties": {
                    "am": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ch": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "da": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "la": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ny": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sg": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sv": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "price": {
                              "format": "float",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "Get Equinix Metal current spot market prices for all metros.",
        "operationId": "findMetroSpotMarketPrices",
        "summary": "Get current spot market prices for metros"
      }
    },
    "/memberships/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Membership UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Memberships"
        ],
        "description": "Deletes the membership.",
        "operationId": "deleteMembership",
        "summary": "Delete the membership"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Membership UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Memberships"
        ],
        "description": "Returns a single membership.",
        "operationId": "findMembershipById",
        "summary": "Retrieve a membership"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Membership UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Membership to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "role": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Memberships"
        ],
        "description": "Updates the membership.",
        "operationId": "updateMembership",
        "summary": "Update the membership"
      }
    },
    "/metal-gateways/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Metal Gateway UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "MetalGateways"
        ],
        "description": "Deletes a specific metal gateway",
        "operationId": "deleteMetalGateway",
        "summary": "Deletes the metal gateway"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Metal Gateway UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {}
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "MetalGateways"
        ],
        "description": "Returns a specific metal gateway",
        "operationId": "findMetalGatewayById",
        "summary": "Returns the metal gateway"
      }
    },
    "/operating-system-versions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "operating_systems": {
                  "items": {
                    "properties": {
                      "distro": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "licensed": {
                        "description": "Licenced OS is priced according to pricing property",
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "preinstallable": {
                        "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                        "type": "boolean"
                      },
                      "pricing": {
                        "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                        "type": "object"
                      },
                      "provisionable_on": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "OperatingSystems"
        ],
        "description": "Provides a listing of available operating system versions.",
        "operationId": "findOperatingSystemVersion",
        "summary": "Retrieve all operating system versions"
      }
    },
    "/operating-systems": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "operating_systems": {
                  "items": {
                    "properties": {
                      "distro": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "licensed": {
                        "description": "Licenced OS is priced according to pricing property",
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "preinstallable": {
                        "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                        "type": "boolean"
                      },
                      "pricing": {
                        "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                        "type": "object"
                      },
                      "provisionable_on": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "OperatingSystems"
        ],
        "description": "Provides a listing of available operating systems to provision your new device with.",
        "operationId": "findOperatingSystems",
        "summary": "Retrieve all operating systems"
      }
    },
    "/organizations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Include, exclude or show only personal organizations.",
            "enum": [
              "include",
              "exclude",
              "only"
            ],
            "in": "query",
            "name": "personal",
            "type": "string"
          },
          {
            "description": "Include, exclude or show only organizations that have no projects.",
            "enum": [
              "include",
              "exclude",
              "only"
            ],
            "in": "query",
            "name": "without_projects",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "organizations": {
                  "items": {
                    "properties": {
                      "address": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "coordinates": {
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "billing_address": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "coordinates": {
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "credit_amount": {
                        "format": "float",
                        "type": "number"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "enforce_2fa_at": {
                        "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "logo": {
                        "format": "binary",
                        "type": "string"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "memberships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "projects": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "terms": {
                        "type": "integer"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns a list of organizations that are accessible to the current user.",
        "operationId": "findOrganizations",
        "summary": "Retrieve all organizations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "billing_address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "enforce_2fa_at": {
                  "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                  "format": "date-time",
                  "type": "string"
                },
                "logo": {
                  "format": "binary",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "twitter": {
                  "type": "string"
                },
                "website": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "billing_address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "credit_amount": {
                  "format": "float",
                  "type": "number"
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "enforce_2fa_at": {
                  "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "logo": {
                  "format": "binary",
                  "type": "string"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "terms": {
                  "type": "integer"
                },
                "twitter": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "website": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Creates an organization.",
        "operationId": "createOrganization",
        "summary": "Create an organization"
      }
    },
    "/organizations/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Deletes the organization.",
        "operationId": "deleteOrganization",
        "summary": "Delete the organization"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "billing_address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "credit_amount": {
                  "format": "float",
                  "type": "number"
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "enforce_2fa_at": {
                  "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "logo": {
                  "format": "binary",
                  "type": "string"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "terms": {
                  "type": "integer"
                },
                "twitter": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "website": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns a single organization's details, if the user is authorized to view it.",
        "operationId": "findOrganizationById",
        "summary": "Retrieve an organization's details"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Organization to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "billing_address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "enforce_2fa_at": {
                  "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                  "format": "date-time",
                  "type": "string"
                },
                "logo": {
                  "format": "binary",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "twitter": {
                  "type": "string"
                },
                "website": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "billing_address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "credit_amount": {
                  "format": "float",
                  "type": "number"
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "enforce_2fa_at": {
                  "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "logo": {
                  "format": "binary",
                  "type": "string"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "terms": {
                  "type": "integer"
                },
                "twitter": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "website": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Updates the organization.",
        "operationId": "updateOrganization",
        "summary": "Update the organization"
      }
    },
    "/organizations/{id}/capacity": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "capacity": {
                  "properties": {
                    "ams1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "atl1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "dfw1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ewr1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "fra1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "iad1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "lax1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "nrt1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ord1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sea1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sin1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sjc1": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "syd1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "yyz1": {
                      "properties": {
                        "baremetal_1e": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Capacity"
        ],
        "description": "Returns a list of facilities and plans with their current capacity.",
        "operationId": "findOrganizationCapacityPerFacility",
        "summary": "View available hardware plans per Facility for given organization"
      }
    },
    "/organizations/{id}/capacity/metros": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "capacity": {
                  "properties": {
                    "am": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "at": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ch": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "da": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "dc": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "fr": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "hk": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "la": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ld": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "md": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ny": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "pa": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "se": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sg": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sl": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sp": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sv": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "sy": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "tr": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "ty": {
                      "properties": {
                        "baremetal_0": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_1": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_2a2": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_3": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "baremetal_s": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "c2.medium.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "m2.xlarge.x86": {
                          "properties": {
                            "level": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Capacity"
        ],
        "description": "Returns a list of metros and plans with their current capacity.",
        "operationId": "findOrganizationCapacityPerMetro",
        "summary": "View available hardware plans per Metro for given organization"
      }
    },
    "/organizations/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Provides the custom metadata stored for this organization in json format",
        "operationId": "findOrganizationCustomdata",
        "summary": "Retrieve the custom metadata of an organization"
      }
    },
    "/organizations/{id}/devices": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by device facility",
            "in": "query",
            "name": "facility",
            "type": "string"
          },
          {
            "description": "Filter by partial hostname",
            "in": "query",
            "name": "hostname",
            "type": "string"
          },
          {
            "description": "Filter only reserved instances",
            "in": "query",
            "name": "reserved",
            "type": "boolean"
          },
          {
            "description": "Filter by device tag",
            "in": "query",
            "name": "tag",
            "type": "string"
          },
          {
            "description": "Filter by instance type (ondemand,spot,reserved)",
            "in": "query",
            "name": "type",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "devices": {
                  "items": {
                    "properties": {
                      "tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "always_pxe": {
                        "type": "boolean"
                      },
                      "billing_cycle": {
                        "type": "string"
                      },
                      "bonding_mode": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "properties": {
                              "avatar_thumb_url": {
                                "description": "Avatar thumbnail URL of the User",
                                "type": "string"
                              },
                              "created_at": {
                                "description": "When the user was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "email": {
                                "description": "Primary email address of the User",
                                "type": "string"
                              },
                              "first_name": {
                                "description": "First name of the User",
                                "type": "string"
                              },
                              "full_name": {
                                "description": "Full name of the User",
                                "type": "string"
                              },
                              "href": {
                                "description": "API URL uniquely representing the User",
                                "type": "string"
                              },
                              "id": {
                                "description": "ID of the User",
                                "format": "uuid",
                                "type": "string"
                              },
                              "last_name": {
                                "description": "Last name of the User",
                                "type": "string"
                              },
                              "short_id": {
                                "description": "Short ID of the User",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "When the user details were last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "short_id"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "The user that created the device."
                          }
                        ]
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "facility": {
                        "properties": {
                          "address": {
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "address2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "coordinates": {
                                "properties": {
                                  "latitude": {
                                    "type": "string"
                                  },
                                  "longitude": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "country": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "zip_code",
                              "country"
                            ],
                            "type": "object"
                          },
                          "code": {
                            "type": "string"
                          },
                          "features": {
                            "example": [
                              "baremetal",
                              "backend_transfer",
                              "global_ipv4"
                            ],
                            "items": {
                              "enum": [
                                "baremetal",
                                "backend_transfer",
                                "layer_2",
                                "global_ipv4",
                                "ibx"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "ip_ranges": {
                            "description": "IP ranges registered in facility. Can be used for GeoIP location",
                            "example": [
                              "2604:1380::/36",
                              "147.75.192.0/21"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "metro": {
                            "allOf": [
                              {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "The metro the facility is in"
                              }
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hardware_reservation": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "ip_addresses": {
                        "items": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "address_family": {
                              "type": "integer"
                            },
                            "assigned_to": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "cidr": {
                              "type": "integer"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "enabled": {
                              "type": "boolean"
                            },
                            "gateway": {
                              "type": "string"
                            },
                            "global_ip": {
                              "type": "boolean"
                            },
                            "href": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "manageable": {
                              "type": "boolean"
                            },
                            "management": {
                              "type": "boolean"
                            },
                            "metro": {
                              "allOf": [
                                {
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                {
                                  "description": "The metro the IP address is in"
                                }
                              ]
                            },
                            "netmask": {
                              "type": "string"
                            },
                            "network": {
                              "type": "string"
                            },
                            "parent_block": {
                              "properties": {
                                "cidr": {
                                  "type": "integer"
                                },
                                "href": {
                                  "type": "string"
                                },
                                "netmask": {
                                  "type": "string"
                                },
                                "network": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "public": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "ipxe_script_url": {
                        "type": "string"
                      },
                      "iqn": {
                        "type": "string"
                      },
                      "locked": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the facility is in"
                          }
                        ]
                      },
                      "network_ports": {
                        "allOf": [
                          {
                            "properties": {
                              "data": {
                                "type": "object"
                              },
                              "disbond_operation_supported": {
                                "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                                "type": "boolean"
                              },
                              "href": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "virtual_networks": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                          }
                        ]
                      },
                      "operating_system": {
                        "properties": {
                          "distro": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "licensed": {
                            "description": "Licenced OS is priced according to pricing property",
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "preinstallable": {
                            "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                            "type": "boolean"
                          },
                          "pricing": {
                            "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                            "type": "object"
                          },
                          "provisionable_on": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "plan": {
                        "properties": {
                          "available_in": {
                            "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "class": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "legacy": {
                            "type": "boolean"
                          },
                          "line": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "pricing": {
                            "type": "object"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "specs": {
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "project": {
                        "allOf": [
                          {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Full version of project object when included"
                          }
                        ]
                      },
                      "project_lite": {
                        "allOf": [
                          {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Lite version of project object when included"
                          }
                        ]
                      },
                      "provisioning_events": {
                        "items": {
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "interpolated": {
                              "type": "string"
                            },
                            "relationships": {
                              "items": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "state": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "provisioning_percentage": {
                        "description": "Only visible while device provisioning",
                        "format": "float",
                        "type": "number"
                      },
                      "root_password": {
                        "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                        "type": "string"
                      },
                      "short_id": {
                        "type": "string"
                      },
                      "spot_instance": {
                        "description": "Whether or not the device is a spot instance.",
                        "type": "boolean"
                      },
                      "spot_price_max": {
                        "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                        "format": "float",
                        "type": "number"
                      },
                      "ssh_keys": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "switch_uuid": {
                        "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                        "type": "string"
                      },
                      "termination_time": {
                        "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      },
                      "userdata": {
                        "type": "string"
                      },
                      "volumes": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides a collection of devices for a given organization.",
        "operationId": "findOrganizationDevices",
        "summary": "Retrieve all devices of an organization"
      }
    },
    "/organizations/{id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of events for a single organization",
        "operationId": "findOrganizationEvents",
        "summary": "Retrieve organization's events"
      }
    },
    "/organizations/{id}/facilities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "facilities": {
                  "items": {
                    "properties": {
                      "address": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "coordinates": {
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "code": {
                        "type": "string"
                      },
                      "features": {
                        "example": [
                          "baremetal",
                          "backend_transfer",
                          "global_ipv4"
                        ],
                        "items": {
                          "enum": [
                            "baremetal",
                            "backend_transfer",
                            "layer_2",
                            "global_ipv4",
                            "ibx"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "ip_ranges": {
                        "description": "IP ranges registered in facility. Can be used for GeoIP location",
                        "example": [
                          "2604:1380::/36",
                          "147.75.192.0/21"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the facility is in"
                          }
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Facilities"
        ],
        "description": "Returns a listing of available datacenters for the given organization",
        "operationId": "findFacilitiesByOrganization",
        "summary": "Retrieve all facilities visible by the organization"
      }
    },
    "/organizations/{id}/invitations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "invitations": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "roles": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns all invitations in an organization.",
        "operationId": "findOrganizationInvitations",
        "summary": "Retrieve organization invitations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Invitation to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "invitee": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "projects_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "invitee"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "invited_by": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "invitee": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "projects_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "In order to add a user to an organization, they must first be invited.\nTo invite to several projects the parameter `projects_ids:[a,b,c]` can be used",
        "operationId": "createOrganizationInvitation",
        "summary": "Create an invitation for an organization"
      }
    },
    "/organizations/{id}/operating-systems": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "operating_systems": {
                  "items": {
                    "properties": {
                      "distro": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "licensed": {
                        "description": "Licenced OS is priced according to pricing property",
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "preinstallable": {
                        "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                        "type": "boolean"
                      },
                      "pricing": {
                        "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                        "type": "object"
                      },
                      "provisionable_on": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns a listing of available operating systems for the given organization",
        "operationId": "findOperatingSystemsByOrganization",
        "summary": "Retrieve all operating systems visible by the organization"
      }
    },
    "/organizations/{id}/payment-methods": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "payment_methods": {
                  "items": {
                    "properties": {
                      "billing_address": {
                        "properties": {
                          "country_code_alpha2": {
                            "type": "string"
                          },
                          "postal_code": {
                            "type": "string"
                          },
                          "street_address": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "card_type": {
                        "type": "string"
                      },
                      "cardholder_name": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by_user": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "email": {
                        "type": "string"
                      },
                      "expiration_month": {
                        "type": "string"
                      },
                      "expiration_year": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "projects": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns all payment methods of an organization.",
        "operationId": "findOrganizationPaymentMethods",
        "summary": "Retrieve all payment methods of an organization"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Payment Method to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "default": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "nonce": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "nonce"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "billing_address": {
                  "properties": {
                    "country_code_alpha2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "street_address": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "card_type": {
                  "type": "string"
                },
                "cardholder_name": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by_user": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "default": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "expiration_month": {
                  "type": "string"
                },
                "expiration_year": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Creates a payment method.",
        "operationId": "createPaymentMethod",
        "summary": "Create a payment method for the given organization"
      }
    },
    "/organizations/{id}/plans": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "plans": {
                  "items": {
                    "properties": {
                      "available_in": {
                        "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "class": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "legacy": {
                        "type": "boolean"
                      },
                      "line": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pricing": {
                        "type": "object"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "specs": {
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns a listing of available plans for the given organization",
        "operationId": "findPlansByOrganization",
        "summary": "Retrieve all plans visible by the organization"
      }
    },
    "/organizations/{id}/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "bgp_config": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "devices": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "invitations": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "max_devices": {
                        "type": "object"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "memberships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "network_status": {
                        "type": "object"
                      },
                      "payment_method": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "ssh_keys": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "volumes": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Returns a collection of projects that belong to the organization.",
        "operationId": "findOrganizationProjects",
        "summary": "Retrieve all projects of an organization"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "customdata": {
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "payment_method_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Creates a new project for the organization",
        "operationId": "createOrganizationProject",
        "summary": "Create a project for the organization"
      }
    },
    "/organizations/{id}/transfers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "transfers": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "target_organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Organizations"
        ],
        "description": "Provides a collection of project transfer requests from or to the organization.",
        "operationId": "findOrganizationTransfers",
        "summary": "Retrieve all project transfer requests from or to an organization"
      }
    },
    "/organizations/{organization_id}/connections": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the organization",
            "format": "uuid",
            "in": "path",
            "name": "organization_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "interconnections": {
                  "items": {
                    "properties": {
                      "tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "contact_email": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "facility": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "Details of the metro the facility is in"
                          }
                        ]
                      },
                      "mode": {
                        "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                        "enum": [
                          "standard",
                          "tunnel"
                        ],
                        "example": "standard",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "ports": {
                        "items": {
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "organization": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "role": {
                              "description": "Either 'primary' or 'secondary'.",
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "switch_id": {
                              "description": "A switch 'short ID'",
                              "type": "string"
                            },
                            "virtual_circuits": {
                              "properties": {
                                "virtual_circuits": {
                                  "items": {},
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "redundancy": {
                        "type": "string"
                      },
                      "service_tokens": {
                        "items": {
                          "properties": {
                            "expires_at": {
                              "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "id": {
                              "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                              "format": "uuid",
                              "type": "string"
                            },
                            "max_allowed_speed": {
                              "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                              "example": "'200000000' or '200mbps'",
                              "type": "string"
                            },
                            "role": {
                              "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                              "enum": [
                                "primary",
                                "redundant"
                              ],
                              "type": "string"
                            },
                            "service_token_type": {
                              "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                              "enum": [
                                "a_side"
                              ],
                              "type": "string"
                            },
                            "state": {
                              "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                              "enum": [
                                "inactive",
                                "active",
                                "expired"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "speed": {
                        "description": "The connection's speed in bps.",
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "List the connections belonging to the organization",
        "operationId": "organizationListInterconnections",
        "summary": "List organization connections"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the organization",
            "format": "uuid",
            "in": "path",
            "name": "organization_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Connection details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "metro": {
                  "description": "A Metro ID or code.",
                  "type": "string"
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "type": "string"
                },
                "redundancy": {
                  "description": "Either 'primary' or 'redundant'.",
                  "type": "string"
                },
                "service_token_type": {
                  "description": "Can only be set to 'a_side' to create a shared connection with an A-side Fabric service token. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
                  "enum": [
                    "a_side"
                  ],
                  "example": "a_side",
                  "type": "string"
                },
                "speed": {
                  "description": "A connection speed, in bps, mbps, or gbps. Ex: '100000000' or '100 mbps'.",
                  "type": "string"
                },
                "type": {
                  "description": "Either 'shared' or 'dedicated'.",
                  "type": "string"
                },
                "vlans": {
                  "description": "A list of one or two metro-based VLANs that will be set on the primary and/or secondary (if redundant) virtual circuits respectively when creating a shared connection. VLANs can also be set after the connection is created, but are required to activate the connection. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
                  "example": [
                    1000,
                    1001
                  ],
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "name",
                "metro",
                "type",
                "redundancy"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Details of the metro the facility is in"
                    }
                  ]
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ports": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Either 'primary' or 'secondary'.",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "switch_id": {
                        "description": "A switch 'short ID'",
                        "type": "string"
                      },
                      "virtual_circuits": {
                        "properties": {
                          "virtual_circuits": {
                            "items": {},
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "redundancy": {
                  "type": "string"
                },
                "service_tokens": {
                  "items": {
                    "properties": {
                      "expires_at": {
                        "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                        "format": "uuid",
                        "type": "string"
                      },
                      "max_allowed_speed": {
                        "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                        "example": "'200000000' or '200mbps'",
                        "type": "string"
                      },
                      "role": {
                        "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                        "enum": [
                          "primary",
                          "redundant"
                        ],
                        "type": "string"
                      },
                      "service_token_type": {
                        "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                        "enum": [
                          "a_side"
                        ],
                        "type": "string"
                      },
                      "state": {
                        "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                        "enum": [
                          "inactive",
                          "active",
                          "expired"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "speed": {
                  "description": "The connection's speed in bps.",
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Creates a new connection request. A Project ID must be specified in the request body for connections on shared ports.",
        "operationId": "createOrganizationInterconnection",
        "summary": "Request a new connection for the organization"
      }
    },
    "/payment-methods/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Payment Method UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentMethods"
        ],
        "description": "Deletes the payment method.",
        "operationId": "deletePaymentMethod",
        "summary": "Delete the payment method"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Payment Method UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "billing_address": {
                  "properties": {
                    "country_code_alpha2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "street_address": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "card_type": {
                  "type": "string"
                },
                "cardholder_name": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by_user": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "default": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "expiration_month": {
                  "type": "string"
                },
                "expiration_year": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentMethods"
        ],
        "description": "Returns a payment method",
        "operationId": "findPaymentMethodById",
        "summary": "Retrieve a payment method"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Payment Method UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Payment Method to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "billing_address": {
                  "type": "object"
                },
                "cardholder_name": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "expiration_month": {
                  "type": "string"
                },
                "expiration_year": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "billing_address": {
                  "properties": {
                    "country_code_alpha2": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "street_address": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "card_type": {
                  "type": "string"
                },
                "cardholder_name": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by_user": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "default": {
                  "type": "boolean"
                },
                "email": {
                  "type": "string"
                },
                "expiration_month": {
                  "type": "string"
                },
                "expiration_year": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentMethods"
        ],
        "description": "Updates the payment method.",
        "operationId": "updatePaymentMethod",
        "summary": "Update the payment method"
      }
    },
    "/plans": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "plans": {
                  "items": {
                    "properties": {
                      "available_in": {
                        "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "class": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "legacy": {
                        "type": "boolean"
                      },
                      "line": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pricing": {
                        "type": "object"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "specs": {
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Plans"
        ],
        "description": "Provides a listing of available plans to provision your device on.",
        "operationId": "findPlans",
        "summary": "Retrieve all plans"
      }
    },
    "/ports/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Returns a port",
        "operationId": "findPortById",
        "summary": "Retrieve a port"
      }
    },
    "/ports/{id}/assign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "vnid": {
                  "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself.\n",
                  "example": "1001",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Assign a hardware port to a virtual network.",
        "operationId": "assignPort",
        "summary": "Assign a port to virtual network"
      }
    },
    "/ports/{id}/bond": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "enable both ports",
            "in": "query",
            "name": "bulk_enable",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Enabling bonding for one or all ports",
        "operationId": "bondPort",
        "summary": "Enabling bonding"
      }
    },
    "/ports/{id}/convert/layer-2": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Virtual Network ID",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "vnid": {
                  "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself.\n",
                  "example": "1001",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Converts a bond port to Layer 2. IP assignments of the port will be removed.",
        "operationId": "convertLayer2",
        "summary": "Convert to Layer 2"
      }
    },
    "/ports/{id}/convert/layer-3": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "IPs to request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "request_ips": {
                  "items": {
                    "properties": {
                      "address_family": {
                        "type": "integer"
                      },
                      "public": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Converts a bond port to Layer 3. VLANs must first be unassigned.",
        "operationId": "convertLayer3",
        "summary": "Convert to Layer 3"
      }
    },
    "/ports/{id}/disbond": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "disable both ports",
            "in": "query",
            "name": "bulk_disable",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Disabling bonding for one or all ports",
        "operationId": "disbondPort",
        "summary": "Disabling bonding"
      }
    },
    "/ports/{id}/native-vlan": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Removes the native VLAN from this port",
        "operationId": "deleteNativeVlan",
        "summary": "Remove native VLAN"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself (ex: '1001').",
            "in": "query",
            "name": "vnid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Sets a virtual network on this port as a \"native VLAN\". The VLAN must have already been assigned using the using the \"Assign a port to a virtual network\" operation.",
        "operationId": "assignNativeVlan",
        "summary": "Assign a native VLAN"
      }
    },
    "/ports/{id}/unassign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself (ex: '1001').",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "vnid": {
                  "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself.\n",
                  "example": "1001",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Unassign a port for a hardware.",
        "operationId": "unassignPort",
        "summary": "Unassign a port"
      }
    },
    "/ports/{id}/vlan-assignments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "default": [
              "port",
              "virtual_network"
            ],
            "description": "Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "vlan_assignments": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "native": {
                        "type": "boolean"
                      },
                      "port": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "state": {
                        "enum": [
                          "assigned",
                          "unassigning"
                        ],
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "virtual_network": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "vlan": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Show the port's current VLAN assignments, including if this VLAN is set as native, and the current state of the assignment (ex. 'assigned' or 'unassigning')",
        "operationId": "findPortVlanAssignments",
        "summary": "List Current VLAN assignments for a port"
      }
    },
    "/ports/{id}/vlan-assignments/batches": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "batches": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "error_messages": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "port": {
                        "properties": {
                          "data": {
                            "type": "object"
                          },
                          "disbond_operation_supported": {
                            "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                            "type": "boolean"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "virtual_networks": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "state": {
                        "enum": [
                          "queued",
                          "in_progress",
                          "completed",
                          "failed"
                        ],
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "vlan_assignments": {
                        "items": {
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "native": {
                              "type": "boolean"
                            },
                            "state": {
                              "enum": [
                                "assigned",
                                "unassigned"
                              ],
                              "type": "string"
                            },
                            "vlan": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Show all the VLAN assignment batches that have been created for managing this port's VLAN assignments",
        "operationId": "findPortVlanAssignmentBatches",
        "summary": "List the VLAN Assignment Batches for a port"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "VLAN Assignment batch details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "vlan_assignments": {
                  "items": {
                    "properties": {
                      "native": {
                        "type": "boolean"
                      },
                      "state": {
                        "enum": [
                          "assigned",
                          "unassigned"
                        ],
                        "type": "string"
                      },
                      "vlan": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "error_messages": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "port": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "disbond_operation_supported": {
                      "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                      "type": "boolean"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "virtual_networks": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed",
                    "failed"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "vlan_assignments": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "native": {
                        "type": "boolean"
                      },
                      "state": {
                        "enum": [
                          "assigned",
                          "unassigned"
                        ],
                        "type": "string"
                      },
                      "vlan": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Create a new asynchronous batch request which handles adding and/or removing the VLANs to which the port is assigned.",
        "operationId": "createPortVlanAssignmentBatch",
        "summary": "Create a new Port-VLAN Assignment management batch"
      }
    },
    "/ports/{id}/vlan-assignments/batches/{batch_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Batch ID",
            "format": "uuid",
            "in": "path",
            "name": "batch_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "error_messages": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "port": {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "disbond_operation_supported": {
                      "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                      "type": "boolean"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "virtual_networks": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "quantity": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed",
                    "failed"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "vlan_assignments": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "native": {
                        "type": "boolean"
                      },
                      "state": {
                        "enum": [
                          "assigned",
                          "unassigned"
                        ],
                        "type": "string"
                      },
                      "vlan": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Returns the details of an existing Port-VLAN Assignment batch, including the list of VLANs to assign or unassign, and the current state of the batch.",
        "operationId": "findPortVlanAssignmentBatchByPortIdAndBatchId",
        "summary": "Retrieve a VLAN Assignment Batch's details"
      }
    },
    "/ports/{id}/vlan-assignments/{assignment_id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Port UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Assignment ID",
            "format": "uuid",
            "in": "path",
            "name": "assignment_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "default": [
              "port",
              "virtual_network"
            ],
            "description": "Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "native": {
                  "type": "boolean"
                },
                "port": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "state": {
                  "enum": [
                    "assigned",
                    "unassigning"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "virtual_network": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "vlan": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Ports"
        ],
        "description": "Show the details of a specific Port-VLAN assignment, including the current state and if the VLAN is set as native.",
        "operationId": "findPortVlanAssignmentByPortIdAndAssignmentId",
        "summary": "Show a particular Port VLAN assignment's details"
      }
    },
    "/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "bgp_config": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "devices": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "invitations": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "max_devices": {
                        "type": "object"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "memberships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "network_status": {
                        "type": "object"
                      },
                      "payment_method": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "ssh_keys": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "volumes": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Returns a collection of projects that the current user is a member of.",
        "operationId": "findProjects",
        "summary": "Retrieve all projects"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "customdata": {
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "organization_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "payment_method_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Creates a new project for the user default organization. If the user don't have an organization, a new one will be created.",
        "operationId": "createProject",
        "summary": "Create a project"
      }
    },
    "/projects/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Deletes the project.",
        "operationId": "deleteProject",
        "summary": "Delete the project"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Returns a single project if the user has access",
        "operationId": "findProjectById",
        "summary": "Retrieve a project"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backend_transfer_enabled": {
                  "type": "boolean"
                },
                "customdata": {
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "payment_method_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Updates the project.",
        "operationId": "updateProject",
        "summary": "Update the project"
      }
    },
    "/projects/{id}/api-keys": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "api_keys": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "Available only for API keys",
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "allOf": [
                          {
                            "properties": {
                              "bgp_config": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "customdata": {
                                "type": "object"
                              },
                              "devices": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "invitations": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "max_devices": {
                                "type": "object"
                              },
                              "members": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "memberships": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "type": "string"
                              },
                              "network_status": {
                                "type": "object"
                              },
                              "payment_method": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "ssh_keys": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "volumes": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "Available only for project tokens"
                          }
                        ]
                      },
                      "read_only": {
                        "type": "boolean"
                      },
                      "token": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "allOf": [
                          {
                            "properties": {
                              "avatar_thumb_url": {
                                "type": "string"
                              },
                              "avatar_url": {
                                "type": "string"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "customdata": {
                                "type": "object"
                              },
                              "email": {
                                "type": "string"
                              },
                              "emails": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "fraud_score": {
                                "type": "string"
                              },
                              "full_name": {
                                "type": "string"
                              },
                              "href": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "last_login_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "max_organizations": {
                                "type": "integer"
                              },
                              "max_projects": {
                                "type": "integer"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "short_id": {
                                "type": "string"
                              },
                              "timezone": {
                                "type": "string"
                              },
                              "two_factor_auth": {
                                "type": "string"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "Available only for user tokens"
                          }
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Returns all API keys for a specific project.",
        "operationId": "findProjectAPIKeys",
        "summary": "Retrieve all API keys for the project."
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "API Key to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "read_only": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "description": {
                  "description": "Available only for API keys",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "allOf": [
                    {
                      "properties": {
                        "bgp_config": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "customdata": {
                          "type": "object"
                        },
                        "devices": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "invitations": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "max_devices": {
                          "type": "object"
                        },
                        "members": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "memberships": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "name": {
                          "type": "string"
                        },
                        "network_status": {
                          "type": "object"
                        },
                        "payment_method": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "ssh_keys": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "volumes": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Available only for project tokens"
                    }
                  ]
                },
                "read_only": {
                  "type": "boolean"
                },
                "token": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "allOf": [
                    {
                      "properties": {
                        "avatar_thumb_url": {
                          "type": "string"
                        },
                        "avatar_url": {
                          "type": "string"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "customdata": {
                          "type": "object"
                        },
                        "email": {
                          "type": "string"
                        },
                        "emails": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "fraud_score": {
                          "type": "string"
                        },
                        "full_name": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "last_login_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "max_organizations": {
                          "type": "integer"
                        },
                        "max_projects": {
                          "type": "integer"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "short_id": {
                          "type": "string"
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "two_factor_auth": {
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Available only for user tokens"
                    }
                  ]
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Creates an API key for a project.",
        "operationId": "createProjectAPIKey",
        "summary": "Create an API key for a project."
      }
    },
    "/projects/{id}/batches": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "batches": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "devices": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "error_messages": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Batches"
        ],
        "description": "Returns all batches for the given project",
        "operationId": "findBatchesByProject",
        "summary": "Retrieve all batches by project"
      }
    },
    "/projects/{id}/bgp-config": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok\n\nWhen BGP configuration is not enabled empty structure is returned.\nWhen BGP configuration is disabled after being enabled BGP configuration data is returned with status disabled.\n",
            "schema": {
              "properties": {
                "asn": {
                  "description": "Autonomous System Number. ASN is required with Global BGP. With Local BGP the private ASN, 65000, is assigned.",
                  "example": 65000,
                  "format": "int32",
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deployment_type": {
                  "description": "In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space.\n",
                  "enum": [
                    "global",
                    "local"
                  ],
                  "example": "local",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "max_prefix": {
                  "default": 10,
                  "description": "The maximum number of route filters allowed per server",
                  "type": "integer"
                },
                "md5": {
                  "description": "(Optional) Password for BGP session in plaintext (not a checksum)",
                  "type": "string",
                  "x-nullable": true
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ranges": {
                  "description": "The IP block ranges associated to the ASN (Populated in Global BGP only)",
                  "items": {
                    "properties": {
                      "address_family": {
                        "type": "integer"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "range": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "requested_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "route_object": {
                  "description": "Specifies AS-MACRO (aka AS-SET) to use when building client route filters",
                  "type": "string"
                },
                "sessions": {
                  "description": "The direct connections between neighboring routers that want to exchange routing information.",
                  "items": {
                    "properties": {
                      "address_family": {
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "default_route": {
                        "type": "boolean"
                      },
                      "device": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "learned_routes": {
                        "items": {
                          "description": "IPv4 or IPv6 range",
                          "example": "10.32.16.0/31",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                        "enum": [
                          "unknown",
                          "up",
                          "down"
                        ],
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "address_family"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "status": {
                  "description": "Status of the BGP Config. Status \"requested\" is valid only with the \"global\" deployment_type.",
                  "enum": [
                    "requested",
                    "enabled",
                    "disabled"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found\n\nThe project was not found.\n",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Returns a bgp config",
        "operationId": "findBgpConfigByProject",
        "summary": "Retrieve a bgp config"
      }
    },
    "/projects/{id}/bgp-configs": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "BGP config Request to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "asn": {
                  "type": "integer"
                },
                "deployment_type": {
                  "type": "string"
                },
                "md5": {
                  "type": "string"
                },
                "use_case": {
                  "type": "string"
                }
              },
              "required": [
                "deployment_type",
                "asn"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Requests to enable bgp configuration for a project.",
        "operationId": "requestBgpConfig",
        "summary": "Requesting bgp config"
      }
    },
    "/projects/{id}/bgp/sessions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "bgp_sessions": {
                  "items": {
                    "properties": {
                      "address_family": {
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "default_route": {
                        "type": "boolean"
                      },
                      "device": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "learned_routes": {
                        "items": {
                          "description": "IPv4 or IPv6 range",
                          "example": "10.32.16.0/31",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                        "enum": [
                          "unknown",
                          "up",
                          "down"
                        ],
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "address_family"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Provides a listing of available BGP sessions for the project.",
        "operationId": "findProjectBgpSessions",
        "summary": "Retrieve all BGP sessions for project"
      }
    },
    "/projects/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Provides the custom metadata stored for this project in json format",
        "operationId": "findProjectCustomdata",
        "summary": "Retrieve the custom metadata of a project"
      }
    },
    "/projects/{id}/devices": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by device facility",
            "in": "query",
            "name": "facility",
            "type": "string"
          },
          {
            "description": "Filter by partial hostname",
            "in": "query",
            "name": "hostname",
            "type": "string"
          },
          {
            "description": "Filter only reserved instances",
            "in": "query",
            "name": "reserved",
            "type": "boolean"
          },
          {
            "description": "Filter by device tag",
            "in": "query",
            "name": "tag",
            "type": "string"
          },
          {
            "description": "Filter by instance type (ondemand,spot,reserved)",
            "in": "query",
            "name": "type",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "devices": {
                  "items": {
                    "properties": {
                      "tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "always_pxe": {
                        "type": "boolean"
                      },
                      "billing_cycle": {
                        "type": "string"
                      },
                      "bonding_mode": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by": {
                        "allOf": [
                          {
                            "properties": {
                              "avatar_thumb_url": {
                                "description": "Avatar thumbnail URL of the User",
                                "type": "string"
                              },
                              "created_at": {
                                "description": "When the user was created",
                                "format": "date-time",
                                "type": "string"
                              },
                              "email": {
                                "description": "Primary email address of the User",
                                "type": "string"
                              },
                              "first_name": {
                                "description": "First name of the User",
                                "type": "string"
                              },
                              "full_name": {
                                "description": "Full name of the User",
                                "type": "string"
                              },
                              "href": {
                                "description": "API URL uniquely representing the User",
                                "type": "string"
                              },
                              "id": {
                                "description": "ID of the User",
                                "format": "uuid",
                                "type": "string"
                              },
                              "last_name": {
                                "description": "Last name of the User",
                                "type": "string"
                              },
                              "short_id": {
                                "description": "Short ID of the User",
                                "type": "string"
                              },
                              "updated_at": {
                                "description": "When the user details were last updated",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "short_id"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "The user that created the device."
                          }
                        ]
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "facility": {
                        "properties": {
                          "address": {
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "address2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "coordinates": {
                                "properties": {
                                  "latitude": {
                                    "type": "string"
                                  },
                                  "longitude": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "country": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "zip_code",
                              "country"
                            ],
                            "type": "object"
                          },
                          "code": {
                            "type": "string"
                          },
                          "features": {
                            "example": [
                              "baremetal",
                              "backend_transfer",
                              "global_ipv4"
                            ],
                            "items": {
                              "enum": [
                                "baremetal",
                                "backend_transfer",
                                "layer_2",
                                "global_ipv4",
                                "ibx"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "ip_ranges": {
                            "description": "IP ranges registered in facility. Can be used for GeoIP location",
                            "example": [
                              "2604:1380::/36",
                              "147.75.192.0/21"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "metro": {
                            "allOf": [
                              {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "The metro the facility is in"
                              }
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hardware_reservation": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "ip_addresses": {
                        "items": {
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "address_family": {
                              "type": "integer"
                            },
                            "assigned_to": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "cidr": {
                              "type": "integer"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "enabled": {
                              "type": "boolean"
                            },
                            "gateway": {
                              "type": "string"
                            },
                            "global_ip": {
                              "type": "boolean"
                            },
                            "href": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "manageable": {
                              "type": "boolean"
                            },
                            "management": {
                              "type": "boolean"
                            },
                            "metro": {
                              "allOf": [
                                {
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "country": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                {
                                  "description": "The metro the IP address is in"
                                }
                              ]
                            },
                            "netmask": {
                              "type": "string"
                            },
                            "network": {
                              "type": "string"
                            },
                            "parent_block": {
                              "properties": {
                                "cidr": {
                                  "type": "integer"
                                },
                                "href": {
                                  "type": "string"
                                },
                                "netmask": {
                                  "type": "string"
                                },
                                "network": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "public": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "ipxe_script_url": {
                        "type": "string"
                      },
                      "iqn": {
                        "type": "string"
                      },
                      "locked": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the facility is in"
                          }
                        ]
                      },
                      "network_ports": {
                        "allOf": [
                          {
                            "properties": {
                              "data": {
                                "type": "object"
                              },
                              "disbond_operation_supported": {
                                "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                                "type": "boolean"
                              },
                              "href": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "virtual_networks": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                          }
                        ]
                      },
                      "operating_system": {
                        "properties": {
                          "distro": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "licensed": {
                            "description": "Licenced OS is priced according to pricing property",
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "preinstallable": {
                            "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                            "type": "boolean"
                          },
                          "pricing": {
                            "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                            "type": "object"
                          },
                          "provisionable_on": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "plan": {
                        "properties": {
                          "available_in": {
                            "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "class": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "legacy": {
                            "type": "boolean"
                          },
                          "line": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "pricing": {
                            "type": "object"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "specs": {
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "project": {
                        "allOf": [
                          {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Full version of project object when included"
                          }
                        ]
                      },
                      "project_lite": {
                        "allOf": [
                          {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Lite version of project object when included"
                          }
                        ]
                      },
                      "provisioning_events": {
                        "items": {
                          "properties": {
                            "body": {
                              "type": "string"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "interpolated": {
                              "type": "string"
                            },
                            "relationships": {
                              "items": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "state": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "provisioning_percentage": {
                        "description": "Only visible while device provisioning",
                        "format": "float",
                        "type": "number"
                      },
                      "root_password": {
                        "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                        "type": "string"
                      },
                      "short_id": {
                        "type": "string"
                      },
                      "spot_instance": {
                        "description": "Whether or not the device is a spot instance.",
                        "type": "boolean"
                      },
                      "spot_price_max": {
                        "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                        "format": "float",
                        "type": "number"
                      },
                      "ssh_keys": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "switch_uuid": {
                        "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                        "type": "string"
                      },
                      "termination_time": {
                        "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      },
                      "userdata": {
                        "type": "string"
                      },
                      "volumes": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Provides a collection of devices for a given project.",
        "operationId": "findProjectDevices",
        "summary": "Retrieve all devices of a project"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "allOf": [
                {},
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "always_pxe": {
                      "default": false,
                      "description": "When true, devices with a `custom_ipxe` OS will always boot to iPXE. The\ndefault setting of false ensures that iPXE will be used on only the\nfirst boot.",
                      "type": "boolean"
                    },
                    "billing_cycle": {
                      "description": "The billing cycle of the device.",
                      "enum": [
                        "hourly",
                        "daily",
                        "monthly",
                        "yearly"
                      ],
                      "type": "string"
                    },
                    "customdata": {
                      "default": {},
                      "description": "Customdata is an arbitrary JSON value that can be accessed via the\nmetadata service."
                    },
                    "description": {
                      "description": "Any description of the device or how it will be used. This may be used\nto inform other API consumers with project access.",
                      "type": "string"
                    },
                    "features": {
                      "description": "The features attribute allows you to optionally specify what features your server should have.\n\nIn the API shorthand syntax, all features listed are `required`:\n\n```\n{ \"features\": [\"tpm\"] }\n```\n\nAlternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a `preferred` value. The request will not fail if we have no servers with that feature in our inventory. The API offers an alternative syntax for mixing preferred and required features:\n\n```\n{ \"features\": { \"tpm\": \"required\", \"raid\": \"preferred\" } }\n```\n\nThe request will only fail if there are no available servers matching the required `tpm` criteria.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "hardware_reservation_id": {
                      "default": "",
                      "description": "The Hardware Reservation UUID to provision. Alternatively, `next-available` can be specified to select from any of the available hardware reservations. An error will be returned if the requested reservation option is not available.\n\nSee [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/) for more details.",
                      "example": "next-available",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "The hostname to use within the operating system. The same hostname may be used on multiple devices within a project.",
                      "type": "string"
                    },
                    "ip_addresses": {
                      "default": [
                        {
                          "address_family": 4,
                          "public": true
                        },
                        {
                          "address_family": 4,
                          "public": false
                        },
                        {
                          "address_family": 6,
                          "public": true
                        }
                      ],
                      "description": "The `ip_addresses attribute will allow you to specify the addresses you want created with your device.\n\nThe default value configures public IPv4, public IPv6, and private IPv4.\n\nPrivate IPv4 address is required. When specifying `ip_addresses`, one of the array items must enable private IPv4.\n\nSome operating systems require public IPv4 address. In those cases you will receive an error message if public IPv4 is not enabled.\n\nFor example, to only configure your server with a private IPv4 address, you can send `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": false }] }`.\n\nIt is possible to request a subnet size larger than a `/30` by assigning addresses using the UUID(s) of ip_reservations in your project.\n\nFor example, `{ \"ip_addresses\": [..., {\"address_family\": 4, \"public\": true, \"ip_reservations\": [\"uuid1\", \"uuid2\"]}] }`\n\nTo access a server without public IPs, you can use our Out-of-Band console access (SOS) or proxy through another server in the project with public IPs enabled.",
                      "items": {
                        "properties": {
                          "address_family": {
                            "description": "Address Family for IP Address",
                            "enum": [
                              4,
                              6
                            ],
                            "example": 4,
                            "format": "integer",
                            "type": "number"
                          },
                          "cidr": {
                            "description": "Cidr Size for the IP Block created. Valid values depends on the operating system being provisioned. (28..32 for IPv4 addresses, 124..127 for IPv6 addresses)",
                            "example": 28,
                            "format": "integer",
                            "type": "number"
                          },
                          "ip_reservations": {
                            "description": "UUIDs of any IP reservations to use when assigning IPs",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "public": {
                            "default": true,
                            "description": "Address Type for IP Address",
                            "example": false,
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "ipxe_script_url": {
                      "externalDocs": {
                        "url": "https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/"
                      },
                      "description": "When set, the device will chainload an iPXE Script at boot fetched from the supplied URL.\n\nSee [Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/) for more details.",
                      "type": "string"
                    },
                    "locked": {
                      "default": false,
                      "description": "Whether the device should be locked, preventing accidental deletion.",
                      "type": "boolean"
                    },
                    "no_ssh_keys": {
                      "default": false,
                      "description": "Overrides default behaviour of attaching all of the organization members ssh keys and project ssh keys to device if no specific keys specified",
                      "type": "boolean"
                    },
                    "operating_system": {
                      "description": "The slug of the operating system to provision. Check the Equinix Metal operating system documentation for rules that may be imposed per operating system, including restrictions on IP address options and device plans.",
                      "type": "string"
                    },
                    "plan": {
                      "description": "The slug of the device plan to provision.",
                      "example": "c3.large.x86",
                      "type": "string"
                    },
                    "private_ipv4_subnet_size": {
                      "default": 28,
                      "description": "Deprecated. Use ip_addresses. Subnet range for addresses allocated to this device.",
                      "format": "integer",
                      "type": "number",
                      "x-deprecated": true
                    },
                    "project_ssh_keys": {
                      "description": "A list of UUIDs identifying the device parent project\nthat should be authorized to access this device (typically\nvia /root/.ssh/authorized_keys). These keys will also appear in the device metadata.\n\nIf no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),\nall parent project keys, parent project members keys and organization members keys will be included. This behaviour can\nbe changed with 'no_ssh_keys' option to omit any SSH key being added.\n",
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "public_ipv4_subnet_size": {
                      "default": 31,
                      "description": "Deprecated. Use ip_addresses. Subnet range for addresses allocated to this device. Your project must have addresses available for a non-default request.",
                      "format": "integer",
                      "type": "number",
                      "x-deprecated": true
                    },
                    "spot_instance": {
                      "type": "boolean"
                    },
                    "spot_price_max": {
                      "format": "float",
                      "type": "number"
                    },
                    "ssh_keys": {
                      "description": "A list of new or existing project ssh_keys\nthat should be authorized to access this device (typically\nvia /root/.ssh/authorized_keys). These keys will also\nappear in the device metadata.\n\nThese keys are added in addition to any keys defined by\n  `project_ssh_keys` and `user_ssh_keys`.\n",
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "termination_time": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "user_ssh_keys": {
                      "description": "A list of UUIDs identifying the users\nthat should be authorized to access this device (typically\nvia /root/.ssh/authorized_keys).  These keys will also\nappear in the device metadata.\n\nThe users must be members of the project or organization.\n\nIf no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),\nall parent project keys, parent project members keys and organization members keys will be included. This behaviour can\nbe changed with 'no_ssh_keys' option to omit any SSH key being added.\n",
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userdata": {
                      "externalDocs": {
                        "url": "https://metal.equinix.com/developers/docs/servers/user-data/"
                      },
                      "description": "The userdata presented in the metadata service for this device.  Userdata is fetched and interpreted by the operating system installed on the device. Acceptable formats are determined by the operating system, with the exception of a special iPXE enabling syntax which is handled before the operating system starts.\n\nSee [Server User Data](https://metal.equinix.com/developers/docs/servers/user-data/) and [Provisioning with Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/#provisioning-with-custom-ipxe) for more details.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "plan",
                    "operating_system"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "always_pxe": {
                  "type": "boolean"
                },
                "billing_cycle": {
                  "type": "string"
                },
                "bonding_mode": {
                  "type": "integer"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "created_by": {
                  "allOf": [
                    {
                      "properties": {
                        "avatar_thumb_url": {
                          "description": "Avatar thumbnail URL of the User",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "When the user was created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "email": {
                          "description": "Primary email address of the User",
                          "type": "string"
                        },
                        "first_name": {
                          "description": "First name of the User",
                          "type": "string"
                        },
                        "full_name": {
                          "description": "Full name of the User",
                          "type": "string"
                        },
                        "href": {
                          "description": "API URL uniquely representing the User",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID of the User",
                          "format": "uuid",
                          "type": "string"
                        },
                        "last_name": {
                          "description": "Last name of the User",
                          "type": "string"
                        },
                        "short_id": {
                          "description": "Short ID of the User",
                          "type": "string"
                        },
                        "updated_at": {
                          "description": "When the user details were last updated",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "short_id"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "The user that created the device."
                    }
                  ]
                },
                "customdata": {
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "address": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "coordinates": {
                          "properties": {
                            "latitude": {
                              "type": "string"
                            },
                            "longitude": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "country": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip_code": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "zip_code",
                        "country"
                      ],
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "features": {
                      "example": [
                        "baremetal",
                        "backend_transfer",
                        "global_ipv4"
                      ],
                      "items": {
                        "enum": [
                          "baremetal",
                          "backend_transfer",
                          "layer_2",
                          "global_ipv4",
                          "ibx"
                        ],
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "ip_ranges": {
                      "description": "IP ranges registered in facility. Can be used for GeoIP location",
                      "example": [
                        "2604:1380::/36",
                        "147.75.192.0/21"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the facility is in"
                        }
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "hardware_reservation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "hostname": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "ip_addresses": {
                  "items": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address_family": {
                        "type": "integer"
                      },
                      "assigned_to": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "cidr": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "gateway": {
                        "type": "string"
                      },
                      "global_ip": {
                        "type": "boolean"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "manageable": {
                        "type": "boolean"
                      },
                      "management": {
                        "type": "boolean"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the IP address is in"
                          }
                        ]
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "parent_block": {
                        "properties": {
                          "cidr": {
                            "type": "integer"
                          },
                          "href": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "ipxe_script_url": {
                  "type": "string"
                },
                "iqn": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the facility is in"
                    }
                  ]
                },
                "network_ports": {
                  "allOf": [
                    {
                      "properties": {
                        "data": {
                          "type": "object"
                        },
                        "disbond_operation_supported": {
                          "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                          "type": "boolean"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "virtual_networks": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                    }
                  ]
                },
                "operating_system": {
                  "properties": {
                    "distro": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "licensed": {
                      "description": "Licenced OS is priced according to pricing property",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "preinstallable": {
                      "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                      "type": "boolean"
                    },
                    "pricing": {
                      "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                      "type": "object"
                    },
                    "provisionable_on": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "plan": {
                  "properties": {
                    "available_in": {
                      "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "class": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "legacy": {
                      "type": "boolean"
                    },
                    "line": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pricing": {
                      "type": "object"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "specs": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Full version of project object when included"
                    }
                  ]
                },
                "project_lite": {
                  "allOf": [
                    {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Lite version of project object when included"
                    }
                  ]
                },
                "provisioning_events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "provisioning_percentage": {
                  "description": "Only visible while device provisioning",
                  "format": "float",
                  "type": "number"
                },
                "root_password": {
                  "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "spot_instance": {
                  "description": "Whether or not the device is a spot instance.",
                  "type": "boolean"
                },
                "spot_price_max": {
                  "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                  "format": "float",
                  "type": "number"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "switch_uuid": {
                  "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                  "type": "string"
                },
                "termination_time": {
                  "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "userdata": {
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Devices"
        ],
        "description": "Creates a new device and provisions it in the specified location.\n\nDevice type-specific options are accepted.  For example, `baremetal` devices accept `operating_system`, `hostname`, and `plan`. These parameters may not be accepted for other device types. The default device type is `baremetal`.",
        "operationId": "createDevice",
        "summary": "Create a device"
      }
    },
    "/projects/{id}/devices/batch": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Batches to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "batches": {
                  "items": {
                    "properties": {
                      "tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "always_pxe": {
                        "type": "boolean"
                      },
                      "billing_cycle": {
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "description": {
                        "type": "string"
                      },
                      "facility": {
                        "description": "Array of facility codes the batch can use for provisioning. This param also takes a string if you want the batch to be fulfilled in only one facility. Cannot be set if the metro is already set.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "features": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "hostnames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "ip_addresses": {
                        "items": {
                          "properties": {
                            "address_family": {
                              "description": "Address Family for IP Address",
                              "enum": [
                                4,
                                6
                              ],
                              "example": 4,
                              "format": "integer",
                              "type": "number"
                            },
                            "cidr": {
                              "description": "Cidr Size for the IP Block created. Valid values depends on the operating system been provisioned (28..32 for IPv4 addresses, 124..127 for IPv6 addresses).",
                              "example": 28,
                              "format": "integer",
                              "type": "number"
                            },
                            "ip_reservations": {
                              "description": "UUIDs of any IP reservations to use when assigning IPs",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "public": {
                              "default": true,
                              "description": "Address Type for IP Address",
                              "example": false,
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "locked": {
                        "type": "boolean"
                      },
                      "metro": {
                        "description": "The metro ID or code the batch can use for provisioning. Cannot be set if the facility is already set.",
                        "type": "string"
                      },
                      "no_ssh_keys": {
                        "type": "boolean"
                      },
                      "operating_system": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "project_ssh_keys": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "termination_time": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user_ssh_keys": {
                        "description": "The UUIDs of users whose SSH keys should be included on the provisioned device.",
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "userdata": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "batches": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "devices": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "error_messages": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Batches"
        ],
        "description": "Creates new devices in batch and provisions them in our datacenter.\n\nType-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.\n\nThe features attribute allows you to optionally specify what features your server should have.\n\nFor example, if you require a server with a TPM chip, you may specify `{ \"features\": { \"tpm\": \"required\" } }` (or `{ \"features\": [\"tpm\"] }` in shorthand).\n\nThe request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).\n\nThe request will not fail if we have no servers with that feature in our inventory.\n\nThe facilities attribute specifies in what datacenter you wish to create the device.\n\nYou can either specify a single facility `{ \"facility\": \"f1\" }` , or you can instruct to create the device in the best available datacenter `{ \"facility\": \"any\" }`. Additionally it is possible to set a prioritized location selection.\n\nFor example `{ \"facility\": [\"f3\", \"f2\", \"any\"] }` will try to assign to the facility f3, if there are no available f2, and so on. If \"any\" is not specified for \"facility\", the request will fail unless it can assign in the selected locations.\n\nWith `{ \"facility\": \"any\" }` you have the option to diversify to indicate how many facilities you are willing to be spread across. For this purpose use parameter: `facility_diversity_level = N`.\n\nFor example:\n\n`{ \"facilities\": [\"sjc1\", \"ewr1\", \"any\"] ,  \"facility_diversity_level\" = 1, \"quantity\" = 10 }` will assign 10 devices into the same facility, trying first in \"sjc1\", and if there aren’t available, it will try in  \"ewr1\", otherwise any other.\n\nThe `ip_addresses` attribute will allow you to specify the addresses you want created with your device.\n\nTo maintain backwards compatibility, If the attribute is not sent in the request, it will be treated as if `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": true }, { \"address_family\": 4, \"public\": false }, { \"address_family\": 6, \"public\": true }] }` was sent.\n\nThe private IPv4 address is required and always need to be sent in the array. Not all operating systems support no public IPv4 address, so in those cases you will receive an error message.\n\nFor example, to only configure your server with a private IPv4 address, you can send `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": false }] }`.\n\nNote: when specifying a subnet size larger than a /30, you will need to supply the UUID(s) of existing ip_reservations in your project to assign IPs from.\n\nFor example, `{ \"ip_addresses\": [..., {\"address_family\": 4, \"public\": true, \"ip_reservations\": [\"uuid1\", \"uuid2\"]}] }`\n\nTo access a server without public IPs, you can use our Out-of-Band console access (SOS) or use another server with public IPs as a proxy.",
        "operationId": "createDeviceBatch",
        "summary": "Create a devices batch"
      }
    },
    "/projects/{id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "events": {
                  "items": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "interpolated": {
                        "type": "string"
                      },
                      "relationships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of events for a single project",
        "operationId": "findProjectEvents",
        "summary": "Retrieve project's events"
      }
    },
    "/projects/{id}/facilities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "facilities": {
                  "items": {
                    "properties": {
                      "address": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "coordinates": {
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "code": {
                        "type": "string"
                      },
                      "features": {
                        "example": [
                          "baremetal",
                          "backend_transfer",
                          "global_ipv4"
                        ],
                        "items": {
                          "enum": [
                            "baremetal",
                            "backend_transfer",
                            "layer_2",
                            "global_ipv4",
                            "ibx"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "ip_ranges": {
                        "description": "IP ranges registered in facility. Can be used for GeoIP location",
                        "example": [
                          "2604:1380::/36",
                          "147.75.192.0/21"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the facility is in"
                          }
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Facilities"
        ],
        "description": "Returns a listing of available datacenters for the given project",
        "operationId": "findFacilitiesByProject",
        "summary": "Retrieve all facilities visible by the project"
      }
    },
    "/projects/{id}/global-bgp-ranges": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "global_bgp_ranges": {
                  "items": {
                    "properties": {
                      "address_family": {
                        "type": "integer"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "range": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "BGP"
        ],
        "description": "Returns all global bgp ranges for a project",
        "operationId": "findGlobalBgpRanges",
        "summary": "Retrieve all global bgp ranges"
      }
    },
    "/projects/{id}/hardware-reservations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "hardware_reservations": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "custom_rate": {
                        "description": "Amount that will be charged for every billing_cycle.",
                        "example": 1050.5,
                        "format": "float",
                        "type": "number"
                      },
                      "device": {
                        "properties": {
                          "tags": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "always_pxe": {
                            "type": "boolean"
                          },
                          "billing_cycle": {
                            "type": "string"
                          },
                          "bonding_mode": {
                            "type": "integer"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "created_by": {
                            "allOf": [
                              {
                                "properties": {
                                  "avatar_thumb_url": {
                                    "description": "Avatar thumbnail URL of the User",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "description": "When the user was created",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "email": {
                                    "description": "Primary email address of the User",
                                    "type": "string"
                                  },
                                  "first_name": {
                                    "description": "First name of the User",
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "description": "Full name of the User",
                                    "type": "string"
                                  },
                                  "href": {
                                    "description": "API URL uniquely representing the User",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "ID of the User",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "last_name": {
                                    "description": "Last name of the User",
                                    "type": "string"
                                  },
                                  "short_id": {
                                    "description": "Short ID of the User",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "description": "When the user details were last updated",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "short_id"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "The user that created the device."
                              }
                            ]
                          },
                          "customdata": {
                            "type": "object"
                          },
                          "description": {
                            "type": "string"
                          },
                          "facility": {
                            "properties": {
                              "address": {
                                "properties": {
                                  "address": {
                                    "type": "string"
                                  },
                                  "address2": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "coordinates": {
                                    "properties": {
                                      "latitude": {
                                        "type": "string"
                                      },
                                      "longitude": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "zip_code": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "address",
                                  "zip_code",
                                  "country"
                                ],
                                "type": "object"
                              },
                              "code": {
                                "type": "string"
                              },
                              "features": {
                                "example": [
                                  "baremetal",
                                  "backend_transfer",
                                  "global_ipv4"
                                ],
                                "items": {
                                  "enum": [
                                    "baremetal",
                                    "backend_transfer",
                                    "layer_2",
                                    "global_ipv4",
                                    "ibx"
                                  ],
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "ip_ranges": {
                                "description": "IP ranges registered in facility. Can be used for GeoIP location",
                                "example": [
                                  "2604:1380::/36",
                                  "147.75.192.0/21"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "metro": {
                                "allOf": [
                                  {
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  {
                                    "description": "The metro the facility is in"
                                  }
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "hardware_reservation": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "hostname": {
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "ip_addresses": {
                            "items": {
                              "properties": {
                                "address": {
                                  "type": "string"
                                },
                                "address_family": {
                                  "type": "integer"
                                },
                                "assigned_to": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "cidr": {
                                  "type": "integer"
                                },
                                "created_at": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "gateway": {
                                  "type": "string"
                                },
                                "global_ip": {
                                  "type": "boolean"
                                },
                                "href": {
                                  "type": "string"
                                },
                                "id": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "manageable": {
                                  "type": "boolean"
                                },
                                "management": {
                                  "type": "boolean"
                                },
                                "metro": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        },
                                        "id": {
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    {
                                      "description": "The metro the IP address is in"
                                    }
                                  ]
                                },
                                "netmask": {
                                  "type": "string"
                                },
                                "network": {
                                  "type": "string"
                                },
                                "parent_block": {
                                  "properties": {
                                    "cidr": {
                                      "type": "integer"
                                    },
                                    "href": {
                                      "type": "string"
                                    },
                                    "netmask": {
                                      "type": "string"
                                    },
                                    "network": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "public": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "ipxe_script_url": {
                            "type": "string"
                          },
                          "iqn": {
                            "type": "string"
                          },
                          "locked": {
                            "type": "boolean"
                          },
                          "metro": {
                            "allOf": [
                              {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "The metro the facility is in"
                              }
                            ]
                          },
                          "network_ports": {
                            "allOf": [
                              {
                                "properties": {
                                  "data": {
                                    "type": "object"
                                  },
                                  "disbond_operation_supported": {
                                    "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                                    "type": "boolean"
                                  },
                                  "href": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "virtual_networks": {
                                    "items": {
                                      "properties": {
                                        "href": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "href"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                              }
                            ]
                          },
                          "operating_system": {
                            "properties": {
                              "distro": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "licensed": {
                                "description": "Licenced OS is priced according to pricing property",
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "preinstallable": {
                                "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                                "type": "boolean"
                              },
                              "pricing": {
                                "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                                "type": "object"
                              },
                              "provisionable_on": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "version": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "plan": {
                            "properties": {
                              "available_in": {
                                "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "class": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "legacy": {
                                "type": "boolean"
                              },
                              "line": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "pricing": {
                                "type": "object"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "specs": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "project": {
                            "allOf": [
                              {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "Full version of project object when included"
                              }
                            ]
                          },
                          "project_lite": {
                            "allOf": [
                              {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              {
                                "description": "Lite version of project object when included"
                              }
                            ]
                          },
                          "provisioning_events": {
                            "items": {
                              "properties": {
                                "body": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "href": {
                                  "type": "string"
                                },
                                "id": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "interpolated": {
                                  "type": "string"
                                },
                                "relationships": {
                                  "items": {
                                    "properties": {
                                      "href": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "href"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "state": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "provisioning_percentage": {
                            "description": "Only visible while device provisioning",
                            "format": "float",
                            "type": "number"
                          },
                          "root_password": {
                            "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                            "type": "string"
                          },
                          "short_id": {
                            "type": "string"
                          },
                          "spot_instance": {
                            "description": "Whether or not the device is a spot instance.",
                            "type": "boolean"
                          },
                          "spot_price_max": {
                            "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                            "format": "float",
                            "type": "number"
                          },
                          "ssh_keys": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "state": {
                            "type": "string"
                          },
                          "switch_uuid": {
                            "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                            "type": "string"
                          },
                          "termination_time": {
                            "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          },
                          "userdata": {
                            "type": "string"
                          },
                          "volumes": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "facility": {
                        "properties": {
                          "address": {
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "address2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "coordinates": {
                                "properties": {
                                  "latitude": {
                                    "type": "string"
                                  },
                                  "longitude": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "country": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "zip_code",
                              "country"
                            ],
                            "type": "object"
                          },
                          "code": {
                            "type": "string"
                          },
                          "features": {
                            "example": [
                              "baremetal",
                              "backend_transfer",
                              "global_ipv4"
                            ],
                            "items": {
                              "enum": [
                                "baremetal",
                                "backend_transfer",
                                "layer_2",
                                "global_ipv4",
                                "ibx"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "ip_ranges": {
                            "description": "IP ranges registered in facility. Can be used for GeoIP location",
                            "example": [
                              "2604:1380::/36",
                              "147.75.192.0/21"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "metro": {
                            "allOf": [
                              {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "description": "The metro the facility is in"
                              }
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "need_of_service": {
                        "description": "Whether this Device requires assistance from Metal Equinix.",
                        "type": "boolean"
                      },
                      "plan": {
                        "properties": {
                          "available_in": {
                            "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "class": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "legacy": {
                            "type": "boolean"
                          },
                          "line": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "pricing": {
                            "type": "object"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "specs": {
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "project": {
                        "properties": {
                          "bgp_config": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "customdata": {
                            "type": "object"
                          },
                          "devices": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "invitations": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max_devices": {
                            "type": "object"
                          },
                          "members": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "memberships": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "network_status": {
                            "type": "object"
                          },
                          "payment_method": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "ssh_keys": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "volumes": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "provisionable": {
                        "description": "Whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first.",
                        "type": "boolean"
                      },
                      "short_id": {
                        "description": "Short version of the ID.",
                        "format": "string",
                        "type": "string"
                      },
                      "spare": {
                        "description": "Whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix",
                        "type": "boolean"
                      },
                      "switch_uuid": {
                        "description": "Switch short id. This can be used to determine if two devices are connected to the same switch, for example.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "HardwareReservations"
        ],
        "description": "Provides a collection of hardware reservations for a given project.",
        "operationId": "findProjectHardwareReservations",
        "summary": "Retrieve all hardware reservations for a given project"
      }
    },
    "/projects/{id}/ips": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter project IP reservations by reservation type",
            "in": "query",
            "items": {
              "enum": [
                "global_ipv4",
                "private_ipv4",
                "public_ipv4",
                "public_ipv6",
                "vrf"
              ],
              "type": "string"
            },
            "name": "types",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ip_addresses": {
                  "items": {},
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Provides a paginated list of IP reservations for a single project.",
        "operationId": "findIPReservations",
        "summary": "Retrieve all ip reservations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "IP Reservation Request to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {}
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "IPAddresses"
        ],
        "description": "Request more IP space for a project in order to have additional IP addresses to assign to devices.  If the request is within the max quota, an IP reservation will be created. If the project will exceed its IP quota, a request will be submitted for review, and will return an IP Reservation with a `state` of `pending`. You can automatically have the request fail with HTTP status 422 instead of triggering the review process by providing the `fail_on_approval_required` parameter set to `true` in the request.",
        "operationId": "requestIPReservation",
        "summary": "Requesting IP reservations"
      }
    },
    "/projects/{id}/licenses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "licenses": {
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "license_key": {
                        "type": "string"
                      },
                      "licensee_product": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "size": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Provides a collection of licenses for a given project.",
        "operationId": "findProjectLicenses",
        "summary": "Retrieve all licenses"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "License to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "licensee_product_id": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "license_key": {
                  "type": "string"
                },
                "licensee_product": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "size": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Licenses"
        ],
        "description": "Creates a new license for the given project",
        "operationId": "createLicense",
        "summary": "Create a License"
      }
    },
    "/projects/{id}/plans": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "plans": {
                  "items": {
                    "properties": {
                      "available_in": {
                        "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "class": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "legacy": {
                        "type": "boolean"
                      },
                      "line": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pricing": {
                        "type": "object"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "specs": {
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Plans"
        ],
        "description": "Returns a listing of available plans for the given project",
        "operationId": "findPlansByProject",
        "summary": "Retrieve all plans visible by the project"
      }
    },
    "/projects/{id}/spot-market-requests": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "spot_market_requests": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "devices_max": {
                        "type": "integer"
                      },
                      "devices_min": {
                        "type": "integer"
                      },
                      "end_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "facilities": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "instances": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "max_bid_price": {
                        "format": "float",
                        "type": "number"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the spot market request was created in"
                          }
                        ]
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "View all spot market requests for a given project.",
        "operationId": "listSpotMarketRequests",
        "summary": "List spot market requests"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Spot Market Request to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "devices_max": {
                  "type": "integer"
                },
                "devices_min": {
                  "type": "integer"
                },
                "end_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "facilities": {
                  "items": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": "array"
                },
                "instance_attributes": {
                  "properties": {
                    "tags": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "always_pxe": {
                      "type": "boolean"
                    },
                    "billing_cycle": {
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "description": {
                      "type": "string"
                    },
                    "features": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "hostname": {
                      "type": "string"
                    },
                    "hostnames": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "no_ssh_keys": {
                      "type": "boolean"
                    },
                    "operating_system": {
                      "type": "string"
                    },
                    "plan": {
                      "type": "string"
                    },
                    "private_ipv4_subnet_size": {
                      "type": "integer"
                    },
                    "project_ssh_keys": {
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "public_ipv4_subnet_size": {
                      "type": "integer"
                    },
                    "termination_time": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "user_ssh_keys": {
                      "description": "The UUIDs of users whose SSH keys should be included on the provisioned device.",
                      "items": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userdata": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "max_bid_price": {
                  "format": "float",
                  "type": "number"
                },
                "metro": {
                  "description": "The metro ID or code the spot market request will be created in.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "devices_max": {
                  "type": "integer"
                },
                "devices_min": {
                  "type": "integer"
                },
                "end_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "facilities": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "instances": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "max_bid_price": {
                  "format": "float",
                  "type": "number"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the spot market request was created in"
                    }
                  ]
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "Creates a new spot market request.\n\nType-specific options (such as operating_system for baremetal devices) should be included in the main data structure alongside hostname and plan.\n\nThe features attribute allows you to optionally specify what features your server should have. For example, if you require a server with a TPM chip, you may specify `{ \"features\": { \"tpm\": \"required\" } }` (or `{ \"features\": [\"tpm\"] }` in shorthand).\n\nThe request will fail if there are no available servers matching your criteria. Alternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a preferred value (see the example request below).\n\nThe request will not fail if we have no servers with that feature in our inventory.",
        "operationId": "createSpotMarketRequest",
        "summary": "Create a spot market request"
      }
    },
    "/projects/{id}/ssh-keys": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Search by key, label, or fingerprint",
            "in": "query",
            "name": "Search string",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "entity": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "fingerprint": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Returns a collection of the project's ssh keys.",
        "operationId": "findProjectSSHKeys",
        "summary": "Retrieve a project's ssh keys"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ssh key to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "instances_ids": {
                  "description": "List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging\n      to entity will be included",
                  "items": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": "array"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "entity": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "fingerprint": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Creates a ssh key.",
        "operationId": "createProjectSSHKey",
        "summary": "Create a ssh key for the given project"
      }
    },
    "/projects/{id}/transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the project to be transferred",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Transfer Request to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "target_organization_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "target_organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Organization owners can transfer their projects to other organizations.",
        "operationId": "createTransferRequest",
        "summary": "Create a transfer request"
      }
    },
    "/projects/{id}/usages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter usages created after this date",
            "format": "datetime",
            "in": "query",
            "name": "created[after]",
            "type": "string"
          },
          {
            "description": "Filter usages created before this date",
            "format": "datetime",
            "in": "query",
            "name": "created[before]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "usages": {
                  "items": {
                    "properties": {
                      "facility": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "plan_version": {
                        "type": "string"
                      },
                      "price": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "string"
                      },
                      "total": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Usages"
        ],
        "description": "Returns all usages for a project.",
        "operationId": "findProjectUsage",
        "summary": "Retrieve all usages for project"
      }
    },
    "/projects/{id}/virtual-networks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "description": "Filter by Facility ID (uuid) or Facility Code",
            "in": "query",
            "name": "facility",
            "type": "string"
          },
          {
            "description": "Filter by Metro ID (uuid) or Metro Code",
            "in": "query",
            "name": "metro",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "assigned_to": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "assigned_to_virtual_circuit": {
                        "description": "True if the virtual network is attached to a virtual circuit. False if not.",
                        "type": "boolean"
                      },
                      "description": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "facility": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "instances": {
                        "description": "A list of instances with ports currently associated to this Virtual Network.",
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "metal_gateway": {
                        "properties": {
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "gateway_address": {
                            "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "state": {
                            "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                            "enum": [
                              "ready",
                              "active",
                              "deleting"
                            ],
                            "type": "string"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "vlan": {
                            "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "metro": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "metro_code": {
                        "description": "The Metro code of the metro in which this Virtual Network is defined.",
                        "type": "string"
                      },
                      "vxlan": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VLANs"
        ],
        "description": "Provides a list of virtual networks for a single project.",
        "operationId": "findVirtualNetworks",
        "summary": "Retrieve all virtual networks"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Virtual Network to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "facility": {
                  "description": "The UUID (or facility code) for the Facility in which to create this Virtual network.",
                  "type": "string"
                },
                "metro": {
                  "description": "The UUID (or metro code) for the Metro in which to create this Virtual Network.",
                  "type": "string"
                },
                "project_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "vxlan": {
                  "description": "VLAN ID between 2-3999. Must be unique for the project within the Metro in which this Virtual Network is being created. If no value is specified, the next-available VLAN ID in the range 1000-1999 will be automatically selected.",
                  "example": 1099,
                  "type": "integer"
                }
              },
              "required": [
                "project_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "assigned_to": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "assigned_to_virtual_circuit": {
                  "description": "True if the virtual network is attached to a virtual circuit. False if not.",
                  "type": "boolean"
                },
                "description": {
                  "format": "uuid",
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "instances": {
                  "description": "A list of instances with ports currently associated to this Virtual Network.",
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "metal_gateway": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "gateway_address": {
                      "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "state": {
                      "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                      "enum": [
                        "ready",
                        "active",
                        "deleting"
                      ],
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "vlan": {
                      "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "metro": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "metro_code": {
                  "description": "The Metro code of the metro in which this Virtual Network is defined.",
                  "type": "string"
                },
                "vxlan": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VLANs"
        ],
        "description": "Creates an virtual network.",
        "operationId": "createVirtualNetwork",
        "summary": "Create a virtual network"
      }
    },
    "/projects/{id}/vrfs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "description": "Filter by Metro ID (uuid) or Metro Code",
            "in": "query",
            "name": "metro",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "vrfs": {
                  "items": {
                    "properties": {
                      "created_by": {
                        "properties": {
                          "avatar_thumb_url": {
                            "type": "string"
                          },
                          "avatar_url": {
                            "type": "string"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "customdata": {
                            "type": "object"
                          },
                          "email": {
                            "type": "string"
                          },
                          "emails": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "first_name": {
                            "type": "string"
                          },
                          "fraud_score": {
                            "type": "string"
                          },
                          "full_name": {
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "last_login_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "last_name": {
                            "type": "string"
                          },
                          "max_organizations": {
                            "type": "integer"
                          },
                          "max_projects": {
                            "type": "integer"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "short_id": {
                            "type": "string"
                          },
                          "timezone": {
                            "type": "string"
                          },
                          "two_factor_auth": {
                            "type": "string"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": {
                        "description": "Optional field that can be set to describe the VRF",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "ip_ranges": {
                        "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "local_asn": {
                        "description": "A 4-byte ASN associated with the VRF.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "metro": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "bgp_config": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "customdata": {
                            "type": "object"
                          },
                          "devices": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "invitations": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max_devices": {
                            "type": "object"
                          },
                          "members": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "memberships": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "network_status": {
                            "type": "object"
                          },
                          "payment_method": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "ssh_keys": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "volumes": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VRFs"
        ],
        "description": "Returns the list of VRFs for a single project.",
        "operationId": "findVrfs",
        "summary": "Retrieve all VRFs in the project"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "VRF to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF IP Reservations, which can then be used for Metal Gateways or Virtual Circuits.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "local_asn": {
                  "format": "int32",
                  "type": "integer"
                },
                "metro": {
                  "description": "The UUID (or metro code) for the Metro in which to create this VRF.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "project_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "required": [
                "metro",
                "name",
                "project_id"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_by": {
                  "properties": {
                    "avatar_thumb_url": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "email": {
                      "type": "string"
                    },
                    "emails": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "fraud_score": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "last_login_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "max_organizations": {
                      "type": "integer"
                    },
                    "max_projects": {
                      "type": "integer"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "two_factor_auth": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "description": "Optional field that can be set to describe the VRF",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "local_asn": {
                  "description": "A 4-byte ASN associated with the VRF.",
                  "format": "int32",
                  "type": "integer"
                },
                "metro": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "bgp_config": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "devices": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "invitations": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max_devices": {
                      "type": "object"
                    },
                    "members": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "memberships": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "network_status": {
                      "type": "object"
                    },
                    "payment_method": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "ssh_keys": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "volumes": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VRFs"
        ],
        "description": "Creates a new VRF in the specified project",
        "operationId": "createVrf",
        "summary": "Create a new VRF in the specified project"
      }
    },
    "/projects/{project_id}/connections": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the project",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "interconnections": {
                  "items": {
                    "properties": {
                      "tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "contact_email": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "facility": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "Details of the metro the facility is in"
                          }
                        ]
                      },
                      "mode": {
                        "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                        "enum": [
                          "standard",
                          "tunnel"
                        ],
                        "example": "standard",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "ports": {
                        "items": {
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "organization": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "role": {
                              "description": "Either 'primary' or 'secondary'.",
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "switch_id": {
                              "description": "A switch 'short ID'",
                              "type": "string"
                            },
                            "virtual_circuits": {
                              "properties": {
                                "virtual_circuits": {
                                  "items": {},
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "redundancy": {
                        "type": "string"
                      },
                      "service_tokens": {
                        "items": {
                          "properties": {
                            "expires_at": {
                              "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "id": {
                              "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                              "format": "uuid",
                              "type": "string"
                            },
                            "max_allowed_speed": {
                              "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                              "example": "'200000000' or '200mbps'",
                              "type": "string"
                            },
                            "role": {
                              "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                              "enum": [
                                "primary",
                                "redundant"
                              ],
                              "type": "string"
                            },
                            "service_token_type": {
                              "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                              "enum": [
                                "a_side"
                              ],
                              "type": "string"
                            },
                            "state": {
                              "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                              "enum": [
                                "inactive",
                                "active",
                                "expired"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "speed": {
                        "description": "The connection's speed in bps.",
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "List the connections belonging to the project",
        "operationId": "projectListInterconnections",
        "summary": "List project connections"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "UUID of the project",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Connection details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "metro": {
                  "description": "A Metro ID or code.",
                  "type": "string"
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "type": "string"
                },
                "redundancy": {
                  "description": "Either 'primary' or 'redundant'.",
                  "type": "string"
                },
                "service_token_type": {
                  "description": "Can only be set to 'a_side' to create a shared connection with an A-side Fabric service token. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
                  "enum": [
                    "a_side"
                  ],
                  "example": "a_side",
                  "type": "string"
                },
                "speed": {
                  "description": "A connection speed, in bps, mbps, or gbps. Ex: '100000000' or '100 mbps'.",
                  "type": "string"
                },
                "type": {
                  "description": "Either 'shared' or 'dedicated'.",
                  "type": "string"
                },
                "vlans": {
                  "description": "A list of one or two metro-based VLANs that will be set on the primary and/or secondary (if redundant) virtual circuits respectively when creating a shared connection. VLANs can also be set after the connection is created, but are required to activate the connection. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
                  "example": [
                    1000,
                    1001
                  ],
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "name",
                "metro",
                "type",
                "redundancy"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Details of the metro the facility is in"
                    }
                  ]
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ports": {
                  "items": {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "organization": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "role": {
                        "description": "Either 'primary' or 'secondary'.",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "switch_id": {
                        "description": "A switch 'short ID'",
                        "type": "string"
                      },
                      "virtual_circuits": {
                        "properties": {
                          "virtual_circuits": {
                            "items": {},
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "redundancy": {
                  "type": "string"
                },
                "service_tokens": {
                  "items": {
                    "properties": {
                      "expires_at": {
                        "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                        "format": "uuid",
                        "type": "string"
                      },
                      "max_allowed_speed": {
                        "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                        "example": "'200000000' or '200mbps'",
                        "type": "string"
                      },
                      "role": {
                        "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                        "enum": [
                          "primary",
                          "redundant"
                        ],
                        "type": "string"
                      },
                      "service_token_type": {
                        "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                        "enum": [
                          "a_side"
                        ],
                        "type": "string"
                      },
                      "state": {
                        "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                        "enum": [
                          "inactive",
                          "active",
                          "expired"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "speed": {
                  "description": "The connection's speed in bps.",
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Creates a new connection request",
        "operationId": "createProjectInterconnection",
        "summary": "Request a new connection for the project's organization"
      }
    },
    "/projects/{project_id}/invitations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "invitations": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "roles": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Returns all invitations in a project.",
        "operationId": "findProjectInvitations",
        "summary": "Retrieve project invitations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Invitation to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "invitee": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "projects_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "invitee"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitation": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "invited_by": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "invitee": {
                  "type": "string"
                },
                "organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "projects_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "In order to add a user to a project, they must first be invited.",
        "operationId": "createProjectInvitation",
        "summary": "Create an invitation for a project"
      }
    },
    "/projects/{project_id}/ips/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Ip Reservation UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Provides the custom metadata stored for this IP Reservation in json format",
        "operationId": "findIPReservationCustomdata",
        "summary": "Retrieve the custom metadata of an IP Reservation"
      }
    },
    "/projects/{project_id}/memberships": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "memberships": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "roles": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Returns all memberships in a project.",
        "operationId": "findProjectMemberships",
        "summary": "Retrieve project memberships"
      }
    },
    "/projects/{project_id}/metal-gateways": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "MetalGateways": {
                  "items": {},
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "MetalGateways"
        ],
        "description": "Return all metal gateways for a project",
        "operationId": "findMetalGatewaysByProject",
        "summary": "Returns all metal gateways for a project"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Metal Gateway to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {}
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "MetalGateways"
        ],
        "description": "Create a metal gateway in a project",
        "operationId": "createMetalGateway",
        "summary": "Create a metal gateway"
      }
    },
    "/projects/{project_id}/self-service/reservations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "reservations": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "item": {
                        "items": {
                          "properties": {
                            "amount": {
                              "format": "float",
                              "type": "number"
                            },
                            "id": {
                              "type": "string"
                            },
                            "metro_code": {
                              "type": "string"
                            },
                            "metro_id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "metro_name": {
                              "type": "string"
                            },
                            "plan_id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "plan_name": {
                              "type": "string"
                            },
                            "plan_slug": {
                              "type": "string"
                            },
                            "quantity": {
                              "type": "integer"
                            },
                            "term": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "string"
                      },
                      "organization_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "period": {
                        "properties": {
                          "count": {
                            "enum": [
                              12,
                              36
                            ],
                            "type": "number"
                          },
                          "unit": {
                            "enum": [
                              "monthly"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "project": {
                        "type": "string"
                      },
                      "project_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "start_date": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "total_cost": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SelfServiceReservations"
        ],
        "description": "Returns all reservations.",
        "operationId": "findSelfServiceReservations",
        "summary": "Retrieve all reservations"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "reservation to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "item": {
                  "items": {
                    "properties": {
                      "amount": {
                        "format": "float",
                        "type": "number"
                      },
                      "metro_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "plan_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "term": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "notes": {
                  "type": "string"
                },
                "period": {
                  "properties": {
                    "count": {
                      "enum": [
                        12,
                        36
                      ],
                      "type": "number"
                    },
                    "unit": {
                      "enum": [
                        "monthly"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "start_date": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "item": {
                  "items": {
                    "properties": {
                      "amount": {
                        "format": "float",
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "metro_code": {
                        "type": "string"
                      },
                      "metro_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "metro_name": {
                        "type": "string"
                      },
                      "plan_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "plan_name": {
                        "type": "string"
                      },
                      "plan_slug": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "term": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "notes": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "organization_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "period": {
                  "properties": {
                    "count": {
                      "enum": [
                        12,
                        36
                      ],
                      "type": "number"
                    },
                    "unit": {
                      "enum": [
                        "monthly"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "type": "string"
                },
                "project_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "start_date": {
                  "format": "date-time",
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "total_cost": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SelfServiceReservations"
        ],
        "description": "Creates a reservation.",
        "operationId": "createSelfServiceReservation",
        "summary": "Create a reservation"
      }
    },
    "/projects/{project_id}/self-service/reservations/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Reservation short_id",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Project UUID",
            "format": "uuid",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "item": {
                  "items": {
                    "properties": {
                      "amount": {
                        "format": "float",
                        "type": "number"
                      },
                      "id": {
                        "type": "string"
                      },
                      "metro_code": {
                        "type": "string"
                      },
                      "metro_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "metro_name": {
                        "type": "string"
                      },
                      "plan_id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "plan_name": {
                        "type": "string"
                      },
                      "plan_slug": {
                        "type": "string"
                      },
                      "quantity": {
                        "type": "integer"
                      },
                      "term": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "notes": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "organization_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "period": {
                  "properties": {
                    "count": {
                      "enum": [
                        12,
                        36
                      ],
                      "type": "number"
                    },
                    "unit": {
                      "enum": [
                        "monthly"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "project": {
                  "type": "string"
                },
                "project_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "start_date": {
                  "format": "date-time",
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "total_cost": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SelfServiceReservations"
        ],
        "description": "Returns a reservation",
        "operationId": "findSelfServiceReservation",
        "summary": "Retrieve a reservation"
      }
    },
    "/reset-password": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "ok",
            "schema": {
              "properties": {
                "new_password": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "PasswordResetTokens"
        ],
        "description": "Resets current user password.",
        "operationId": "resetPassword",
        "summary": "Reset current user password"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Email of user to create password reset token",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "PasswordResetTokens"
        ],
        "description": "Creates a password reset token",
        "operationId": "createPasswordResetToken",
        "summary": "Create a password reset token"
      }
    },
    "/spot-market-requests/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SpotMarketRequest UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Terminate associated spot instances",
            "in": "query",
            "name": "force_termination",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "Deletes the spot market request.",
        "operationId": "deleteSpotMarketRequest",
        "summary": "Delete the spot market request"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SpotMarketRequest UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "devices_max": {
                  "type": "integer"
                },
                "devices_min": {
                  "type": "integer"
                },
                "end_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "facilities": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "instances": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "max_bid_price": {
                  "format": "float",
                  "type": "number"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the spot market request was created in"
                    }
                  ]
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SpotMarket"
        ],
        "description": "Returns a single spot market request",
        "operationId": "findSpotMarketRequestById",
        "summary": "Retrieve a spot market request"
      }
    },
    "/ssh-keys": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Search by key, label, or fingerprint",
            "in": "query",
            "name": "Search string",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "entity": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "fingerprint": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Returns a collection of the user’s ssh keys.",
        "operationId": "findSSHKeys",
        "summary": "Retrieve all ssh keys"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ssh key to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "instances_ids": {
                  "description": "List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging\n      to entity will be included",
                  "items": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": "array"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "entity": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "fingerprint": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Creates a ssh key.",
        "operationId": "createSSHKey",
        "summary": "Create a ssh key for the current user"
      }
    },
    "/ssh-keys/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ssh key UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Deletes the ssh key.",
        "operationId": "deleteSSHKey",
        "summary": "Delete the ssh key"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SSH Key UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "entity": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "fingerprint": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Returns a single ssh key if the user has access",
        "operationId": "findSSHKeyById",
        "summary": "Retrieve a ssh key"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "SSH Key UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ssh key to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "entity": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "fingerprint": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SSHKeys"
        ],
        "description": "Updates the ssh key.",
        "operationId": "updateSSHKey",
        "summary": "Update the ssh key"
      }
    },
    "/support-requests": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Support Request to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "device_id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "priority": {
                  "enum": [
                    "urgent",
                    "high",
                    "medium",
                    "low"
                  ],
                  "type": "string"
                },
                "project_id": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                }
              },
              "required": [
                "subject",
                "message"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "SupportRequest"
        ],
        "description": "Support Ticket.",
        "operationId": "requestSuppert",
        "summary": "Create a support ticket"
      }
    },
    "/transfers/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Transfer request UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TransferRequests"
        ],
        "description": "Decline a transfer request.",
        "operationId": "declineTransferRequest",
        "summary": "Decline a transfer request"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Transfer request UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "target_organization": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TransferRequests"
        ],
        "description": "Returns a single transfer request.",
        "operationId": "findTransferRequestById",
        "summary": "View a transfer request"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Transfer request UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TransferRequests"
        ],
        "description": "Accept a transfer request.",
        "operationId": "acceptTransferRequest",
        "summary": "Accept a transfer request"
      }
    },
    "/user": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Returns the user object for the currently logged-in user.",
        "operationId": "findCurrentUser",
        "summary": "Retrieve the current user"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "User to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "customdata": {
                  "type": "object"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Updates the currently logged-in user.",
        "operationId": "updateCurrentUser",
        "summary": "Update the current user"
      }
    },
    "/user/api-keys": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "api_keys": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "Available only for API keys",
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "project": {
                        "allOf": [
                          {
                            "properties": {
                              "bgp_config": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "customdata": {
                                "type": "object"
                              },
                              "devices": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "invitations": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "max_devices": {
                                "type": "object"
                              },
                              "members": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "memberships": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "type": "string"
                              },
                              "network_status": {
                                "type": "object"
                              },
                              "payment_method": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "ssh_keys": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "volumes": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "Available only for project tokens"
                          }
                        ]
                      },
                      "read_only": {
                        "type": "boolean"
                      },
                      "token": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "user": {
                        "allOf": [
                          {
                            "properties": {
                              "avatar_thumb_url": {
                                "type": "string"
                              },
                              "avatar_url": {
                                "type": "string"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "customdata": {
                                "type": "object"
                              },
                              "email": {
                                "type": "string"
                              },
                              "emails": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "fraud_score": {
                                "type": "string"
                              },
                              "full_name": {
                                "type": "string"
                              },
                              "href": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "last_login_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "max_organizations": {
                                "type": "integer"
                              },
                              "max_projects": {
                                "type": "integer"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "short_id": {
                                "type": "string"
                              },
                              "timezone": {
                                "type": "string"
                              },
                              "two_factor_auth": {
                                "type": "string"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "Available only for user tokens"
                          }
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Returns all API keys for the current user.",
        "operationId": "findAPIKeys",
        "summary": "Retrieve all user API keys"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "API key to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "read_only": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "description": {
                  "description": "Available only for API keys",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "project": {
                  "allOf": [
                    {
                      "properties": {
                        "bgp_config": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "customdata": {
                          "type": "object"
                        },
                        "devices": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "invitations": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "max_devices": {
                          "type": "object"
                        },
                        "members": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "memberships": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "name": {
                          "type": "string"
                        },
                        "network_status": {
                          "type": "object"
                        },
                        "payment_method": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "ssh_keys": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "volumes": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Available only for project tokens"
                    }
                  ]
                },
                "read_only": {
                  "type": "boolean"
                },
                "token": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "user": {
                  "allOf": [
                    {
                      "properties": {
                        "avatar_thumb_url": {
                          "type": "string"
                        },
                        "avatar_url": {
                          "type": "string"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "customdata": {
                          "type": "object"
                        },
                        "email": {
                          "type": "string"
                        },
                        "emails": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "fraud_score": {
                          "type": "string"
                        },
                        "full_name": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "last_login_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "max_organizations": {
                          "type": "integer"
                        },
                        "max_projects": {
                          "type": "integer"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "short_id": {
                          "type": "string"
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "two_factor_auth": {
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "Available only for user tokens"
                    }
                  ]
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Creates a API key for the current user.",
        "operationId": "createAPIKey",
        "summary": "Create a API key"
      }
    },
    "/user/api-keys/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "API Key UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Deletes the current user API key.",
        "operationId": "deleteUserAPIKey",
        "summary": "Delete the API key"
      }
    },
    "/user/otp/app": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TwoFactorAuth"
        ],
        "description": "Disables two factor authentication.",
        "operationId": "disableTfaApp",
        "summary": "Disable two factor authentication"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TwoFactorAuth"
        ],
        "description": "Enables two factor authentication using authenticator app.",
        "operationId": "enableTfaApp",
        "summary": "Enable two factor auth using app"
      }
    },
    "/user/otp/recovery-codes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "recovery_codes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "OTPs"
        ],
        "description": "Returns my recovery codes.",
        "operationId": "findRecoveryCodes",
        "summary": "Retrieve my recovery codes"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "recovery_codes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "OTPs"
        ],
        "description": "Generate a new set of recovery codes.",
        "operationId": "regenerateCodes",
        "summary": "Generate new recovery codes"
      }
    },
    "/user/otp/sms": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TwoFactorAuth"
        ],
        "description": "Disables two factor authentication.",
        "operationId": "disableTfaSms",
        "summary": "Disable two factor authentication"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "TwoFactorAuth"
        ],
        "description": "Enables two factor authentication with sms.",
        "operationId": "enableTfaSms",
        "summary": "Enable two factor auth using sms"
      }
    },
    "/user/otp/sms/receive": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "no content"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "OTPs"
        ],
        "description": "Sends an OTP to the user's mobile phone.",
        "operationId": "receiveCodes",
        "summary": "Receive an OTP per sms"
      }
    },
    "/user/otp/verify/{otp}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "OTP",
            "in": "path",
            "name": "otp",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "OTPs"
        ],
        "description": "It verifies the user once a valid OTP is provided. It gives back a session token, essentially logging in the user.",
        "operationId": "findEnsureOtp",
        "summary": "Verify user by providing an OTP"
      }
    },
    "/userdata/validate": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Userdata to validate",
            "in": "query",
            "name": "userdata",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Userdata"
        ],
        "description": "Validates user data (Userdata)",
        "operationId": "validateUserdata",
        "summary": "Validate user data"
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "first": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "last": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "next": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "self": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "users": {
                  "items": {
                    "properties": {
                      "avatar_thumb_url": {
                        "type": "string"
                      },
                      "avatar_url": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "email": {
                        "type": "string"
                      },
                      "emails": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "fraud_score": {
                        "type": "string"
                      },
                      "full_name": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "last_login_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "max_organizations": {
                        "type": "integer"
                      },
                      "max_projects": {
                        "type": "integer"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "short_id": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "two_factor_auth": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Returns a list of users that the are accessible to the current user (all users in the current user’s projects, essentially).",
        "operationId": "findUsers",
        "summary": "Retrieve all users"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "User to create",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "avatar": {
                  "format": "binary",
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "company_url": {
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "default": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "address"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "level": {
                  "type": "string"
                },
                "locked": {
                  "type": "boolean"
                },
                "password": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "social_accounts": {
                  "type": "object"
                },
                "timezone": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "verified_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "emails"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Creates a user.",
        "operationId": "createUser",
        "summary": "Create a user"
      }
    },
    "/users/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "User UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Returns a single user if the user has access",
        "operationId": "findUserById",
        "summary": "Retrieve a user"
      }
    },
    "/users/{id}/customdata": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "User UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Provides the custom metadata stored for this user in json format",
        "operationId": "findUserCustomdata",
        "summary": "Retrieve the custom metadata of a user"
      }
    },
    "/verify-email": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Email for verification request",
            "in": "query",
            "name": "login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "UserVerificationTokens"
        ],
        "description": "Creates an email verification request",
        "operationId": "createValidationRequest",
        "summary": "Create an email verification request"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "User verification token",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "UserVerificationTokens"
        ],
        "description": "Consumes an email verification token and verifies the user associated with it.",
        "operationId": "consumeVerificationRequest",
        "summary": "Verify a user using an email verification token"
      }
    },
    "/virtual-circuit/{id}/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Virtual Circuit UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          },
          {
            "default": 1,
            "description": "Page to return",
            "format": "int32",
            "in": "query",
            "maximum": 100000,
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "Items returned per page",
            "format": "int32",
            "in": "query",
            "maximum": 1000,
            "minimum": 1,
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "interpolated": {
                  "type": "string"
                },
                "relationships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "state": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Returns a list of the virtual circuit events",
        "operationId": "findVirtualCircuitEvents",
        "summary": "Retrieve connection events"
      }
    },
    "/virtual-circuits/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Virtual Circuit UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "accepted",
            "schema": {}
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Delete a virtual circuit from a dedicated port.",
        "operationId": "deleteVirtualCircuit",
        "summary": "Delete a virtual circuit"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Virtual Circuit UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {}
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Get the details of a virtual circuit",
        "operationId": "getVirtualCircuit",
        "summary": "Get a virtual circuit"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Virtual Circuit UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updated Virtual Circuit details",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {}
          },
          "202": {
            "description": "accepted",
            "schema": {}
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Update the details of a virtual circuit.",
        "operationId": "updateVirtualCircuit",
        "summary": "Update a virtual circuit"
      }
    },
    "/virtual-networks/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Virtual Network UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "assigned_to": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "assigned_to_virtual_circuit": {
                  "description": "True if the virtual network is attached to a virtual circuit. False if not.",
                  "type": "boolean"
                },
                "description": {
                  "format": "uuid",
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "instances": {
                  "description": "A list of instances with ports currently associated to this Virtual Network.",
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "metal_gateway": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "gateway_address": {
                      "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "state": {
                      "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                      "enum": [
                        "ready",
                        "active",
                        "deleting"
                      ],
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "vlan": {
                      "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "metro": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "metro_code": {
                  "description": "The Metro code of the metro in which this Virtual Network is defined.",
                  "type": "string"
                },
                "vxlan": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VLANs"
        ],
        "description": "Deletes a virtual network.",
        "operationId": "deleteVirtualNetwork",
        "summary": "Delete a virtual network"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Virtual Network UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "assigned_to": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "assigned_to_virtual_circuit": {
                  "description": "True if the virtual network is attached to a virtual circuit. False if not.",
                  "type": "boolean"
                },
                "description": {
                  "format": "uuid",
                  "type": "string"
                },
                "facility": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "instances": {
                  "description": "A list of instances with ports currently associated to this Virtual Network.",
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "metal_gateway": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "gateway_address": {
                      "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "state": {
                      "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                      "enum": [
                        "ready",
                        "active",
                        "deleting"
                      ],
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "vlan": {
                      "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "metro": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "metro_code": {
                  "description": "The Metro code of the metro in which this Virtual Network is defined.",
                  "type": "string"
                },
                "vxlan": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VLANs"
        ],
        "description": "Get a virtual network.",
        "operationId": "getVirtualNetwork",
        "summary": "Get a virtual network"
      }
    },
    "/vrfs/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "VRF UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "no content"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VRFs"
        ],
        "description": "Deletes the VRF",
        "operationId": "deleteVrf",
        "summary": "Delete the VRF"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "VRF UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "csv",
            "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_by": {
                  "properties": {
                    "avatar_thumb_url": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "email": {
                      "type": "string"
                    },
                    "emails": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "fraud_score": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "last_login_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "max_organizations": {
                      "type": "integer"
                    },
                    "max_projects": {
                      "type": "integer"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "two_factor_auth": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "description": "Optional field that can be set to describe the VRF",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "local_asn": {
                  "description": "A 4-byte ASN associated with the VRF.",
                  "format": "int32",
                  "type": "integer"
                },
                "metro": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "bgp_config": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "devices": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "invitations": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max_devices": {
                      "type": "object"
                    },
                    "members": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "memberships": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "network_status": {
                      "type": "object"
                    },
                    "payment_method": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "ssh_keys": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "volumes": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VRFs"
        ],
        "description": "Returns a single VRF resource",
        "operationId": "findVrfById",
        "summary": "Retrieve a VRF"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "VRF UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "VRF to update",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF IP Reservations, which can then be used for Metal Gateways or Virtual Circuits. Adding a new CIDR address to the list will result in the creation of a new IP Range for this VRF. Removal of an existing CIDR address from the list will result in the deletion of an existing IP Range for this VRF. Deleting an IP Range will result in the deletion of any VRF IP Reservations contained within the IP Range, as well as the VRF IP Reservation\\'s associated Metal Gateways or Virtual Circuits. If you do not wish to add or remove IP Ranges, either include the full existing list of IP Ranges in the update request, or do not specify the `ip_ranges` field in the update request. Specifying a value of `[]` will remove all existing IP Ranges from the VRF.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "local_asn": {
                  "description": "The new `local_asn` value for the VRF. This field cannot be updated when there are active Interconnection Virtual Circuits associated to the VRF.",
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "created_by": {
                  "properties": {
                    "avatar_thumb_url": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "email": {
                      "type": "string"
                    },
                    "emails": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "fraud_score": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "last_login_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "max_organizations": {
                      "type": "integer"
                    },
                    "max_projects": {
                      "type": "integer"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "two_factor_auth": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "description": "Optional field that can be set to describe the VRF",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "local_asn": {
                  "description": "A 4-byte ASN associated with the VRF.",
                  "format": "int32",
                  "type": "integer"
                },
                "metro": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "bgp_config": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "devices": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "invitations": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max_devices": {
                      "type": "object"
                    },
                    "members": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "memberships": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "network_status": {
                      "type": "object"
                    },
                    "payment_method": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "ssh_keys": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "volumes": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "unprocessable entity",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VRFs"
        ],
        "description": "Updates the VRF.",
        "operationId": "updateVrf",
        "summary": "Update the VRF"
      }
    },
    "/vrfs/{id}/ips": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "VRF UUID",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Nested attributes to include. Included objects will return their full attributes. Attribute names can be dotted (up to 3 levels) to included deeply nested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "type": "array"
          },
          {
            "collectionFormat": "multi",
            "description": "Nested attributes to exclude. Excluded objects will return only the href attribute. Attribute names can be dotted (up to 3 levels) to exclude deeply nested objects.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "exclude",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "properties": {
                "ip_addresses": {
                  "items": {
                    "properties": {
                      "tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "address_family": {
                        "type": "integer"
                      },
                      "cidr": {
                        "type": "integer"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "created_by": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "details": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "metal_gateway": {
                        "properties": {
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "gateway_address": {
                            "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "state": {
                            "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                            "enum": [
                              "ready",
                              "active",
                              "deleting"
                            ],
                            "type": "string"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "vlan": {
                            "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      },
                      "project": {
                        "properties": {
                          "bgp_config": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "customdata": {
                            "type": "object"
                          },
                          "devices": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "invitations": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "max_devices": {
                            "type": "object"
                          },
                          "members": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "memberships": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "type": "string"
                          },
                          "network_status": {
                            "type": "object"
                          },
                          "payment_method": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "ssh_keys": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "volumes": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "example": "vrf",
                        "type": "string"
                      },
                      "vrf": {
                        "properties": {
                          "created_by": {
                            "properties": {
                              "avatar_thumb_url": {
                                "type": "string"
                              },
                              "avatar_url": {
                                "type": "string"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "customdata": {
                                "type": "object"
                              },
                              "email": {
                                "type": "string"
                              },
                              "emails": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "fraud_score": {
                                "type": "string"
                              },
                              "full_name": {
                                "type": "string"
                              },
                              "href": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "last_login_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "max_organizations": {
                                "type": "integer"
                              },
                              "max_projects": {
                                "type": "integer"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "short_id": {
                                "type": "string"
                              },
                              "timezone": {
                                "type": "string"
                              },
                              "two_factor_auth": {
                                "type": "string"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "description": {
                            "description": "Optional field that can be set to describe the VRF",
                            "type": "string"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "ip_ranges": {
                            "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "local_asn": {
                            "description": "A 4-byte ASN associated with the VRF.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "metro": {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "name": {
                            "type": "string"
                          },
                          "project": {
                            "properties": {
                              "bgp_config": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "customdata": {
                                "type": "object"
                              },
                              "devices": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "invitations": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "max_devices": {
                                "type": "object"
                              },
                              "members": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "memberships": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "name": {
                                "type": "string"
                              },
                              "network_status": {
                                "type": "object"
                              },
                              "payment_method": {
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href"
                                ],
                                "type": "object"
                              },
                              "ssh_keys": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "volumes": {
                                "items": {
                                  "properties": {
                                    "href": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "href"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
              "properties": {
                "error": {
                  "description": "A description of the error that caused the request to fail.",
                  "type": "string"
                },
                "errors": {
                  "description": "A list of errors that contributed to the request failing.",
                  "items": {
                    "description": "An error message that contributed to the request failing.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "VRFs"
        ],
        "description": "Returns the list of VRF IP Reservations for the VRF.",
        "operationId": "findVrfIpReservations",
        "summary": "Retrieve all VRF IP Reservations in the VRF"
      }
    }
  },
  "definitions": {
    "Address": {
      "properties": {
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "coordinates": {
          "properties": {
            "latitude": {
              "type": "string"
            },
            "longitude": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip_code": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "zip_code",
        "country"
      ],
      "type": "object"
    },
    "AuthToken": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "Available only for API keys",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "project": {
          "allOf": [
            {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            {
              "description": "Available only for project tokens"
            }
          ]
        },
        "read_only": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "user": {
          "allOf": [
            {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "Available only for user tokens"
            }
          ]
        }
      },
      "type": "object"
    },
    "AuthTokenInput": {
      "properties": {
        "description": {
          "type": "string"
        },
        "read_only": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AuthTokenList": {
      "properties": {
        "api_keys": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "description": {
                "description": "Available only for API keys",
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "allOf": [
                  {
                    "properties": {
                      "bgp_config": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "devices": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "invitations": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "max_devices": {
                        "type": "object"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "memberships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "network_status": {
                        "type": "object"
                      },
                      "payment_method": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "ssh_keys": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "volumes": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "Available only for project tokens"
                  }
                ]
              },
              "read_only": {
                "type": "boolean"
              },
              "token": {
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "user": {
                "allOf": [
                  {
                    "properties": {
                      "avatar_thumb_url": {
                        "type": "string"
                      },
                      "avatar_url": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "email": {
                        "type": "string"
                      },
                      "emails": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "fraud_score": {
                        "type": "string"
                      },
                      "full_name": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "last_login_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "max_organizations": {
                        "type": "integer"
                      },
                      "max_projects": {
                        "type": "integer"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "short_id": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "two_factor_auth": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "Available only for user tokens"
                  }
                ]
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BGPSessionInput": {
      "properties": {
        "address_family": {
          "description": "Address family for BGP session.",
          "enum": [
            "ipv4",
            "ipv6"
          ],
          "example": "ipv4",
          "type": "string"
        },
        "default_route": {
          "default": false,
          "description": "Set the default route policy.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Batch": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "devices": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "error_messages": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "quantity": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchesList": {
      "properties": {
        "batches": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "devices": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "error_messages": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "quantity": {
                "type": "integer"
              },
              "state": {
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BgpConfig": {
      "properties": {
        "asn": {
          "description": "Autonomous System Number. ASN is required with Global BGP. With Local BGP the private ASN, 65000, is assigned.",
          "example": 65000,
          "format": "int32",
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "deployment_type": {
          "description": "In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space.\n",
          "enum": [
            "global",
            "local"
          ],
          "example": "local",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "max_prefix": {
          "default": 10,
          "description": "The maximum number of route filters allowed per server",
          "type": "integer"
        },
        "md5": {
          "description": "(Optional) Password for BGP session in plaintext (not a checksum)",
          "type": "string",
          "x-nullable": true
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "ranges": {
          "description": "The IP block ranges associated to the ASN (Populated in Global BGP only)",
          "items": {
            "properties": {
              "address_family": {
                "type": "integer"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "range": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "requested_at": {
          "format": "date-time",
          "type": "string"
        },
        "route_object": {
          "description": "Specifies AS-MACRO (aka AS-SET) to use when building client route filters",
          "type": "string"
        },
        "sessions": {
          "description": "The direct connections between neighboring routers that want to exchange routing information.",
          "items": {
            "properties": {
              "address_family": {
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "type": "string"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "default_route": {
                "type": "boolean"
              },
              "device": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "learned_routes": {
                "items": {
                  "description": "IPv4 or IPv6 range",
                  "example": "10.32.16.0/31",
                  "type": "string"
                },
                "type": "array"
              },
              "status": {
                "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                "enum": [
                  "unknown",
                  "up",
                  "down"
                ],
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "address_family"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the BGP Config. Status \"requested\" is valid only with the \"global\" deployment_type.",
          "enum": [
            "requested",
            "enabled",
            "disabled"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BgpConfigRequestInput": {
      "properties": {
        "asn": {
          "type": "integer"
        },
        "deployment_type": {
          "type": "string"
        },
        "md5": {
          "type": "string"
        },
        "use_case": {
          "type": "string"
        }
      },
      "required": [
        "deployment_type",
        "asn"
      ],
      "type": "object"
    },
    "BgpNeighborData": {
      "properties": {
        "address_family": {
          "description": "Address Family for IP Address. Accepted values are 4 or 6",
          "example": 4,
          "format": "integer",
          "type": "number"
        },
        "customer_as": {
          "description": "The customer's ASN. In a local BGP deployment, this will be an internal ASN used to route within the data center. For a global BGP deployment, this will be the your own ASN, configured when you set up BGP for your project.",
          "example": 65000,
          "format": "integer",
          "type": "number"
        },
        "customer_ip": {
          "description": "The device's IP address. For an IPv4 BGP session, this is typically the private bond0 address for the device.",
          "example": "10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)",
          "type": "string"
        },
        "md5_enabled": {
          "description": "True if an MD5 password is configured for the project.",
          "type": "boolean"
        },
        "md5_password": {
          "description": "The MD5 password configured for the project, if set.",
          "type": "string"
        },
        "multihop": {
          "description": "True when the BGP session should be configured as multihop.",
          "type": "boolean"
        },
        "peer_as": {
          "description": "The Peer ASN to use when configuring BGP on your device.",
          "example": 65530,
          "format": "integer",
          "type": "number"
        },
        "peer_ips": {
          "description": "A list of one or more IP addresses to use for the Peer IP section of your BGP configuration. For non-multihop sessions, this will typically be a single gateway address for the device. For multihop sessions, it will be a list of IPs.",
          "example": [
            "169.254.255.1",
            "169.254.255.2"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "routes_in": {
          "description": "A list of project subnets",
          "items": {
            "properties": {
              "exact": {
                "type": "boolean"
              },
              "route": {
                "description": "A project network",
                "example": "10.32.16.0/31",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "routes_out": {
          "description": "A list of outgoing routes. Only populated if the BGP session has default route enabled.",
          "items": {
            "properties": {
              "exact": {
                "type": "boolean"
              },
              "route": {
                "example": "0.0.0.0/0",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BgpSession": {
      "properties": {
        "address_family": {
          "enum": [
            "ipv4",
            "ipv6"
          ],
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "default_route": {
          "type": "boolean"
        },
        "device": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "learned_routes": {
          "items": {
            "description": "IPv4 or IPv6 range",
            "example": "10.32.16.0/31",
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
          "enum": [
            "unknown",
            "up",
            "down"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "address_family"
      ],
      "type": "object"
    },
    "BgpSessionList": {
      "properties": {
        "bgp_sessions": {
          "items": {
            "properties": {
              "address_family": {
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "type": "string"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "default_route": {
                "type": "boolean"
              },
              "device": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "learned_routes": {
                "items": {
                  "description": "IPv4 or IPv6 range",
                  "example": "10.32.16.0/31",
                  "type": "string"
                },
                "type": "array"
              },
              "status": {
                "description": " The status of the BGP Session. Multiple status values may be reported when the device is connected to multiple switches, one value per switch. Each status will start with \"unknown\" and progress to \"up\" or \"down\" depending on the connected device. Subsequent \"unknown\" values indicate a problem acquiring status from the switch. ",
                "enum": [
                  "unknown",
                  "up",
                  "down"
                ],
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "address_family"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BgpSessionNeighbors": {
      "properties": {
        "bgp_neighbors": {
          "description": "A list of BGP session neighbor data",
          "items": {
            "properties": {
              "address_family": {
                "description": "Address Family for IP Address. Accepted values are 4 or 6",
                "example": 4,
                "format": "integer",
                "type": "number"
              },
              "customer_as": {
                "description": "The customer's ASN. In a local BGP deployment, this will be an internal ASN used to route within the data center. For a global BGP deployment, this will be the your own ASN, configured when you set up BGP for your project.",
                "example": 65000,
                "format": "integer",
                "type": "number"
              },
              "customer_ip": {
                "description": "The device's IP address. For an IPv4 BGP session, this is typically the private bond0 address for the device.",
                "example": "10.32.16.1 (IPv4) or 2604:1380:4111:2700::1 (IPv6)",
                "type": "string"
              },
              "md5_enabled": {
                "description": "True if an MD5 password is configured for the project.",
                "type": "boolean"
              },
              "md5_password": {
                "description": "The MD5 password configured for the project, if set.",
                "type": "string"
              },
              "multihop": {
                "description": "True when the BGP session should be configured as multihop.",
                "type": "boolean"
              },
              "peer_as": {
                "description": "The Peer ASN to use when configuring BGP on your device.",
                "example": 65530,
                "format": "integer",
                "type": "number"
              },
              "peer_ips": {
                "description": "A list of one or more IP addresses to use for the Peer IP section of your BGP configuration. For non-multihop sessions, this will typically be a single gateway address for the device. For multihop sessions, it will be a list of IPs.",
                "example": [
                  "169.254.255.1",
                  "169.254.255.2"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "routes_in": {
                "description": "A list of project subnets",
                "items": {
                  "properties": {
                    "exact": {
                      "type": "boolean"
                    },
                    "route": {
                      "description": "A project network",
                      "example": "10.32.16.0/31",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "routes_out": {
                "description": "A list of outgoing routes. Only populated if the BGP session has default route enabled.",
                "items": {
                  "properties": {
                    "exact": {
                      "type": "boolean"
                    },
                    "route": {
                      "example": "0.0.0.0/0",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CapacityCheckPerFacilityInfo": {
      "properties": {
        "available": {
          "type": "boolean"
        },
        "facility": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CapacityCheckPerFacilityList": {
      "properties": {
        "servers": {
          "items": {
            "properties": {
              "available": {
                "type": "boolean"
              },
              "facility": {
                "type": "string"
              },
              "plan": {
                "type": "string"
              },
              "quantity": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CapacityCheckPerMetroInfo": {
      "properties": {
        "available": {
          "description": "Returns true if there is enough capacity in the metro to fulfill the quantity set. Returns false if there is not enough.",
          "type": "boolean"
        },
        "metro": {
          "description": "The metro ID or code sent to check capacity.",
          "type": "string"
        },
        "plan": {
          "description": "The plan ID or slug sent to check capacity.",
          "type": "string"
        },
        "quantity": {
          "description": "The number of servers sent to check capacity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CapacityCheckPerMetroList": {
      "properties": {
        "servers": {
          "items": {
            "properties": {
              "available": {
                "description": "Returns true if there is enough capacity in the metro to fulfill the quantity set. Returns false if there is not enough.",
                "type": "boolean"
              },
              "metro": {
                "description": "The metro ID or code sent to check capacity.",
                "type": "string"
              },
              "plan": {
                "description": "The plan ID or slug sent to check capacity.",
                "type": "string"
              },
              "quantity": {
                "description": "The number of servers sent to check capacity.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CapacityInput": {
      "properties": {
        "servers": {
          "items": {
            "properties": {
              "facility": {
                "type": "string"
              },
              "plan": {
                "type": "string"
              },
              "quantity": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CapacityLevelPerBaremetal": {
      "properties": {
        "level": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CapacityList": {
      "properties": {
        "capacity": {
          "properties": {
            "ams1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "atl1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "dfw1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ewr1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "fra1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "iad1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "lax1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nrt1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ord1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sea1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sin1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sjc1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "syd1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "yyz1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CapacityPerFacility": {
      "properties": {
        "baremetal_0": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "baremetal_1": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "baremetal_2": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "baremetal_2a": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "baremetal_2a2": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "baremetal_3": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "baremetal_s": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "c2.medium.x86": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "m2.xlarge.x86": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CapacityPerMetroInput": {
      "properties": {
        "servers": {
          "items": {
            "properties": {
              "metro": {
                "description": "The metro ID or code to check the capacity in.",
                "type": "string"
              },
              "plan": {
                "description": "The plan ID or slug to check the capacity of.",
                "type": "string"
              },
              "quantity": {
                "description": "The number of servers to check the capacity of.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CapacityPerNewFacility": {
      "properties": {
        "baremetal_1e": {
          "properties": {
            "level": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CapacityReport": {
      "properties": {
        "ams1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "atl1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "dfw1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ewr1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "fra1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "iad1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "lax1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "nrt1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ord1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sea1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sin1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sjc1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "syd1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "yyz1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Coordinates": {
      "properties": {
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateEmailInput": {
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "required": [
        "address"
      ],
      "type": "object"
    },
    "CreateSelfServiceReservationRequest": {
      "properties": {
        "item": {
          "items": {
            "properties": {
              "amount": {
                "format": "float",
                "type": "number"
              },
              "metro_id": {
                "format": "uuid",
                "type": "string"
              },
              "plan_id": {
                "format": "uuid",
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "term": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "notes": {
          "type": "string"
        },
        "period": {
          "properties": {
            "count": {
              "enum": [
                12,
                36
              ],
              "type": "number"
            },
            "unit": {
              "enum": [
                "monthly"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "start_date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Device": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "always_pxe": {
          "type": "boolean"
        },
        "billing_cycle": {
          "type": "string"
        },
        "bonding_mode": {
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "allOf": [
            {
              "properties": {
                "avatar_thumb_url": {
                  "description": "Avatar thumbnail URL of the User",
                  "type": "string"
                },
                "created_at": {
                  "description": "When the user was created",
                  "format": "date-time",
                  "type": "string"
                },
                "email": {
                  "description": "Primary email address of the User",
                  "type": "string"
                },
                "first_name": {
                  "description": "First name of the User",
                  "type": "string"
                },
                "full_name": {
                  "description": "Full name of the User",
                  "type": "string"
                },
                "href": {
                  "description": "API URL uniquely representing the User",
                  "type": "string"
                },
                "id": {
                  "description": "ID of the User",
                  "format": "uuid",
                  "type": "string"
                },
                "last_name": {
                  "description": "Last name of the User",
                  "type": "string"
                },
                "short_id": {
                  "description": "Short ID of the User",
                  "type": "string"
                },
                "updated_at": {
                  "description": "When the user details were last updated",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "short_id"
              ],
              "type": "object"
            },
            {
              "description": "The user that created the device."
            }
          ]
        },
        "customdata": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "facility": {
          "properties": {
            "address": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "address2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "coordinates": {
                  "properties": {
                    "latitude": {
                      "type": "string"
                    },
                    "longitude": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "country": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "address",
                "zip_code",
                "country"
              ],
              "type": "object"
            },
            "code": {
              "type": "string"
            },
            "features": {
              "example": [
                "baremetal",
                "backend_transfer",
                "global_ipv4"
              ],
              "items": {
                "enum": [
                  "baremetal",
                  "backend_transfer",
                  "layer_2",
                  "global_ipv4",
                  "ibx"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "ip_ranges": {
              "description": "IP ranges registered in facility. Can be used for GeoIP location",
              "example": [
                "2604:1380::/36",
                "147.75.192.0/21"
              ],
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "metro": {
              "allOf": [
                {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "The metro the facility is in"
                }
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "hardware_reservation": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "hostname": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "ip_addresses": {
          "items": {
            "properties": {
              "address": {
                "type": "string"
              },
              "address_family": {
                "type": "integer"
              },
              "assigned_to": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "cidr": {
                "type": "integer"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "gateway": {
                "type": "string"
              },
              "global_ip": {
                "type": "boolean"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "manageable": {
                "type": "boolean"
              },
              "management": {
                "type": "boolean"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The metro the IP address is in"
                  }
                ]
              },
              "netmask": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "parent_block": {
                "properties": {
                  "cidr": {
                    "type": "integer"
                  },
                  "href": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "public": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "ipxe_script_url": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "metro": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "The metro the facility is in"
            }
          ]
        },
        "network_ports": {
          "allOf": [
            {
              "properties": {
                "data": {
                  "type": "object"
                },
                "disbond_operation_supported": {
                  "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                  "type": "boolean"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "virtual_networks": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            {
              "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
            }
          ]
        },
        "operating_system": {
          "properties": {
            "distro": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "licensed": {
              "description": "Licenced OS is priced according to pricing property",
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "preinstallable": {
              "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
              "type": "boolean"
            },
            "pricing": {
              "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
              "type": "object"
            },
            "provisionable_on": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "slug": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "plan": {
          "properties": {
            "available_in": {
              "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "class": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "legacy": {
              "type": "boolean"
            },
            "line": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "pricing": {
              "type": "object"
            },
            "slug": {
              "type": "string"
            },
            "specs": {
              "type": "object"
            }
          },
          "type": "object"
        },
        "project": {
          "allOf": [
            {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            {
              "description": "Full version of project object when included"
            }
          ]
        },
        "project_lite": {
          "allOf": [
            {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            {
              "description": "Lite version of project object when included"
            }
          ]
        },
        "provisioning_events": {
          "items": {
            "properties": {
              "body": {
                "type": "string"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "interpolated": {
                "type": "string"
              },
              "relationships": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "provisioning_percentage": {
          "description": "Only visible while device provisioning",
          "format": "float",
          "type": "number"
        },
        "root_password": {
          "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
          "type": "string"
        },
        "short_id": {
          "type": "string"
        },
        "spot_instance": {
          "description": "Whether or not the device is a spot instance.",
          "type": "boolean"
        },
        "spot_price_max": {
          "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
          "format": "float",
          "type": "number"
        },
        "ssh_keys": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        },
        "switch_uuid": {
          "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
          "type": "string"
        },
        "termination_time": {
          "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
          "format": "date-time",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "userdata": {
          "type": "string"
        },
        "volumes": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DeviceCreateInput": {
      "allOf": [
        {},
        {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "always_pxe": {
              "default": false,
              "description": "When true, devices with a `custom_ipxe` OS will always boot to iPXE. The\ndefault setting of false ensures that iPXE will be used on only the\nfirst boot.",
              "type": "boolean"
            },
            "billing_cycle": {
              "description": "The billing cycle of the device.",
              "enum": [
                "hourly",
                "daily",
                "monthly",
                "yearly"
              ],
              "type": "string"
            },
            "customdata": {
              "default": {},
              "description": "Customdata is an arbitrary JSON value that can be accessed via the\nmetadata service."
            },
            "description": {
              "description": "Any description of the device or how it will be used. This may be used\nto inform other API consumers with project access.",
              "type": "string"
            },
            "features": {
              "description": "The features attribute allows you to optionally specify what features your server should have.\n\nIn the API shorthand syntax, all features listed are `required`:\n\n```\n{ \"features\": [\"tpm\"] }\n```\n\nAlternatively, if you do not require a certain feature, but would prefer to be assigned a server with that feature if there are any available, you may specify that feature with a `preferred` value. The request will not fail if we have no servers with that feature in our inventory. The API offers an alternative syntax for mixing preferred and required features:\n\n```\n{ \"features\": { \"tpm\": \"required\", \"raid\": \"preferred\" } }\n```\n\nThe request will only fail if there are no available servers matching the required `tpm` criteria.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "hardware_reservation_id": {
              "default": "",
              "description": "The Hardware Reservation UUID to provision. Alternatively, `next-available` can be specified to select from any of the available hardware reservations. An error will be returned if the requested reservation option is not available.\n\nSee [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/) for more details.",
              "example": "next-available",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname to use within the operating system. The same hostname may be used on multiple devices within a project.",
              "type": "string"
            },
            "ip_addresses": {
              "default": [
                {
                  "address_family": 4,
                  "public": true
                },
                {
                  "address_family": 4,
                  "public": false
                },
                {
                  "address_family": 6,
                  "public": true
                }
              ],
              "description": "The `ip_addresses attribute will allow you to specify the addresses you want created with your device.\n\nThe default value configures public IPv4, public IPv6, and private IPv4.\n\nPrivate IPv4 address is required. When specifying `ip_addresses`, one of the array items must enable private IPv4.\n\nSome operating systems require public IPv4 address. In those cases you will receive an error message if public IPv4 is not enabled.\n\nFor example, to only configure your server with a private IPv4 address, you can send `{ \"ip_addresses\": [{ \"address_family\": 4, \"public\": false }] }`.\n\nIt is possible to request a subnet size larger than a `/30` by assigning addresses using the UUID(s) of ip_reservations in your project.\n\nFor example, `{ \"ip_addresses\": [..., {\"address_family\": 4, \"public\": true, \"ip_reservations\": [\"uuid1\", \"uuid2\"]}] }`\n\nTo access a server without public IPs, you can use our Out-of-Band console access (SOS) or proxy through another server in the project with public IPs enabled.",
              "items": {
                "properties": {
                  "address_family": {
                    "description": "Address Family for IP Address",
                    "enum": [
                      4,
                      6
                    ],
                    "example": 4,
                    "format": "integer",
                    "type": "number"
                  },
                  "cidr": {
                    "description": "Cidr Size for the IP Block created. Valid values depends on the operating system being provisioned. (28..32 for IPv4 addresses, 124..127 for IPv6 addresses)",
                    "example": 28,
                    "format": "integer",
                    "type": "number"
                  },
                  "ip_reservations": {
                    "description": "UUIDs of any IP reservations to use when assigning IPs",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "public": {
                    "default": true,
                    "description": "Address Type for IP Address",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "ipxe_script_url": {
              "externalDocs": {
                "url": "https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/"
              },
              "description": "When set, the device will chainload an iPXE Script at boot fetched from the supplied URL.\n\nSee [Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/) for more details.",
              "type": "string"
            },
            "locked": {
              "default": false,
              "description": "Whether the device should be locked, preventing accidental deletion.",
              "type": "boolean"
            },
            "no_ssh_keys": {
              "default": false,
              "description": "Overrides default behaviour of attaching all of the organization members ssh keys and project ssh keys to device if no specific keys specified",
              "type": "boolean"
            },
            "operating_system": {
              "description": "The slug of the operating system to provision. Check the Equinix Metal operating system documentation for rules that may be imposed per operating system, including restrictions on IP address options and device plans.",
              "type": "string"
            },
            "plan": {
              "description": "The slug of the device plan to provision.",
              "example": "c3.large.x86",
              "type": "string"
            },
            "private_ipv4_subnet_size": {
              "default": 28,
              "description": "Deprecated. Use ip_addresses. Subnet range for addresses allocated to this device.",
              "format": "integer",
              "type": "number",
              "x-deprecated": true
            },
            "project_ssh_keys": {
              "description": "A list of UUIDs identifying the device parent project\nthat should be authorized to access this device (typically\nvia /root/.ssh/authorized_keys). These keys will also appear in the device metadata.\n\nIf no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),\nall parent project keys, parent project members keys and organization members keys will be included. This behaviour can\nbe changed with 'no_ssh_keys' option to omit any SSH key being added.\n",
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            "public_ipv4_subnet_size": {
              "default": 31,
              "description": "Deprecated. Use ip_addresses. Subnet range for addresses allocated to this device. Your project must have addresses available for a non-default request.",
              "format": "integer",
              "type": "number",
              "x-deprecated": true
            },
            "spot_instance": {
              "type": "boolean"
            },
            "spot_price_max": {
              "format": "float",
              "type": "number"
            },
            "ssh_keys": {
              "description": "A list of new or existing project ssh_keys\nthat should be authorized to access this device (typically\nvia /root/.ssh/authorized_keys). These keys will also\nappear in the device metadata.\n\nThese keys are added in addition to any keys defined by\n  `project_ssh_keys` and `user_ssh_keys`.\n",
              "items": {
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "termination_time": {
              "format": "date-time",
              "type": "string"
            },
            "user_ssh_keys": {
              "description": "A list of UUIDs identifying the users\nthat should be authorized to access this device (typically\nvia /root/.ssh/authorized_keys).  These keys will also\nappear in the device metadata.\n\nThe users must be members of the project or organization.\n\nIf no SSH keys are specified (`user_ssh_keys`, `project_ssh_keys`, and `ssh_keys` are all empty lists or omitted),\nall parent project keys, parent project members keys and organization members keys will be included. This behaviour can\nbe changed with 'no_ssh_keys' option to omit any SSH key being added.\n",
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            "userdata": {
              "externalDocs": {
                "url": "https://metal.equinix.com/developers/docs/servers/user-data/"
              },
              "description": "The userdata presented in the metadata service for this device.  Userdata is fetched and interpreted by the operating system installed on the device. Acceptable formats are determined by the operating system, with the exception of a special iPXE enabling syntax which is handled before the operating system starts.\n\nSee [Server User Data](https://metal.equinix.com/developers/docs/servers/user-data/) and [Provisioning with Custom iPXE](https://metal.equinix.com/developers/docs/operating-systems/custom-ipxe/#provisioning-with-custom-ipxe) for more details.",
              "type": "string"
            }
          },
          "required": [
            "plan",
            "operating_system"
          ]
        }
      ]
    },
    "DeviceList": {
      "properties": {
        "devices": {
          "items": {
            "properties": {
              "tags": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "always_pxe": {
                "type": "boolean"
              },
              "billing_cycle": {
                "type": "string"
              },
              "bonding_mode": {
                "type": "integer"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "created_by": {
                "allOf": [
                  {
                    "properties": {
                      "avatar_thumb_url": {
                        "description": "Avatar thumbnail URL of the User",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "When the user was created",
                        "format": "date-time",
                        "type": "string"
                      },
                      "email": {
                        "description": "Primary email address of the User",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "First name of the User",
                        "type": "string"
                      },
                      "full_name": {
                        "description": "Full name of the User",
                        "type": "string"
                      },
                      "href": {
                        "description": "API URL uniquely representing the User",
                        "type": "string"
                      },
                      "id": {
                        "description": "ID of the User",
                        "format": "uuid",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "Last name of the User",
                        "type": "string"
                      },
                      "short_id": {
                        "description": "Short ID of the User",
                        "type": "string"
                      },
                      "updated_at": {
                        "description": "When the user details were last updated",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "short_id"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "The user that created the device."
                  }
                ]
              },
              "customdata": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "facility": {
                "properties": {
                  "address": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "coordinates": {
                        "properties": {
                          "latitude": {
                            "type": "string"
                          },
                          "longitude": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "country": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "address",
                      "zip_code",
                      "country"
                    ],
                    "type": "object"
                  },
                  "code": {
                    "type": "string"
                  },
                  "features": {
                    "example": [
                      "baremetal",
                      "backend_transfer",
                      "global_ipv4"
                    ],
                    "items": {
                      "enum": [
                        "baremetal",
                        "backend_transfer",
                        "layer_2",
                        "global_ipv4",
                        "ibx"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "ip_ranges": {
                    "description": "IP ranges registered in facility. Can be used for GeoIP location",
                    "example": [
                      "2604:1380::/36",
                      "147.75.192.0/21"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metro": {
                    "allOf": [
                      {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "description": "The metro the facility is in"
                      }
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "hardware_reservation": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "hostname": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "ip_addresses": {
                "items": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address_family": {
                      "type": "integer"
                    },
                    "assigned_to": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "cidr": {
                      "type": "integer"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "gateway": {
                      "type": "string"
                    },
                    "global_ip": {
                      "type": "boolean"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "manageable": {
                      "type": "boolean"
                    },
                    "management": {
                      "type": "boolean"
                    },
                    "metro": {
                      "allOf": [
                        {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "The metro the IP address is in"
                        }
                      ]
                    },
                    "netmask": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string"
                    },
                    "parent_block": {
                      "properties": {
                        "cidr": {
                          "type": "integer"
                        },
                        "href": {
                          "type": "string"
                        },
                        "netmask": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "public": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "ipxe_script_url": {
                "type": "string"
              },
              "iqn": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The metro the facility is in"
                  }
                ]
              },
              "network_ports": {
                "allOf": [
                  {
                    "properties": {
                      "data": {
                        "type": "object"
                      },
                      "disbond_operation_supported": {
                        "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                        "type": "boolean"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "virtual_networks": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                  }
                ]
              },
              "operating_system": {
                "properties": {
                  "distro": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "licensed": {
                    "description": "Licenced OS is priced according to pricing property",
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "preinstallable": {
                    "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                    "type": "boolean"
                  },
                  "pricing": {
                    "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                    "type": "object"
                  },
                  "provisionable_on": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "plan": {
                "properties": {
                  "available_in": {
                    "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "class": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "legacy": {
                    "type": "boolean"
                  },
                  "line": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "pricing": {
                    "type": "object"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "specs": {
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "project": {
                "allOf": [
                  {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Full version of project object when included"
                  }
                ]
              },
              "project_lite": {
                "allOf": [
                  {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Lite version of project object when included"
                  }
                ]
              },
              "provisioning_events": {
                "items": {
                  "properties": {
                    "body": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "interpolated": {
                      "type": "string"
                    },
                    "relationships": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "state": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "provisioning_percentage": {
                "description": "Only visible while device provisioning",
                "format": "float",
                "type": "number"
              },
              "root_password": {
                "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                "type": "string"
              },
              "short_id": {
                "type": "string"
              },
              "spot_instance": {
                "description": "Whether or not the device is a spot instance.",
                "type": "boolean"
              },
              "spot_price_max": {
                "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                "format": "float",
                "type": "number"
              },
              "ssh_keys": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "switch_uuid": {
                "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                "type": "string"
              },
              "termination_time": {
                "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                "format": "date-time",
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "userdata": {
                "type": "string"
              },
              "volumes": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "first": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "last": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "next": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "previous": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceUpdateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "always_pxe": {
          "type": "boolean"
        },
        "billing_cycle": {
          "type": "string"
        },
        "customdata": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "ipxe_script_url": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "network_frozen": {
          "description": "If true, this instance can not be converted to a different network type.",
          "type": "boolean"
        },
        "spot_instance": {
          "type": "boolean"
        },
        "userdata": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceUsage": {
      "properties": {
        "quantity": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceUsageList": {
      "properties": {
        "usages": {
          "items": {
            "properties": {
              "quantity": {
                "type": "string"
              },
              "total": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Email": {
      "properties": {
        "address": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EmailInput": {
      "properties": {
        "address": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      },
      "required": [
        "address"
      ],
      "type": "object"
    },
    "Entitlement": {
      "properties": {
        "description": {
          "type": "string"
        },
        "feature_access": {
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "instance_quota": {
          "type": "object"
        },
        "ip_quota": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "project_quota": {
          "default": 0,
          "type": "integer"
        },
        "slug": {
          "type": "string"
        },
        "volume_limits": {
          "type": "object"
        },
        "volume_quota": {
          "type": "object"
        },
        "weight": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "slug",
        "weight"
      ],
      "type": "object"
    },
    "Error": {
      "description": "Error responses are included with 4xx and 5xx HTTP responses from the API service. Either \"error\" or \"errors\" will be set.",
      "properties": {
        "error": {
          "description": "A description of the error that caused the request to fail.",
          "type": "string"
        },
        "errors": {
          "description": "A list of errors that contributed to the request failing.",
          "items": {
            "description": "An error message that contributed to the request failing.",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Event": {
      "properties": {
        "body": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "interpolated": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventList": {
      "properties": {
        "events": {
          "items": {
            "properties": {
              "body": {
                "type": "string"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "interpolated": {
                "type": "string"
              },
              "relationships": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "first": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "last": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "next": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "previous": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FabricServiceToken": {
      "properties": {
        "expires_at": {
          "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
          "format": "uuid",
          "type": "string"
        },
        "max_allowed_speed": {
          "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
          "example": "'200000000' or '200mbps'",
          "type": "string"
        },
        "role": {
          "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
          "enum": [
            "primary",
            "redundant"
          ],
          "type": "string"
        },
        "service_token_type": {
          "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
          "enum": [
            "a_side"
          ],
          "type": "string"
        },
        "state": {
          "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
          "enum": [
            "inactive",
            "active",
            "expired"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Facility": {
      "properties": {
        "address": {
          "properties": {
            "address": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "coordinates": {
              "properties": {
                "latitude": {
                  "type": "string"
                },
                "longitude": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          },
          "required": [
            "address",
            "zip_code",
            "country"
          ],
          "type": "object"
        },
        "code": {
          "type": "string"
        },
        "features": {
          "example": [
            "baremetal",
            "backend_transfer",
            "global_ipv4"
          ],
          "items": {
            "enum": [
              "baremetal",
              "backend_transfer",
              "layer_2",
              "global_ipv4",
              "ibx"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "ip_ranges": {
          "description": "IP ranges registered in facility. Can be used for GeoIP location",
          "example": [
            "2604:1380::/36",
            "147.75.192.0/21"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metro": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "The metro the facility is in"
            }
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FacilityList": {
      "properties": {
        "facilities": {
          "items": {
            "properties": {
              "address": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "coordinates": {
                    "properties": {
                      "latitude": {
                        "type": "string"
                      },
                      "longitude": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "address",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "code": {
                "type": "string"
              },
              "features": {
                "example": [
                  "baremetal",
                  "backend_transfer",
                  "global_ipv4"
                ],
                "items": {
                  "enum": [
                    "baremetal",
                    "backend_transfer",
                    "layer_2",
                    "global_ipv4",
                    "ibx"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "ip_ranges": {
                "description": "IP ranges registered in facility. Can be used for GeoIP location",
                "example": [
                  "2604:1380::/36",
                  "147.75.192.0/21"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The metro the facility is in"
                  }
                ]
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GlobalBgpRange": {
      "properties": {
        "address_family": {
          "type": "integer"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "range": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GlobalBgpRangeList": {
      "properties": {
        "global_bgp_ranges": {
          "items": {
            "properties": {
              "address_family": {
                "type": "integer"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "range": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HardwareReservation": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "custom_rate": {
          "description": "Amount that will be charged for every billing_cycle.",
          "example": 1050.5,
          "format": "float",
          "type": "number"
        },
        "device": {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "always_pxe": {
              "type": "boolean"
            },
            "billing_cycle": {
              "type": "string"
            },
            "bonding_mode": {
              "type": "integer"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "created_by": {
              "allOf": [
                {
                  "properties": {
                    "avatar_thumb_url": {
                      "description": "Avatar thumbnail URL of the User",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "When the user was created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "email": {
                      "description": "Primary email address of the User",
                      "type": "string"
                    },
                    "first_name": {
                      "description": "First name of the User",
                      "type": "string"
                    },
                    "full_name": {
                      "description": "Full name of the User",
                      "type": "string"
                    },
                    "href": {
                      "description": "API URL uniquely representing the User",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID of the User",
                      "format": "uuid",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "Last name of the User",
                      "type": "string"
                    },
                    "short_id": {
                      "description": "Short ID of the User",
                      "type": "string"
                    },
                    "updated_at": {
                      "description": "When the user details were last updated",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "short_id"
                  ],
                  "type": "object"
                },
                {
                  "description": "The user that created the device."
                }
              ]
            },
            "customdata": {
              "type": "object"
            },
            "description": {
              "type": "string"
            },
            "facility": {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "code": {
                  "type": "string"
                },
                "features": {
                  "example": [
                    "baremetal",
                    "backend_transfer",
                    "global_ipv4"
                  ],
                  "items": {
                    "enum": [
                      "baremetal",
                      "backend_transfer",
                      "layer_2",
                      "global_ipv4",
                      "ibx"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "IP ranges registered in facility. Can be used for GeoIP location",
                  "example": [
                    "2604:1380::/36",
                    "147.75.192.0/21"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the facility is in"
                    }
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "hardware_reservation": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "hostname": {
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "image_url": {
              "type": "string"
            },
            "ip_addresses": {
              "items": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "address_family": {
                    "type": "integer"
                  },
                  "assigned_to": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "cidr": {
                    "type": "integer"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "global_ip": {
                    "type": "boolean"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "manageable": {
                    "type": "boolean"
                  },
                  "management": {
                    "type": "boolean"
                  },
                  "metro": {
                    "allOf": [
                      {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "description": "The metro the IP address is in"
                      }
                    ]
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  },
                  "parent_block": {
                    "properties": {
                      "cidr": {
                        "type": "integer"
                      },
                      "href": {
                        "type": "string"
                      },
                      "netmask": {
                        "type": "string"
                      },
                      "network": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "public": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "ipxe_script_url": {
              "type": "string"
            },
            "iqn": {
              "type": "string"
            },
            "locked": {
              "type": "boolean"
            },
            "metro": {
              "allOf": [
                {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "The metro the facility is in"
                }
              ]
            },
            "network_ports": {
              "allOf": [
                {
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "disbond_operation_supported": {
                      "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                      "type": "boolean"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "virtual_networks": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                }
              ]
            },
            "operating_system": {
              "properties": {
                "distro": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "licensed": {
                  "description": "Licenced OS is priced according to pricing property",
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "preinstallable": {
                  "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                  "type": "boolean"
                },
                "pricing": {
                  "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                  "type": "object"
                },
                "provisionable_on": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "slug": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "plan": {
              "properties": {
                "available_in": {
                  "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "class": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "legacy": {
                  "type": "boolean"
                },
                "line": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "pricing": {
                  "type": "object"
                },
                "slug": {
                  "type": "string"
                },
                "specs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "project": {
              "allOf": [
                {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                {
                  "description": "Full version of project object when included"
                }
              ]
            },
            "project_lite": {
              "allOf": [
                {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                {
                  "description": "Lite version of project object when included"
                }
              ]
            },
            "provisioning_events": {
              "items": {
                "properties": {
                  "body": {
                    "type": "string"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "interpolated": {
                    "type": "string"
                  },
                  "relationships": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "state": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "provisioning_percentage": {
              "description": "Only visible while device provisioning",
              "format": "float",
              "type": "number"
            },
            "root_password": {
              "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
              "type": "string"
            },
            "short_id": {
              "type": "string"
            },
            "spot_instance": {
              "description": "Whether or not the device is a spot instance.",
              "type": "boolean"
            },
            "spot_price_max": {
              "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
              "format": "float",
              "type": "number"
            },
            "ssh_keys": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "state": {
              "type": "string"
            },
            "switch_uuid": {
              "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
              "type": "string"
            },
            "termination_time": {
              "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
              "format": "date-time",
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "user": {
              "type": "string"
            },
            "userdata": {
              "type": "string"
            },
            "volumes": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "facility": {
          "properties": {
            "address": {
              "properties": {
                "address": {
                  "type": "string"
                },
                "address2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "coordinates": {
                  "properties": {
                    "latitude": {
                      "type": "string"
                    },
                    "longitude": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "country": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "address",
                "zip_code",
                "country"
              ],
              "type": "object"
            },
            "code": {
              "type": "string"
            },
            "features": {
              "example": [
                "baremetal",
                "backend_transfer",
                "global_ipv4"
              ],
              "items": {
                "enum": [
                  "baremetal",
                  "backend_transfer",
                  "layer_2",
                  "global_ipv4",
                  "ibx"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "ip_ranges": {
              "description": "IP ranges registered in facility. Can be used for GeoIP location",
              "example": [
                "2604:1380::/36",
                "147.75.192.0/21"
              ],
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "metro": {
              "allOf": [
                {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "description": "The metro the facility is in"
                }
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "need_of_service": {
          "description": "Whether this Device requires assistance from Metal Equinix.",
          "type": "boolean"
        },
        "plan": {
          "properties": {
            "available_in": {
              "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "class": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "legacy": {
              "type": "boolean"
            },
            "line": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "pricing": {
              "type": "object"
            },
            "slug": {
              "type": "string"
            },
            "specs": {
              "type": "object"
            }
          },
          "type": "object"
        },
        "project": {
          "properties": {
            "bgp_config": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "customdata": {
              "type": "object"
            },
            "devices": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "invitations": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "max_devices": {
              "type": "object"
            },
            "members": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "memberships": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "network_status": {
              "type": "object"
            },
            "payment_method": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "ssh_keys": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "volumes": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "provisionable": {
          "description": "Whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first.",
          "type": "boolean"
        },
        "short_id": {
          "description": "Short version of the ID.",
          "format": "string",
          "type": "string"
        },
        "spare": {
          "description": "Whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix",
          "type": "boolean"
        },
        "switch_uuid": {
          "description": "Switch short id. This can be used to determine if two devices are connected to the same switch, for example.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareReservationList": {
      "properties": {
        "hardware_reservations": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "custom_rate": {
                "description": "Amount that will be charged for every billing_cycle.",
                "example": 1050.5,
                "format": "float",
                "type": "number"
              },
              "device": {
                "properties": {
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "always_pxe": {
                    "type": "boolean"
                  },
                  "billing_cycle": {
                    "type": "string"
                  },
                  "bonding_mode": {
                    "type": "integer"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "created_by": {
                    "allOf": [
                      {
                        "properties": {
                          "avatar_thumb_url": {
                            "description": "Avatar thumbnail URL of the User",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "When the user was created",
                            "format": "date-time",
                            "type": "string"
                          },
                          "email": {
                            "description": "Primary email address of the User",
                            "type": "string"
                          },
                          "first_name": {
                            "description": "First name of the User",
                            "type": "string"
                          },
                          "full_name": {
                            "description": "Full name of the User",
                            "type": "string"
                          },
                          "href": {
                            "description": "API URL uniquely representing the User",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID of the User",
                            "format": "uuid",
                            "type": "string"
                          },
                          "last_name": {
                            "description": "Last name of the User",
                            "type": "string"
                          },
                          "short_id": {
                            "description": "Short ID of the User",
                            "type": "string"
                          },
                          "updated_at": {
                            "description": "When the user details were last updated",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "short_id"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "The user that created the device."
                      }
                    ]
                  },
                  "customdata": {
                    "type": "object"
                  },
                  "description": {
                    "type": "string"
                  },
                  "facility": {
                    "properties": {
                      "address": {
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "address2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "coordinates": {
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "zip_code",
                          "country"
                        ],
                        "type": "object"
                      },
                      "code": {
                        "type": "string"
                      },
                      "features": {
                        "example": [
                          "baremetal",
                          "backend_transfer",
                          "global_ipv4"
                        ],
                        "items": {
                          "enum": [
                            "baremetal",
                            "backend_transfer",
                            "layer_2",
                            "global_ipv4",
                            "ibx"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "ip_ranges": {
                        "description": "IP ranges registered in facility. Can be used for GeoIP location",
                        "example": [
                          "2604:1380::/36",
                          "147.75.192.0/21"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "metro": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "description": "The metro the facility is in"
                          }
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "hardware_reservation": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "hostname": {
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "ip_addresses": {
                    "items": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address_family": {
                          "type": "integer"
                        },
                        "assigned_to": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "cidr": {
                          "type": "integer"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "gateway": {
                          "type": "string"
                        },
                        "global_ip": {
                          "type": "boolean"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "manageable": {
                          "type": "boolean"
                        },
                        "management": {
                          "type": "boolean"
                        },
                        "metro": {
                          "allOf": [
                            {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "country": {
                                  "type": "string"
                                },
                                "id": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            {
                              "description": "The metro the IP address is in"
                            }
                          ]
                        },
                        "netmask": {
                          "type": "string"
                        },
                        "network": {
                          "type": "string"
                        },
                        "parent_block": {
                          "properties": {
                            "cidr": {
                              "type": "integer"
                            },
                            "href": {
                              "type": "string"
                            },
                            "netmask": {
                              "type": "string"
                            },
                            "network": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "public": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "ipxe_script_url": {
                    "type": "string"
                  },
                  "iqn": {
                    "type": "string"
                  },
                  "locked": {
                    "type": "boolean"
                  },
                  "metro": {
                    "allOf": [
                      {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "description": "The metro the facility is in"
                      }
                    ]
                  },
                  "network_ports": {
                    "allOf": [
                      {
                        "properties": {
                          "data": {
                            "type": "object"
                          },
                          "disbond_operation_supported": {
                            "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                            "type": "boolean"
                          },
                          "href": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "virtual_networks": {
                            "items": {
                              "properties": {
                                "href": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "href"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "description": "By default, servers at Equinix Metal are configured in a “bonded” mode\nusing LACP (Link Aggregation Control Protocol). Each 2-NIC server is\nconfigured with a single bond (namely bond0) with both interfaces eth0\nand eth1 as members of the bond in a default Layer 3 mode. Some device\nplans may have a different number of ports and bonds available."
                      }
                    ]
                  },
                  "operating_system": {
                    "properties": {
                      "distro": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "licensed": {
                        "description": "Licenced OS is priced according to pricing property",
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "preinstallable": {
                        "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                        "type": "boolean"
                      },
                      "pricing": {
                        "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                        "type": "object"
                      },
                      "provisionable_on": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "plan": {
                    "properties": {
                      "available_in": {
                        "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "class": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "legacy": {
                        "type": "boolean"
                      },
                      "line": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pricing": {
                        "type": "object"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "specs": {
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "allOf": [
                      {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "Full version of project object when included"
                      }
                    ]
                  },
                  "project_lite": {
                    "allOf": [
                      {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "Lite version of project object when included"
                      }
                    ]
                  },
                  "provisioning_events": {
                    "items": {
                      "properties": {
                        "body": {
                          "type": "string"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "interpolated": {
                          "type": "string"
                        },
                        "relationships": {
                          "items": {
                            "properties": {
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "state": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "provisioning_percentage": {
                    "description": "Only visible while device provisioning",
                    "format": "float",
                    "type": "number"
                  },
                  "root_password": {
                    "description": "Root password is automatically generated when server is provisioned and it is removed after 24 hours",
                    "type": "string"
                  },
                  "short_id": {
                    "type": "string"
                  },
                  "spot_instance": {
                    "description": "Whether or not the device is a spot instance.",
                    "type": "boolean"
                  },
                  "spot_price_max": {
                    "description": "The maximum price per hour you are willing to pay to keep this spot\ninstance.  If you are outbid, the termination will be set allowing two\nminutes before shutdown.",
                    "format": "float",
                    "type": "number"
                  },
                  "ssh_keys": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "state": {
                    "type": "string"
                  },
                  "switch_uuid": {
                    "description": "Switch short id. This can be used to determine if two devices are\nconnected to the same switch, for example.",
                    "type": "string"
                  },
                  "termination_time": {
                    "description": "When the device will be terminated. This is commonly set in advance for\nephemeral spot market instances but this field may also be set with\non-demand and reservation instances to automatically delete the resource\nat a given time. The termination time can also be used to release a\nhardware reservation instance at a given time, keeping the reservation\nopen for other uses.  On a spot market device, the termination time will\nbe set automatically when outbid.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "userdata": {
                    "type": "string"
                  },
                  "volumes": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "facility": {
                "properties": {
                  "address": {
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "address2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "coordinates": {
                        "properties": {
                          "latitude": {
                            "type": "string"
                          },
                          "longitude": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "country": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "address",
                      "zip_code",
                      "country"
                    ],
                    "type": "object"
                  },
                  "code": {
                    "type": "string"
                  },
                  "features": {
                    "example": [
                      "baremetal",
                      "backend_transfer",
                      "global_ipv4"
                    ],
                    "items": {
                      "enum": [
                        "baremetal",
                        "backend_transfer",
                        "layer_2",
                        "global_ipv4",
                        "ibx"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "ip_ranges": {
                    "description": "IP ranges registered in facility. Can be used for GeoIP location",
                    "example": [
                      "2604:1380::/36",
                      "147.75.192.0/21"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metro": {
                    "allOf": [
                      {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "description": "The metro the facility is in"
                      }
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "need_of_service": {
                "description": "Whether this Device requires assistance from Metal Equinix.",
                "type": "boolean"
              },
              "plan": {
                "properties": {
                  "available_in": {
                    "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "class": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "legacy": {
                    "type": "boolean"
                  },
                  "line": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "pricing": {
                    "type": "object"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "specs": {
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "project": {
                "properties": {
                  "bgp_config": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "customdata": {
                    "type": "object"
                  },
                  "devices": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "invitations": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "max_devices": {
                    "type": "object"
                  },
                  "members": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "memberships": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "network_status": {
                    "type": "object"
                  },
                  "payment_method": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "ssh_keys": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "volumes": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "provisionable": {
                "description": "Whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first.",
                "type": "boolean"
              },
              "short_id": {
                "description": "Short version of the ID.",
                "format": "string",
                "type": "string"
              },
              "spare": {
                "description": "Whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix",
                "type": "boolean"
              },
              "switch_uuid": {
                "description": "Switch short id. This can be used to determine if two devices are connected to the same switch, for example.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "meta": {
          "properties": {
            "first": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "last": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "next": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "previous": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Href": {
      "properties": {
        "href": {
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "IPAssignment": {
      "properties": {
        "address": {
          "type": "string"
        },
        "address_family": {
          "type": "integer"
        },
        "assigned_to": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "cidr": {
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "global_ip": {
          "type": "boolean"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "manageable": {
          "type": "boolean"
        },
        "management": {
          "type": "boolean"
        },
        "metro": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "The metro the IP address is in"
            }
          ]
        },
        "netmask": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "parent_block": {
          "properties": {
            "cidr": {
              "type": "integer"
            },
            "href": {
              "type": "string"
            },
            "netmask": {
              "type": "string"
            },
            "network": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "public": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IPAssignmentInput": {
      "properties": {
        "address": {
          "type": "string"
        },
        "customdata": {
          "type": "object"
        },
        "manageable": {
          "type": "boolean"
        }
      },
      "required": [
        "address"
      ],
      "type": "object"
    },
    "IPAssignmentList": {
      "properties": {
        "ip_addresses": {
          "items": {
            "properties": {
              "address": {
                "type": "string"
              },
              "address_family": {
                "type": "integer"
              },
              "assigned_to": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "cidr": {
                "type": "integer"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "gateway": {
                "type": "string"
              },
              "global_ip": {
                "type": "boolean"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "manageable": {
                "type": "boolean"
              },
              "management": {
                "type": "boolean"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The metro the IP address is in"
                  }
                ]
              },
              "netmask": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "parent_block": {
                "properties": {
                  "cidr": {
                    "type": "integer"
                  },
                  "href": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "public": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IPAvailabilitiesList": {
      "properties": {
        "available": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IPReservation": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "addon": {
          "type": "boolean"
        },
        "address_family": {
          "type": "integer"
        },
        "assignments": {
          "items": {
            "properties": {
              "address": {
                "type": "string"
              },
              "address_family": {
                "type": "integer"
              },
              "assigned_to": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "cidr": {
                "type": "integer"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "gateway": {
                "type": "string"
              },
              "global_ip": {
                "type": "boolean"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "manageable": {
                "type": "boolean"
              },
              "management": {
                "type": "boolean"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The metro the IP address is in"
                  }
                ]
              },
              "netmask": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "parent_block": {
                "properties": {
                  "cidr": {
                    "type": "integer"
                  },
                  "href": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "network": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "public": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "bill": {
          "type": "boolean"
        },
        "cidr": {
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "facility": {
          "allOf": [
            {
              "properties": {
                "address": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "coordinates": {
                      "properties": {
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "zip_code",
                    "country"
                  ],
                  "type": "object"
                },
                "code": {
                  "type": "string"
                },
                "features": {
                  "example": [
                    "baremetal",
                    "backend_transfer",
                    "global_ipv4"
                  ],
                  "items": {
                    "enum": [
                      "baremetal",
                      "backend_transfer",
                      "layer_2",
                      "global_ipv4",
                      "ibx"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "IP ranges registered in facility. Can be used for GeoIP location",
                  "example": [
                    "2604:1380::/36",
                    "147.75.192.0/21"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "metro": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "The metro the facility is in"
                    }
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "The facility the IP reservation is in. If the facility the IP reservation was requested in is in a metro, a metro value will also be set, and the subsequent IP reservation can be used on a metro level. Can be null if requesting an IP reservation in a metro."
            }
          ]
        },
        "global_ip": {
          "type": "boolean"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "manageable": {
          "type": "boolean"
        },
        "management": {
          "type": "boolean"
        },
        "metal_gateway": {
          "properties": {
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "gateway_address": {
              "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "state": {
              "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
              "enum": [
                "ready",
                "active",
                "deleting"
              ],
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "vlan": {
              "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
              "type": "number"
            }
          },
          "type": "object"
        },
        "metro": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "The metro the IP reservation is in. As long as the IP reservation has a metro, it can be used on a metro level. Can be null if requesting an IP reservation in a facility that is not in a metro."
            }
          ]
        },
        "netmask": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IPReservationList": {
      "properties": {
        "ip_addresses": {
          "items": {},
          "type": "array"
        }
      },
      "type": "object"
    },
    "IPReservationRequestInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "comments": {
          "type": "string"
        },
        "customdata": {
          "type": "object"
        },
        "details": {
          "type": "string"
        },
        "facility": {
          "type": "string"
        },
        "fail_on_approval_required": {
          "type": "boolean"
        },
        "metro": {
          "description": "The code of the metro you are requesting the IP reservation in.",
          "example": "SV",
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "quantity"
      ],
      "type": "object"
    },
    "InstancesBatchCreateInput": {
      "properties": {
        "batches": {
          "items": {
            "properties": {
              "tags": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "always_pxe": {
                "type": "boolean"
              },
              "billing_cycle": {
                "type": "string"
              },
              "customdata": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "facility": {
                "description": "Array of facility codes the batch can use for provisioning. This param also takes a string if you want the batch to be fulfilled in only one facility. Cannot be set if the metro is already set.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "features": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "hostname": {
                "type": "string"
              },
              "hostnames": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ip_addresses": {
                "items": {
                  "properties": {
                    "address_family": {
                      "description": "Address Family for IP Address",
                      "enum": [
                        4,
                        6
                      ],
                      "example": 4,
                      "format": "integer",
                      "type": "number"
                    },
                    "cidr": {
                      "description": "Cidr Size for the IP Block created. Valid values depends on the operating system been provisioned (28..32 for IPv4 addresses, 124..127 for IPv6 addresses).",
                      "example": 28,
                      "format": "integer",
                      "type": "number"
                    },
                    "ip_reservations": {
                      "description": "UUIDs of any IP reservations to use when assigning IPs",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "public": {
                      "default": true,
                      "description": "Address Type for IP Address",
                      "example": false,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "locked": {
                "type": "boolean"
              },
              "metro": {
                "description": "The metro ID or code the batch can use for provisioning. Cannot be set if the facility is already set.",
                "type": "string"
              },
              "no_ssh_keys": {
                "type": "boolean"
              },
              "operating_system": {
                "type": "string"
              },
              "plan": {
                "type": "string"
              },
              "project_ssh_keys": {
                "items": {
                  "format": "uuid",
                  "type": "string"
                },
                "type": "array"
              },
              "termination_time": {
                "format": "date-time",
                "type": "string"
              },
              "user_ssh_keys": {
                "description": "The UUIDs of users whose SSH keys should be included on the provisioned device.",
                "items": {
                  "format": "uuid",
                  "type": "string"
                },
                "type": "array"
              },
              "userdata": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Interconnection": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contact_email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "facility": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "metro": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "Details of the metro the facility is in"
            }
          ]
        },
        "mode": {
          "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
          "enum": [
            "standard",
            "tunnel"
          ],
          "example": "standard",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "ports": {
          "items": {
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "organization": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "role": {
                "description": "Either 'primary' or 'secondary'.",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "switch_id": {
                "description": "A switch 'short ID'",
                "type": "string"
              },
              "virtual_circuits": {
                "properties": {
                  "virtual_circuits": {
                    "items": {},
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "redundancy": {
          "type": "string"
        },
        "service_tokens": {
          "items": {
            "properties": {
              "expires_at": {
                "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                "format": "uuid",
                "type": "string"
              },
              "max_allowed_speed": {
                "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                "example": "'200000000' or '200mbps'",
                "type": "string"
              },
              "role": {
                "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                "enum": [
                  "primary",
                  "redundant"
                ],
                "type": "string"
              },
              "service_token_type": {
                "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                "enum": [
                  "a_side"
                ],
                "type": "string"
              },
              "state": {
                "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                "enum": [
                  "inactive",
                  "active",
                  "expired"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "speed": {
          "description": "The connection's speed in bps.",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InterconnectionCreateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contact_email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "metro": {
          "description": "A Metro ID or code.",
          "type": "string"
        },
        "mode": {
          "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
          "enum": [
            "standard",
            "tunnel"
          ],
          "example": "standard",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "redundancy": {
          "description": "Either 'primary' or 'redundant'.",
          "type": "string"
        },
        "service_token_type": {
          "description": "Can only be set to 'a_side' to create a shared connection with an A-side Fabric service token. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
          "enum": [
            "a_side"
          ],
          "example": "a_side",
          "type": "string"
        },
        "speed": {
          "description": "A connection speed, in bps, mbps, or gbps. Ex: '100000000' or '100 mbps'.",
          "type": "string"
        },
        "type": {
          "description": "Either 'shared' or 'dedicated'.",
          "type": "string"
        },
        "vlans": {
          "description": "A list of one or two metro-based VLANs that will be set on the primary and/or secondary (if redundant) virtual circuits respectively when creating a shared connection. VLANs can also be set after the connection is created, but are required to activate the connection. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
          "example": [
            1000,
            1001
          ],
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "metro",
        "type",
        "redundancy"
      ],
      "type": "object"
    },
    "InterconnectionList": {
      "properties": {
        "interconnections": {
          "items": {
            "properties": {
              "tags": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "contact_email": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "facility": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "Details of the metro the facility is in"
                  }
                ]
              },
              "mode": {
                "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                "enum": [
                  "standard",
                  "tunnel"
                ],
                "example": "standard",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "organization": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "ports": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "organization": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "role": {
                      "description": "Either 'primary' or 'secondary'.",
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "switch_id": {
                      "description": "A switch 'short ID'",
                      "type": "string"
                    },
                    "virtual_circuits": {
                      "properties": {
                        "virtual_circuits": {
                          "items": {},
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "redundancy": {
                "type": "string"
              },
              "service_tokens": {
                "items": {
                  "properties": {
                    "expires_at": {
                      "description": "The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "The service token UUID that can be used on the Fabric Portal to create an connection from Metal to another Fabric service provider.",
                      "format": "uuid",
                      "type": "string"
                    },
                    "max_allowed_speed": {
                      "description": "The maximum speed that can be selected on the Fabric Portal when configuring a connection with the service token. The speed is recorded in bps, but can be set by using any of the following units: 'bps', 'mbps', or 'gbps'. This speed is automatically capped depending on the tier of the organization. If you would like to upgrade to another tier, please contact our Support team.",
                      "example": "'200000000' or '200mbps'",
                      "type": "string"
                    },
                    "role": {
                      "description": "Either primary or redundant, depending on the role of the connection port the token is associated with.",
                      "enum": [
                        "primary",
                        "redundant"
                      ],
                      "type": "string"
                    },
                    "service_token_type": {
                      "description": "The type of service token that has been created. Currently, only A-side service tokens are available.",
                      "enum": [
                        "a_side"
                      ],
                      "type": "string"
                    },
                    "state": {
                      "description": "The state of the service token that corresponds with the service token state on Fabric. An inactive state refers to a token that has not been redeemed yet on the Fabric side, an active state refers to a token that has already been redeemed, and an expired state refers to a token that has reached its expiry time.",
                      "enum": [
                        "inactive",
                        "active",
                        "expired"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "speed": {
                "description": "The connection's speed in bps.",
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InterconnectionPort": {
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "organization": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "role": {
          "description": "Either 'primary' or 'secondary'.",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "switch_id": {
          "description": "A switch 'short ID'",
          "type": "string"
        },
        "virtual_circuits": {
          "properties": {
            "virtual_circuits": {
              "items": {},
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InterconnectionPortList": {
      "properties": {
        "ports": {
          "items": {
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "organization": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "role": {
                "description": "Either 'primary' or 'secondary'.",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "switch_id": {
                "description": "A switch 'short ID'",
                "type": "string"
              },
              "virtual_circuits": {
                "properties": {
                  "virtual_circuits": {
                    "items": {},
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InterconnectionUpdateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contact_email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mode": {
          "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
          "enum": [
            "standard",
            "tunnel"
          ],
          "example": "standard",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "redundancy": {
          "description": "Updating from 'redundant' to 'primary' will remove a secondary port, while updating from 'primary' to 'redundant' will add one.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Invitation": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "invitation": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "invited_by": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "invitee": {
          "type": "string"
        },
        "organization": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "projects_ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvitationInput": {
      "properties": {
        "invitee": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "projects_ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "invitee"
      ],
      "type": "object"
    },
    "InvitationList": {
      "properties": {
        "invitations": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "roles": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "user": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "License": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "license_key": {
          "type": "string"
        },
        "licensee_product": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "size": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "LicenseCreateInput": {
      "properties": {
        "description": {
          "type": "string"
        },
        "licensee_product_id": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "LicenseList": {
      "properties": {
        "licenses": {
          "items": {
            "properties": {
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "license_key": {
                "type": "string"
              },
              "licensee_product": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "size": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LicenseUpdateInput": {
      "properties": {
        "description": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "Membership": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "user": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "MembershipInput": {
      "properties": {
        "role": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MembershipList": {
      "properties": {
        "memberships": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "roles": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "user": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Meta": {
      "properties": {
        "first": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "last": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "next": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "previous": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "self": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "total": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MetalGateway": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "ip_reservation": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "state": {
          "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
          "enum": [
            "ready",
            "active",
            "deleting"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "virtual_network": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "MetalGatewayInput": {
      "properties": {
        "ip_reservation_id": {
          "description": "The UUID of an IP reservation that belongs to the same project as where the metal gateway will be created in. This field is required unless the private IPv4 subnet size is specified.",
          "format": "uuid",
          "type": "string"
        },
        "private_ipv4_subnet_size": {
          "description": "The subnet size (8, 16, 32, 64, or 128) of the private IPv4 reservation that will be created for the metal gateway. This field is required unless a project IP reservation was specified.\n          Please keep in mind that the number of private metal gateway ranges are limited per project. If you would like to increase the limit per project, please contact support for assistance.",
          "type": "integer"
        },
        "virtual_network_id": {
          "description": "The UUID of a metro virtual network that belongs to the same project as where the metal gateway will be created in.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "virtual_network_id"
      ],
      "type": "object"
    },
    "MetalGatewayList": {
      "properties": {
        "MetalGateways": {
          "items": {},
          "type": "array"
        }
      },
      "type": "object"
    },
    "MetalGatewayLite": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "gateway_address": {
          "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "state": {
          "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
          "enum": [
            "ready",
            "active",
            "deleting"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "vlan": {
          "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Metro": {
      "properties": {
        "code": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MetroCapacityList": {
      "properties": {
        "capacity": {
          "properties": {
            "am": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "at": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ch": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "da": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "dc": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "fr": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "hk": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "la": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ld": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "md": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ny": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "pa": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "se": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sg": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sl": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sp": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sv": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sy": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "tr": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ty": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "level": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MetroCapacityReport": {
      "properties": {
        "am": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "at": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ch": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "da": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "dc": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "fr": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "hk": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "la": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ld": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "md": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ny": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "pa": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "se": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sg": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sl": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sp": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sv": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sy": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "tr": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ty": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "level": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MetroList": {
      "properties": {
        "metros": {
          "items": {
            "properties": {
              "code": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MetroServerInfo": {
      "properties": {
        "metro": {
          "description": "The metro ID or code to check the capacity in.",
          "type": "string"
        },
        "plan": {
          "description": "The plan ID or slug to check the capacity of.",
          "type": "string"
        },
        "quantity": {
          "description": "The number of servers to check the capacity of.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NewPassword": {
      "properties": {
        "new_password": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperatingSystem": {
      "properties": {
        "distro": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "licensed": {
          "description": "Licenced OS is priced according to pricing property",
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "preinstallable": {
          "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
          "type": "boolean"
        },
        "pricing": {
          "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
          "type": "object"
        },
        "provisionable_on": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "slug": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperatingSystemList": {
      "properties": {
        "operating_systems": {
          "items": {
            "properties": {
              "distro": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "licensed": {
                "description": "Licenced OS is priced according to pricing property",
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "preinstallable": {
                "description": "Servers can be already preinstalled with OS in order to shorten provision time.",
                "type": "boolean"
              },
              "pricing": {
                "description": "This object contains price per time unit and optional multiplier value if licence price depends on hardware plan or components (e.g. number of cores)",
                "type": "object"
              },
              "provisionable_on": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "slug": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Organization": {
      "properties": {
        "address": {
          "properties": {
            "address": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "coordinates": {
              "properties": {
                "latitude": {
                  "type": "string"
                },
                "longitude": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          },
          "required": [
            "address",
            "zip_code",
            "country"
          ],
          "type": "object"
        },
        "billing_address": {
          "properties": {
            "address": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "coordinates": {
              "properties": {
                "latitude": {
                  "type": "string"
                },
                "longitude": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          },
          "required": [
            "address",
            "zip_code",
            "country"
          ],
          "type": "object"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "credit_amount": {
          "format": "float",
          "type": "number"
        },
        "customdata": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "enforce_2fa_at": {
          "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "logo": {
          "format": "binary",
          "type": "string"
        },
        "members": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "memberships": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "terms": {
          "type": "integer"
        },
        "twitter": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrganizationInput": {
      "properties": {
        "address": {
          "properties": {
            "address": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "coordinates": {
              "properties": {
                "latitude": {
                  "type": "string"
                },
                "longitude": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          },
          "required": [
            "address",
            "zip_code",
            "country"
          ],
          "type": "object"
        },
        "billing_address": {
          "properties": {
            "address": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "coordinates": {
              "properties": {
                "latitude": {
                  "type": "string"
                },
                "longitude": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "zip_code": {
              "type": "string"
            }
          },
          "required": [
            "address",
            "zip_code",
            "country"
          ],
          "type": "object"
        },
        "customdata": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "enforce_2fa_at": {
          "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
          "format": "date-time",
          "type": "string"
        },
        "logo": {
          "format": "binary",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrganizationList": {
      "properties": {
        "meta": {
          "properties": {
            "first": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "last": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "next": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "previous": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "organizations": {
          "items": {
            "properties": {
              "address": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "coordinates": {
                    "properties": {
                      "latitude": {
                        "type": "string"
                      },
                      "longitude": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "address",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "billing_address": {
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "coordinates": {
                    "properties": {
                      "latitude": {
                        "type": "string"
                      },
                      "longitude": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "address",
                  "zip_code",
                  "country"
                ],
                "type": "object"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "credit_amount": {
                "format": "float",
                "type": "number"
              },
              "customdata": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "enforce_2fa_at": {
                "description": "Force to all members to have enabled the two factor authentication after that date, unless the value is null",
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "logo": {
                "format": "binary",
                "type": "string"
              },
              "members": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "memberships": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "projects": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "terms": {
                "type": "integer"
              },
              "twitter": {
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "website": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ParentBlock": {
      "properties": {
        "cidr": {
          "type": "integer"
        },
        "href": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "network": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethod": {
      "properties": {
        "billing_address": {
          "properties": {
            "country_code_alpha2": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "street_address": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "card_type": {
          "type": "string"
        },
        "cardholder_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "created_by_user": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "default": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "expiration_month": {
          "type": "string"
        },
        "expiration_year": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "projects": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodBillingAddress": {
      "properties": {
        "country_code_alpha2": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "street_address": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodCreateInput": {
      "properties": {
        "default": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "nonce"
      ],
      "type": "object"
    },
    "PaymentMethodList": {
      "properties": {
        "payment_methods": {
          "items": {
            "properties": {
              "billing_address": {
                "properties": {
                  "country_code_alpha2": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": "string"
                  },
                  "street_address": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "card_type": {
                "type": "string"
              },
              "cardholder_name": {
                "type": "string"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "created_by_user": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "default": {
                "type": "boolean"
              },
              "email": {
                "type": "string"
              },
              "expiration_month": {
                "type": "string"
              },
              "expiration_year": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "organization": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "projects": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "type": {
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentMethodUpdateInput": {
      "properties": {
        "billing_address": {
          "type": "object"
        },
        "cardholder_name": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "expiration_month": {
          "type": "string"
        },
        "expiration_year": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Plan": {
      "properties": {
        "available_in": {
          "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "class": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "legacy": {
          "type": "boolean"
        },
        "line": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pricing": {
          "type": "object"
        },
        "slug": {
          "type": "string"
        },
        "specs": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "PlanList": {
      "properties": {
        "plans": {
          "items": {
            "properties": {
              "available_in": {
                "description": "Shows which facilities the plan is available in, and the facility-based price if it is different from the default price.",
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "class": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "legacy": {
                "type": "boolean"
              },
              "line": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pricing": {
                "type": "object"
              },
              "slug": {
                "type": "string"
              },
              "specs": {
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Port": {
      "properties": {
        "data": {
          "type": "object"
        },
        "disbond_operation_supported": {
          "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
          "type": "boolean"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "virtual_networks": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PortAssignInput": {
      "properties": {
        "vnid": {
          "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself.\n",
          "example": "1001",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortConvertLayer3Input": {
      "properties": {
        "request_ips": {
          "items": {
            "properties": {
              "address_family": {
                "type": "integer"
              },
              "public": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PortVlanAssignment": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "native": {
          "type": "boolean"
        },
        "port": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "state": {
          "enum": [
            "assigned",
            "unassigning"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "virtual_network": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "vlan": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PortVlanAssignmentBatch": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "error_messages": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "port": {
          "properties": {
            "data": {
              "type": "object"
            },
            "disbond_operation_supported": {
              "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
              "type": "boolean"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "virtual_networks": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "quantity": {
          "type": "integer"
        },
        "state": {
          "enum": [
            "queued",
            "in_progress",
            "completed",
            "failed"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "vlan_assignments": {
          "items": {
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "native": {
                "type": "boolean"
              },
              "state": {
                "enum": [
                  "assigned",
                  "unassigned"
                ],
                "type": "string"
              },
              "vlan": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PortVlanAssignmentBatchCreateInput": {
      "properties": {
        "vlan_assignments": {
          "items": {
            "properties": {
              "native": {
                "type": "boolean"
              },
              "state": {
                "enum": [
                  "assigned",
                  "unassigned"
                ],
                "type": "string"
              },
              "vlan": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PortVlanAssignmentBatchList": {
      "properties": {
        "batches": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "error_messages": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "port": {
                "properties": {
                  "data": {
                    "type": "object"
                  },
                  "disbond_operation_supported": {
                    "description": "Indicates whether or not the bond can be broken on the port (when applicable).",
                    "type": "boolean"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "virtual_networks": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "type": "integer"
              },
              "state": {
                "enum": [
                  "queued",
                  "in_progress",
                  "completed",
                  "failed"
                ],
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "vlan_assignments": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "native": {
                      "type": "boolean"
                    },
                    "state": {
                      "enum": [
                        "assigned",
                        "unassigned"
                      ],
                      "type": "string"
                    },
                    "vlan": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PortVlanAssignmentList": {
      "properties": {
        "vlan_assignments": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "native": {
                "type": "boolean"
              },
              "port": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "state": {
                "enum": [
                  "assigned",
                  "unassigning"
                ],
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "virtual_network": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "vlan": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Project": {
      "properties": {
        "bgp_config": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "customdata": {
          "type": "object"
        },
        "devices": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "invitations": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "max_devices": {
          "type": "object"
        },
        "members": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "memberships": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "network_status": {
          "type": "object"
        },
        "payment_method": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "ssh_keys": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "volumes": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProjectCreateFromRootInput": {
      "properties": {
        "customdata": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "organization_id": {
          "format": "uuid",
          "type": "string"
        },
        "payment_method_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ProjectCreateInput": {
      "properties": {
        "customdata": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "payment_method_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ProjectList": {
      "properties": {
        "meta": {
          "properties": {
            "first": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "last": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "next": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "previous": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "projects": {
          "items": {
            "properties": {
              "bgp_config": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "customdata": {
                "type": "object"
              },
              "devices": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "invitations": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "max_devices": {
                "type": "object"
              },
              "members": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "memberships": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "network_status": {
                "type": "object"
              },
              "payment_method": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "ssh_keys": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              },
              "volumes": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProjectUpdateInput": {
      "properties": {
        "backend_transfer_enabled": {
          "type": "boolean"
        },
        "customdata": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "payment_method_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectUsage": {
      "properties": {
        "facility": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "plan_version": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProjectUsageList": {
      "properties": {
        "usages": {
          "items": {
            "properties": {
              "facility": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "plan": {
                "type": "string"
              },
              "plan_version": {
                "type": "string"
              },
              "price": {
                "type": "string"
              },
              "quantity": {
                "type": "string"
              },
              "total": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RecoveryCodeList": {
      "properties": {
        "recovery_codes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SSHKey": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "entity": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "fingerprint": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SSHKeyCreateInput": {
      "properties": {
        "instances_ids": {
          "description": "List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging\n      to entity will be included",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SSHKeyInput": {
      "properties": {
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SSHKeyList": {
      "properties": {
        "ssh_keys": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "entity": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "fingerprint": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SelfServiceReservationItemRequest": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "metro_id": {
          "format": "uuid",
          "type": "string"
        },
        "plan_id": {
          "format": "uuid",
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "term": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SelfServiceReservationItemResponse": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "metro_code": {
          "type": "string"
        },
        "metro_id": {
          "format": "uuid",
          "type": "string"
        },
        "metro_name": {
          "type": "string"
        },
        "plan_id": {
          "format": "uuid",
          "type": "string"
        },
        "plan_name": {
          "type": "string"
        },
        "plan_slug": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "term": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SelfServiceReservationList": {
      "properties": {
        "reservations": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "item": {
                "items": {
                  "properties": {
                    "amount": {
                      "format": "float",
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "metro_code": {
                      "type": "string"
                    },
                    "metro_id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "metro_name": {
                      "type": "string"
                    },
                    "plan_id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "plan_name": {
                      "type": "string"
                    },
                    "plan_slug": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer"
                    },
                    "term": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "notes": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "organization_id": {
                "format": "uuid",
                "type": "string"
              },
              "period": {
                "properties": {
                  "count": {
                    "enum": [
                      12,
                      36
                    ],
                    "type": "number"
                  },
                  "unit": {
                    "enum": [
                      "monthly"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "project": {
                "type": "string"
              },
              "project_id": {
                "format": "uuid",
                "type": "string"
              },
              "start_date": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "total_cost": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SelfServiceReservationResponse": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "item": {
          "items": {
            "properties": {
              "amount": {
                "format": "float",
                "type": "number"
              },
              "id": {
                "type": "string"
              },
              "metro_code": {
                "type": "string"
              },
              "metro_id": {
                "format": "uuid",
                "type": "string"
              },
              "metro_name": {
                "type": "string"
              },
              "plan_id": {
                "format": "uuid",
                "type": "string"
              },
              "plan_name": {
                "type": "string"
              },
              "plan_slug": {
                "type": "string"
              },
              "quantity": {
                "type": "integer"
              },
              "term": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "notes": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "organization_id": {
          "format": "uuid",
          "type": "string"
        },
        "period": {
          "properties": {
            "count": {
              "enum": [
                12,
                36
              ],
              "type": "number"
            },
            "unit": {
              "enum": [
                "monthly"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "project": {
          "type": "string"
        },
        "project_id": {
          "format": "uuid",
          "type": "string"
        },
        "start_date": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total_cost": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ServerInfo": {
      "properties": {
        "facility": {
          "type": "string"
        },
        "plan": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpotMarketPricesList": {
      "properties": {
        "spot_market_prices": {
          "properties": {
            "ams1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "atl1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "dfw1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ewr1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "fra1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "iad1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "lax1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nrt1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ord1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sea1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sin1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sjc1": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "syd1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "yyz1": {
              "properties": {
                "baremetal_1e": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotMarketPricesPerMetroList": {
      "properties": {
        "spot_market_prices": {
          "properties": {
            "am": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ch": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "da": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "la": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "ny": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sg": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "sv": {
              "properties": {
                "baremetal_0": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_1": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_2a2": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_3": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "baremetal_s": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "c2.medium.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "m2.xlarge.x86": {
                  "properties": {
                    "price": {
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotMarketPricesPerMetroReport": {
      "properties": {
        "am": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ch": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "da": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "la": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ny": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sg": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sv": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotMarketRequest": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "devices_max": {
          "type": "integer"
        },
        "devices_min": {
          "type": "integer"
        },
        "end_at": {
          "format": "date-time",
          "type": "string"
        },
        "facilities": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "instances": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "max_bid_price": {
          "format": "float",
          "type": "number"
        },
        "metro": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            {
              "description": "The metro the spot market request was created in"
            }
          ]
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotMarketRequestCreateInput": {
      "properties": {
        "devices_max": {
          "type": "integer"
        },
        "devices_min": {
          "type": "integer"
        },
        "end_at": {
          "format": "date-time",
          "type": "string"
        },
        "facilities": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        },
        "instance_attributes": {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "always_pxe": {
              "type": "boolean"
            },
            "billing_cycle": {
              "type": "string"
            },
            "customdata": {
              "type": "object"
            },
            "description": {
              "type": "string"
            },
            "features": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "hostname": {
              "type": "string"
            },
            "hostnames": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "locked": {
              "type": "boolean"
            },
            "no_ssh_keys": {
              "type": "boolean"
            },
            "operating_system": {
              "type": "string"
            },
            "plan": {
              "type": "string"
            },
            "private_ipv4_subnet_size": {
              "type": "integer"
            },
            "project_ssh_keys": {
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            "public_ipv4_subnet_size": {
              "type": "integer"
            },
            "termination_time": {
              "format": "date-time",
              "type": "string"
            },
            "user_ssh_keys": {
              "description": "The UUIDs of users whose SSH keys should be included on the provisioned device.",
              "items": {
                "format": "uuid",
                "type": "string"
              },
              "type": "array"
            },
            "userdata": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "max_bid_price": {
          "format": "float",
          "type": "number"
        },
        "metro": {
          "description": "The metro ID or code the spot market request will be created in.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpotMarketRequestList": {
      "properties": {
        "spot_market_requests": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "devices_max": {
                "type": "integer"
              },
              "devices_min": {
                "type": "integer"
              },
              "end_at": {
                "format": "date-time",
                "type": "string"
              },
              "facilities": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "instances": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "max_bid_price": {
                "format": "float",
                "type": "number"
              },
              "metro": {
                "allOf": [
                  {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "description": "The metro the spot market request was created in"
                  }
                ]
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SpotPricesDatapoints": {
      "properties": {
        "datapoints": {
          "items": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SpotPricesDatapointsList": {
      "items": {
        "type": "number"
      },
      "type": "array"
    },
    "SpotPricesHistoryReport": {
      "properties": {
        "prices_history": {
          "properties": {
            "datapoints": {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotPricesPerBaremetal": {
      "properties": {
        "price": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "SpotPricesPerFacility": {
      "properties": {
        "baremetal_0": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "baremetal_1": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "baremetal_2": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "baremetal_2a": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "baremetal_2a2": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "baremetal_3": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "baremetal_s": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "c2.medium.x86": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        },
        "m2.xlarge.x86": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotPricesPerNewFacility": {
      "properties": {
        "baremetal_1e": {
          "properties": {
            "price": {
              "format": "float",
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpotPricesReport": {
      "properties": {
        "ams1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "atl1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "dfw1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ewr1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "fra1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "iad1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "lax1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "nrt1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "ord1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sea1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sin1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sjc1": {
          "properties": {
            "baremetal_0": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_1": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_2a2": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_3": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "baremetal_s": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "c2.medium.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "m2.xlarge.x86": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "syd1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "yyz1": {
          "properties": {
            "baremetal_1e": {
              "properties": {
                "price": {
                  "format": "float",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportRequestInput": {
      "properties": {
        "device_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "priority": {
          "enum": [
            "urgent",
            "high",
            "medium",
            "low"
          ],
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "required": [
        "subject",
        "message"
      ],
      "type": "object"
    },
    "Timeframe": {
      "properties": {
        "ended_at": {
          "format": "date-time",
          "type": "string"
        },
        "started_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "started_at",
        "ended_at"
      ],
      "type": "object"
    },
    "TransferRequest": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "target_organization": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferRequestInput": {
      "properties": {
        "target_organization_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferRequestList": {
      "properties": {
        "transfers": {
          "items": {
            "properties": {
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "project": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "target_organization": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateEmailInput": {
      "properties": {
        "default": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "avatar_thumb_url": {
          "type": "string"
        },
        "avatar_url": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "customdata": {
          "type": "object"
        },
        "email": {
          "type": "string"
        },
        "emails": {
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "first_name": {
          "type": "string"
        },
        "fraud_score": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "last_login_at": {
          "format": "date-time",
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "max_organizations": {
          "type": "integer"
        },
        "max_projects": {
          "type": "integer"
        },
        "phone_number": {
          "type": "string"
        },
        "short_id": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "two_factor_auth": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserCreateInput": {
      "properties": {
        "avatar": {
          "format": "binary",
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "company_url": {
          "type": "string"
        },
        "customdata": {
          "type": "object"
        },
        "emails": {
          "items": {
            "properties": {
              "address": {
                "type": "string"
              },
              "default": {
                "type": "boolean"
              }
            },
            "required": [
              "address"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "social_accounts": {
          "type": "object"
        },
        "timezone": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "two_factor_auth": {
          "type": "string"
        },
        "verified_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "emails"
      ],
      "type": "object"
    },
    "UserList": {
      "properties": {
        "meta": {
          "properties": {
            "first": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "last": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "next": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "previous": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "users": {
          "items": {
            "properties": {
              "avatar_thumb_url": {
                "type": "string"
              },
              "avatar_url": {
                "type": "string"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "customdata": {
                "type": "object"
              },
              "email": {
                "type": "string"
              },
              "emails": {
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "first_name": {
                "type": "string"
              },
              "fraud_score": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "last_login_at": {
                "format": "date-time",
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "max_organizations": {
                "type": "integer"
              },
              "max_projects": {
                "type": "integer"
              },
              "phone_number": {
                "type": "string"
              },
              "short_id": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "two_factor_auth": {
                "type": "string"
              },
              "updated_at": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UserLite": {
      "properties": {
        "avatar_thumb_url": {
          "description": "Avatar thumbnail URL of the User",
          "type": "string"
        },
        "created_at": {
          "description": "When the user was created",
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "description": "Primary email address of the User",
          "type": "string"
        },
        "first_name": {
          "description": "First name of the User",
          "type": "string"
        },
        "full_name": {
          "description": "Full name of the User",
          "type": "string"
        },
        "href": {
          "description": "API URL uniquely representing the User",
          "type": "string"
        },
        "id": {
          "description": "ID of the User",
          "format": "uuid",
          "type": "string"
        },
        "last_name": {
          "description": "Last name of the User",
          "type": "string"
        },
        "short_id": {
          "description": "Short ID of the User",
          "type": "string"
        },
        "updated_at": {
          "description": "When the user details were last updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "short_id"
      ],
      "type": "object"
    },
    "UserUpdateInput": {
      "properties": {
        "customdata": {
          "type": "object"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualCircuit": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "bill": {
          "default": false,
          "description": "True if the Virtual Circuit is being billed. Currently, only Virtual Circuits that are created with A-side service tokens will be billed. Usage will start the first time the Virtual Circuit becomes active, and will not stop until it is deleted.",
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nni_vlan": {
          "type": "integer"
        },
        "port": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "speed": {
          "description": "integer representing bps speed",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "virtual_network": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "vnid": {
          "type": "integer"
        }
      },
      "required": [
        "bill",
        "description",
        "id",
        "name",
        "nni_vlan",
        "port",
        "project",
        "status",
        "tags",
        "virtual_network",
        "vnid"
      ],
      "type": "object"
    },
    "VirtualCircuitCreateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nni_vlan": {
          "maximum": 4094,
          "minimum": 2,
          "type": "integer"
        },
        "project": {
          "format": "uuid",
          "type": "string"
        },
        "speed": {
          "description": "speed can be passed as integer number representing bps speed or string (e.g. '52m' or '100g' or '4 gbps')",
          "type": "integer"
        },
        "vnid": {
          "description": "A Virtual Network record UUID or the VNID of a Virtual Network in your project (sent as integer).",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualCircuitList": {
      "properties": {
        "virtual_circuits": {
          "items": {},
          "type": "array"
        }
      },
      "type": "object"
    },
    "VirtualCircuitUpdateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "speed": {
          "description": "Speed can be changed only if it is a dedicated connection",
          "type": "string"
        },
        "vnid": {
          "description": "A Virtual Network record UUID or the VNID of a Virtual Network in your project.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetwork": {
      "properties": {
        "assigned_to": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "assigned_to_virtual_circuit": {
          "description": "True if the virtual network is attached to a virtual circuit. False if not.",
          "type": "boolean"
        },
        "description": {
          "format": "uuid",
          "type": "string"
        },
        "facility": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "instances": {
          "description": "A list of instances with ports currently associated to this Virtual Network.",
          "items": {
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "metal_gateway": {
          "properties": {
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "gateway_address": {
              "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "state": {
              "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
              "enum": [
                "ready",
                "active",
                "deleting"
              ],
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "vlan": {
              "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
              "type": "number"
            }
          },
          "type": "object"
        },
        "metro": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "metro_code": {
          "description": "The Metro code of the metro in which this Virtual Network is defined.",
          "type": "string"
        },
        "vxlan": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VirtualNetworkCreateInput": {
      "properties": {
        "description": {
          "type": "string"
        },
        "facility": {
          "description": "The UUID (or facility code) for the Facility in which to create this Virtual network.",
          "type": "string"
        },
        "metro": {
          "description": "The UUID (or metro code) for the Metro in which to create this Virtual Network.",
          "type": "string"
        },
        "project_id": {
          "format": "uuid",
          "type": "string"
        },
        "vxlan": {
          "description": "VLAN ID between 2-3999. Must be unique for the project within the Metro in which this Virtual Network is being created. If no value is specified, the next-available VLAN ID in the range 1000-1999 will be automatically selected.",
          "example": 1099,
          "type": "integer"
        }
      },
      "required": [
        "project_id"
      ],
      "type": "object"
    },
    "VirtualNetworkList": {
      "properties": {
        "virtual_networks": {
          "items": {
            "properties": {
              "assigned_to": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "assigned_to_virtual_circuit": {
                "description": "True if the virtual network is attached to a virtual circuit. False if not.",
                "type": "boolean"
              },
              "description": {
                "format": "uuid",
                "type": "string"
              },
              "facility": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "instances": {
                "description": "A list of instances with ports currently associated to this Virtual Network.",
                "items": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "metal_gateway": {
                "properties": {
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "gateway_address": {
                    "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "state": {
                    "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                    "enum": [
                      "ready",
                      "active",
                      "deleting"
                    ],
                    "type": "string"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "vlan": {
                    "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "metro": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "metro_code": {
                "description": "The Metro code of the metro in which this Virtual Network is defined.",
                "type": "string"
              },
              "vxlan": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Vrf": {
      "properties": {
        "created_by": {
          "properties": {
            "avatar_thumb_url": {
              "type": "string"
            },
            "avatar_url": {
              "type": "string"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "customdata": {
              "type": "object"
            },
            "email": {
              "type": "string"
            },
            "emails": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "first_name": {
              "type": "string"
            },
            "fraud_score": {
              "type": "string"
            },
            "full_name": {
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "last_login_at": {
              "format": "date-time",
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "max_organizations": {
              "type": "integer"
            },
            "max_projects": {
              "type": "integer"
            },
            "phone_number": {
              "type": "string"
            },
            "short_id": {
              "type": "string"
            },
            "timezone": {
              "type": "string"
            },
            "two_factor_auth": {
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "description": {
          "description": "Optional field that can be set to describe the VRF",
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "ip_ranges": {
          "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "local_asn": {
          "description": "A 4-byte ASN associated with the VRF.",
          "format": "int32",
          "type": "integer"
        },
        "metro": {
          "properties": {
            "code": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "properties": {
            "bgp_config": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "customdata": {
              "type": "object"
            },
            "devices": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "invitations": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "max_devices": {
              "type": "object"
            },
            "members": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "memberships": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "network_status": {
              "type": "object"
            },
            "payment_method": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "ssh_keys": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "volumes": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VrfCreateInput": {
      "properties": {
        "description": {
          "type": "string"
        },
        "ip_ranges": {
          "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF IP Reservations, which can then be used for Metal Gateways or Virtual Circuits.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "local_asn": {
          "format": "int32",
          "type": "integer"
        },
        "metro": {
          "description": "The UUID (or metro code) for the Metro in which to create this VRF.",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "project_id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "metro",
        "name",
        "project_id"
      ]
    },
    "VrfIpRangeCreateInput": {
      "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF IP Reservations, which can then be used for Metal Gateways or Virtual Circuits.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "VrfIpRangeList": {
      "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "VrfIpRangeUpdateInput": {
      "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF IP Reservations, which can then be used for Metal Gateways or Virtual Circuits. Adding a new CIDR address to the list will result in the creation of a new IP Range for this VRF. Removal of an existing CIDR address from the list will result in the deletion of an existing IP Range for this VRF. Deleting an IP Range will result in the deletion of any VRF IP Reservations contained within the IP Range, as well as the VRF IP Reservation\\'s associated Metal Gateways or Virtual Circuits. If you do not wish to add or remove IP Ranges, either include the full existing list of IP Ranges in the update request, or do not specify the `ip_ranges` field in the update request. Specifying a value of `[]` will remove all existing IP Ranges from the VRF.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "VrfIpReservation": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "address_family": {
          "type": "integer"
        },
        "cidr": {
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "details": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "metal_gateway": {
          "properties": {
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "gateway_address": {
              "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "state": {
              "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
              "enum": [
                "ready",
                "active",
                "deleting"
              ],
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "vlan": {
              "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
              "type": "number"
            }
          },
          "type": "object"
        },
        "netmask": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "project": {
          "properties": {
            "bgp_config": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "customdata": {
              "type": "object"
            },
            "devices": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "invitations": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "max_devices": {
              "type": "object"
            },
            "members": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "memberships": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "network_status": {
              "type": "object"
            },
            "payment_method": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "ssh_keys": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "volumes": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "example": "vrf",
          "type": "string"
        },
        "vrf": {
          "properties": {
            "created_by": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": {
              "description": "Optional field that can be set to describe the VRF",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "ip_ranges": {
              "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "local_asn": {
              "description": "A 4-byte ASN associated with the VRF.",
              "format": "int32",
              "type": "integer"
            },
            "metro": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "project": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "VrfIpReservationCreateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cidr": {
          "description": "The size of the VRF IP Reservation's subnet",
          "example": 16,
          "type": "integer"
        },
        "customdata": {
          "type": "object"
        },
        "details": {
          "type": "string"
        },
        "network": {
          "description": "The starting address for this VRF IP Reservation's subnet",
          "example": "10.1.2.0",
          "type": "string"
        },
        "type": {
          "description": "Must be set to 'vrf'",
          "example": "vrf",
          "type": "string"
        },
        "vrf_id": {
          "description": "The ID of the VRF in which this VRF IP Reservation is created. The VRF must have an existing IP Range that contains the requested subnet. This field may be aliased as just 'vrf'.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "cidr",
        "network",
        "type",
        "vrf_id"
      ]
    },
    "VrfIpReservationList": {
      "properties": {
        "ip_addresses": {
          "items": {
            "properties": {
              "tags": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "address_family": {
                "type": "integer"
              },
              "cidr": {
                "type": "integer"
              },
              "created_at": {
                "format": "date-time",
                "type": "string"
              },
              "created_by": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "details": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "metal_gateway": {
                "properties": {
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "gateway_address": {
                    "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "state": {
                    "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                    "enum": [
                      "ready",
                      "active",
                      "deleting"
                    ],
                    "type": "string"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "vlan": {
                    "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "netmask": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "project": {
                "properties": {
                  "bgp_config": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "customdata": {
                    "type": "object"
                  },
                  "devices": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "invitations": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "max_devices": {
                    "type": "object"
                  },
                  "members": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "memberships": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "network_status": {
                    "type": "object"
                  },
                  "payment_method": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "ssh_keys": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "volumes": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "example": "vrf",
                "type": "string"
              },
              "vrf": {
                "properties": {
                  "created_by": {
                    "properties": {
                      "avatar_thumb_url": {
                        "type": "string"
                      },
                      "avatar_url": {
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "email": {
                        "type": "string"
                      },
                      "emails": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "fraud_score": {
                        "type": "string"
                      },
                      "full_name": {
                        "type": "string"
                      },
                      "href": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "last_login_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "max_organizations": {
                        "type": "integer"
                      },
                      "max_projects": {
                        "type": "integer"
                      },
                      "phone_number": {
                        "type": "string"
                      },
                      "short_id": {
                        "type": "string"
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "two_factor_auth": {
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "description": {
                    "description": "Optional field that can be set to describe the VRF",
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "ip_ranges": {
                    "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "local_asn": {
                    "description": "A 4-byte ASN associated with the VRF.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "metro": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project": {
                    "properties": {
                      "bgp_config": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customdata": {
                        "type": "object"
                      },
                      "devices": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "invitations": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "max_devices": {
                        "type": "object"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "memberships": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "type": "string"
                      },
                      "network_status": {
                        "type": "object"
                      },
                      "payment_method": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "ssh_keys": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "volumes": {
                        "items": {
                          "properties": {
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "href"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VrfList": {
      "properties": {
        "vrfs": {
          "items": {
            "properties": {
              "created_by": {
                "properties": {
                  "avatar_thumb_url": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "customdata": {
                    "type": "object"
                  },
                  "email": {
                    "type": "string"
                  },
                  "emails": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "fraud_score": {
                    "type": "string"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "href": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "last_login_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "max_organizations": {
                    "type": "integer"
                  },
                  "max_projects": {
                    "type": "integer"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "short_id": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "two_factor_auth": {
                    "type": "string"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": {
                "description": "Optional field that can be set to describe the VRF",
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "ip_ranges": {
                "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "local_asn": {
                "description": "A 4-byte ASN associated with the VRF.",
                "format": "int32",
                "type": "integer"
              },
              "metro": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "project": {
                "properties": {
                  "bgp_config": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "customdata": {
                    "type": "object"
                  },
                  "devices": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "invitations": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "max_devices": {
                    "type": "object"
                  },
                  "members": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "memberships": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "type": "string"
                  },
                  "network_status": {
                    "type": "object"
                  },
                  "payment_method": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "ssh_keys": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "volumes": {
                    "items": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VrfMetalGateway": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "ip_reservation": {
          "properties": {
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "address_family": {
              "type": "integer"
            },
            "cidr": {
              "type": "integer"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "created_by": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "details": {
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "metal_gateway": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "gateway_address": {
                  "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "state": {
                  "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                  "enum": [
                    "ready",
                    "active",
                    "deleting"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "vlan": {
                  "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "netmask": {
              "type": "string"
            },
            "network": {
              "type": "string"
            },
            "project": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "state": {
              "type": "string"
            },
            "type": {
              "example": "vrf",
              "type": "string"
            },
            "vrf": {
              "properties": {
                "created_by": {
                  "properties": {
                    "avatar_thumb_url": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "email": {
                      "type": "string"
                    },
                    "emails": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "fraud_score": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "last_login_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "max_organizations": {
                      "type": "integer"
                    },
                    "max_projects": {
                      "type": "integer"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "short_id": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "two_factor_auth": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "description": "Optional field that can be set to describe the VRF",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "ip_ranges": {
                  "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "local_asn": {
                  "description": "A 4-byte ASN associated with the VRF.",
                  "format": "int32",
                  "type": "integer"
                },
                "metro": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "properties": {
                    "bgp_config": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "customdata": {
                      "type": "object"
                    },
                    "devices": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "invitations": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "max_devices": {
                      "type": "object"
                    },
                    "members": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "memberships": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "type": "string"
                    },
                    "network_status": {
                      "type": "object"
                    },
                    "payment_method": {
                      "properties": {
                        "href": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "ssh_keys": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "volumes": {
                      "items": {
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "project": {
          "properties": {
            "bgp_config": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "customdata": {
              "type": "object"
            },
            "devices": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "invitations": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "max_devices": {
              "type": "object"
            },
            "members": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "memberships": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "network_status": {
              "type": "object"
            },
            "payment_method": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "ssh_keys": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "volumes": {
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "state": {
          "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
          "enum": [
            "ready",
            "active",
            "deleting"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "virtual_network": {
          "properties": {
            "assigned_to": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "assigned_to_virtual_circuit": {
              "description": "True if the virtual network is attached to a virtual circuit. False if not.",
              "type": "boolean"
            },
            "description": {
              "format": "uuid",
              "type": "string"
            },
            "facility": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "instances": {
              "description": "A list of instances with ports currently associated to this Virtual Network.",
              "items": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "metal_gateway": {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "gateway_address": {
                  "description": "The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.",
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "state": {
                  "description": "The current state of the Metal Gateway. 'Ready' indicates the gateway record has been configured, but is currently not active on the network. 'Active' indicates the gateway has been configured on the network. 'Deleting' is a temporary state used to indicate that the gateway is in the process of being un-configured from the network, after which the gateway record will be deleted.",
                  "enum": [
                    "ready",
                    "active",
                    "deleting"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "vlan": {
                  "description": "The VLAN id of the Virtual Network record associated to this Metal Gateway. Example: 1001.",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "metro": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "required": [
                "href"
              ],
              "type": "object"
            },
            "metro_code": {
              "description": "The Metro code of the metro in which this Virtual Network is defined.",
              "type": "string"
            },
            "vxlan": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "vrf": {
          "properties": {
            "created_by": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": {
              "description": "Optional field that can be set to describe the VRF",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "ip_ranges": {
              "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "local_asn": {
              "description": "A 4-byte ASN associated with the VRF.",
              "format": "int32",
              "type": "integer"
            },
            "metro": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "project": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VrfMetalGatewayCreateInput": {
      "properties": {
        "ip_reservation_id": {
          "description": "The UUID an a VRF IP Reservation that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the VRF IP Reservation and the Virtual Network must reside in the same Metro.",
          "format": "uuid",
          "type": "string"
        },
        "virtual_network_id": {
          "description": "THe UUID of a Metro Virtual Network that belongs to the same project as the one in which the Metal Gateway is to be created. Additionally, the Virtual Network and the VRF IP Reservation must reside in the same metro.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "ip_reservation_id",
        "virtual_network_id"
      ]
    },
    "VrfUpdateInput": {
      "properties": {
        "description": {
          "type": "string"
        },
        "ip_ranges": {
          "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"]. IPv4 blocks must be between /8 and /29 in size. IPv6 blocks must be between /56 and /64. A VRF\\'s IP ranges must be defined in order to create VRF IP Reservations, which can then be used for Metal Gateways or Virtual Circuits. Adding a new CIDR address to the list will result in the creation of a new IP Range for this VRF. Removal of an existing CIDR address from the list will result in the deletion of an existing IP Range for this VRF. Deleting an IP Range will result in the deletion of any VRF IP Reservations contained within the IP Range, as well as the VRF IP Reservation\\'s associated Metal Gateways or Virtual Circuits. If you do not wish to add or remove IP Ranges, either include the full existing list of IP Ranges in the update request, or do not specify the `ip_ranges` field in the update request. Specifying a value of `[]` will remove all existing IP Ranges from the VRF.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "local_asn": {
          "description": "The new `local_asn` value for the VRF. This field cannot be updated when there are active Interconnection Virtual Circuits associated to the VRF.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "VrfVirtualCircuit": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customer_ip": {
          "description": "An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.",
          "example": "12.0.0.2",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "md5": {
          "description": "The MD5 password for the BGP peering in plaintext (not a checksum).",
          "type": "string"
        },
        "metal_ip": {
          "description": "An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.",
          "example": "12.0.0.1",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nni_vlan": {
          "type": "integer"
        },
        "peer_asn": {
          "description": "The peer ASN that will be used with the VRF on the Virtual Circuit.",
          "type": "integer"
        },
        "port": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "project": {
          "properties": {
            "href": {
              "type": "string"
            }
          },
          "required": [
            "href"
          ],
          "type": "object"
        },
        "speed": {
          "description": "integer representing bps speed",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "subnet": {
          "description": "The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP.",
          "example": "12.0.0.0/30",
          "type": "string"
        },
        "vrf": {
          "properties": {
            "created_by": {
              "properties": {
                "avatar_thumb_url": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "email": {
                  "type": "string"
                },
                "emails": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "fraud_score": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "last_login_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "max_organizations": {
                  "type": "integer"
                },
                "max_projects": {
                  "type": "integer"
                },
                "phone_number": {
                  "type": "string"
                },
                "short_id": {
                  "type": "string"
                },
                "timezone": {
                  "type": "string"
                },
                "two_factor_auth": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": {
              "description": "Optional field that can be set to describe the VRF",
              "type": "string"
            },
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "ip_ranges": {
              "description": "A list of CIDR network addresses. Like [\"10.0.0.0/16\", \"2001:d78::/56\"].",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "local_asn": {
              "description": "A 4-byte ASN associated with the VRF.",
              "format": "int32",
              "type": "integer"
            },
            "metro": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "project": {
              "properties": {
                "bgp_config": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "customdata": {
                  "type": "object"
                },
                "devices": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "invitations": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "max_devices": {
                  "type": "object"
                },
                "members": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "memberships": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "network_status": {
                  "type": "object"
                },
                "payment_method": {
                  "properties": {
                    "href": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "href"
                  ],
                  "type": "object"
                },
                "ssh_keys": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "volumes": {
                  "items": {
                    "properties": {
                      "href": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VrfVirtualCircuitCreateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customer_ip": {
          "description": "An IP address from the subnet that will be used on the Customer side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Metal IP. By default, the last usable IP address in the subnet will be used.",
          "example": "12.0.0.2",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "md5": {
          "description": "The MD5 password for the BGP peering in plaintext (not a checksum).",
          "type": "string",
          "x-nullable": true
        },
        "metal_ip": {
          "description": "An IP address from the subnet that will be used on the Metal side. This parameter is optional, but if supplied, we will use the other usable IP address in the subnet as the Customer IP. By default, the first usable IP address in the subnet will be used.",
          "example": "12.0.0.1",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nni_vlan": {
          "maximum": 4094,
          "minimum": 2,
          "type": "integer"
        },
        "peer_asn": {
          "description": "The peer ASN that will be used with the VRF on the Virtual Circuit.",
          "type": "integer"
        },
        "project": {
          "format": "uuid",
          "type": "string"
        },
        "speed": {
          "description": "speed can be passed as integer number representing bps speed or string (e.g. '52m' or '100g' or '4 gbps')",
          "type": "integer"
        },
        "subnet": {
          "description": "The /30 or /31 subnet of one of the VRF IP Blocks that will be used with the VRF for the Virtual Circuit. This subnet does not have to be an existing VRF IP reservation, as we will create the VRF IP reservation on creation if it does not exist. The Metal IP and Customer IP must be IPs from this subnet. For /30 subnets, the network and broadcast IPs cannot be used as the Metal or Customer IP. The subnet specified must be contained within an already-defined IP Range for the VRF.",
          "example": "12.0.0.0/30",
          "type": "string"
        },
        "vrf": {
          "description": "The UUID of the VRF that will be associated with the Virtual Circuit.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "nni_vlan",
        "peer_asn",
        "project",
        "subnet",
        "vrf"
      ],
      "type": "object"
    },
    "VrfVirtualCircuitUpdateInput": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "speed": {
          "description": "Speed can be changed only if it is a dedicated connection",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "x_auth_token": {
      "in": "header",
      "name": "X-Auth-Token",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "x_auth_token": []
    }
  ],
  "tags": [
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/users/#api-keys"
      },
      "description": "Hint: Equinix Metal's API can be reached at https://api.equinix.com/metal/v1\n\nMost of the endpoints in the API require authentication. Authenticating is done with an authentication token in the X-Auth-Token header.\n\n```\ncurl -H 'X-Auth-Token: my_authentication_token'\n```\n\nAuthentication tokens are used to identify the user your application is connecting to the API on behalf of. Think of authentication tokens as permanent sessions—the user creates authentication tokens, and your app can use them to connect to the API on their behalf until they delete the token.\n\n",
      "name": "Authentication"
    },
    {
      "description": "The Equinix Metal API uses a few methods to minimize network traffic and bandwidth:\n\n`include`\n\nFor resources that contain collections of other resources, the Equinix Metal API will return links to the other resources by default.\n\n```json\n{\n  ...\n  // Includes \"href\" links if the resource is reachable through the API.\n  \"projects\": [\n    { \"href\": \"/projects/5b590e4f-be96-4400-ae32-c315ee67964d\" },\n    { \"href\": \"/projects/f3f131c8-f302-49ef-8c44-9405022dc6dd\" }\n  ],\n  // Includes \"id\" attributes if not.\n  \"emails\": [\n    { \"id\": \"eb5d8c89-4d15-4c87-859c-5ae190ad5d9a\" },\n    { \"id\": \"c17f77ad-9070-4084-abaa-7538581d9523\" }\n  ]\n  ...\n}\n```\n\nHowever, if you're interested in acting on resources in the projects collection, it doesn't make sense to make a separate API call to retrieve each project. Instead, you can specify which collections you'd like to be included using the include parameter.\n\n```\n/user?include=projects\n```\nwill return\n\n```json\n{\n  ...\n  \"projects\": [\n    {\n      \"href\": \"/projects/c851d3c5-d55d-4b1a-99f1-96fc64768bc3\",\n      \"id\": \"c851d3c5-d55d-4b1a-99f1-96fc64768bc3\",\n      \"name\": \"Project 1\",\n      ...\n    },\n    {\n      \"href\": \"/projects/21f8e88b-bd4e-44ca-b956-4f3f88e6e5f2\",\n      \"id\": \"21f8e88b-bd4e-44ca-b956-4f3f88e6e5f2\",\n      \"name\": \"Project 2\",\n      ...\n    }\n  ],\n  ...\n}\n```\n\nThe `include` parameter is accepted for all `GET` requests on all resources and collections, and should be specified as a comma-separated list.\n\n```\n/user?include=emails,projects,memberships\n```\n\nYou may also include nested associations up to 3 levels deep using dot notation:\n\n```\n/user?include=memberships.projects\n```\n",
      "name": "Common Parameters"
    },
    {
      "description": "Equinix Metal uses conventional HTTP response codes to indicate the success or failure of an API request.\n\nIn general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with Equinix Metal's servers (these are rare).\n\n| Code                               | Summary\n| ---------------------------------- | ------------------------------------------------------\n| 200 OK                             | Everything worked as expected.\n| 201 Create                         | Everything worked as expected, the resource was created.\n| 422 Bad Request                    | The request was unacceptable, often due to missing a required parameter.\n| 401 Unauthorized                   | No valid API key provided.\n| 404 Not Found                      | The requested resource doesn't exist.\n| 500, 502, 503, 504 - Server Errors | Something went wrong on Equinix Metal's end. (These are rare.)\n\nErrors (4xx, 5xx) reported by the API will include a JSON error response.  This response will be structured as one of the following:\n\n```json\n{\"error\": \"the error message\"}\n```\n\nor\n\n```json\n{\"errors\": [\"one error\", \"another error\"}\n```\n\nThe JSON response is not guaranteed so check the HTTP status message. JSON may not be included if the error is reported by an API intermediary, like a loadbalancer service.\n",
      "name": "Errors"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/deploy/batch-deployment/"
      },
      "description": "Manage device batches. See project endpoints to list batches for a particular project. Check out the product docs to learn more about [Batch Deployment](https://metal.equinix.com/developers/docs/deploy/batch-deployment/).\n",
      "name": "Batches"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/bgp/bgp-on-equinix-metal/"
      },
      "description": "Manage BGP configs and sessions. See device endpoints to create and list BGP sessions for a particular device. Check out the product docs to learn more about [Local and Global BGP](https://metal.equinix.com/developers/docs/networking/local-global-bgp/).\n",
      "name": "BGP"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/locations/capacity/"
      },
      "description": "Capacity Management. Check out the product docs to learn more about [Capacity](https://metal.equinix.com/developers/docs/locations/capacity/).\n",
      "name": "Capacity"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/equinix-interconnect/introduction/"
      },
      "description": "Network Interconnections. See Instructions to create Network Interconnections at Check out the product docs to learn more about [Equinix Fabric](https://metal.equinix.com/developers/docs/networking/fabric/).\n",
      "name": "Connections"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/deploy/on-demand/"
      },
      "description": "Device Management. Check out the product docs to learn more about [Server Devices](https://metal.equinix.com/developers/docs/servers/).\n",
      "name": "Devices"
    },
    {
      "description": "Email Management",
      "name": "Emails"
    },
    {
      "description": "Event Management",
      "name": "Events"
    },
    {
      "description": "Facility Management. Check out the product docs to learn more about [Facilities](https://metal.equinix.com/developers/docs/locations/).\n",
      "name": "Facilities"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/bgp/global-bgp/"
      },
      "description": "Global BGP Range Management\n",
      "name": "GlobalBgpRanges"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/deploy/reserved/"
      },
      "description": "Hardware Reservation Management. Check out the product docs to learn more about [Reserved Hardware](https://metal.equinix.com/developers/docs/deploy/reserved/).\n",
      "name": "HardwareReservations"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/locations/maintenance/"
      },
      "description": "Incident Management\n",
      "name": "Incidents"
    },
    {
      "description": "Manage invitations. See project endpoints to create a new invitation. Check out the product docs to learn more about [Invitations](https://metal.equinix.com/developers/docs/accounts/).\n",
      "name": "Invitations"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/networking/"
      },
      "description": "Manage IP addresses. See device and project endpoints to list and create IP assignments for a particular project or device. Check out the product docs to learn more about [the basic networking features](https://metal.equinix.com/developers/docs/networking/standard-ips/).\n",
      "name": "IPAddresses"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/operating-systems/licensed/"
      },
      "description": "Manage licenses. See project endpoints to list and create licenses for a particular project.\n",
      "name": "Licenses"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/projects/#inviting-a-user-to-a-project"
      },
      "description": "Membership Management (Project). Check out the product docs to learn more about [Membership](https://metal.equinix.com/developers/docs/accounts/).\n",
      "name": "Memberships"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/networking/metal-gateway/"
      },
      "description": "Metal Gateway Management.Check out the product docs to learn more about [Metal Gateways](https://metal.equinix.com/developers/docs/networking/metal-gateway/).\n",
      "name": "MetalGateways"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/locations/metros/"
      },
      "description": "Metro Management. Check out the product docs to learn more about [Metros](https://metal.equinix.com/developers/docs/locations/metros/).",
      "name": "Metros"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/operating-systems/supported/"
      },
      "description": "Operating System Management. Check out the product docs to learn more about [Operating Systems choices](https://metal.equinix.com/developers/docs/operating-systems/).\n",
      "name": "OperatingSystems"
    },
    {
      "description": "Organizations Management. Check out the product docs to learn more about [Organizations](https://metal.equinix.com/developers/docs/accounts/).",
      "name": "Organizations"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/"
      },
      "description": "OTP Management. Check out the product docs to learn more about [OTP](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).\n",
      "name": "OTPs"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/users/#security-settings"
      },
      "description": "Password Reset Token Management\n",
      "name": "PasswordResetTokens"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/billing/payment-methods/"
      },
      "description": "Payment Method Management\n",
      "name": "PaymentMethods"
    },
    {
      "description": "Plan Management (Device). Check out the product docs to learn more about [Device Plans](https://metal.equinix.com/developers/docs/servers/).\n",
      "name": "Plans"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/layer2-networking/overview/"
      },
      "description": "Port ManagementCheck out the product docs to learn more about [Port configurations](https://metal.equinix.com/developers/docs/layer2-networking/overview/).\n",
      "name": "Ports"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/projects/"
      },
      "description": "Project Management. Check out the product docs to learn more about [Projects](https://metal.equinix.com/developers/docs/accounts/projects/).\n",
      "name": "Projects"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/deploy/reserved/"
      },
      "description": "Self Service Reservations\n",
      "name": "SelfServiceReservations"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/deploy/spot-market/"
      },
      "description": "Spot Market Pricing and Requests Management. Check out the product docs to learn more about [Spot Market features](https://metal.equinix.com/developers/docs/deploy/spot-market/).\n",
      "name": "SpotMarket"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/ssh-keys/"
      },
      "description": "Manage SSH keys. See project endpoints to list and create project-level SSH keys.\n",
      "name": "SSHKeys"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/support/"
      },
      "description": "Support request\n",
      "name": "SupportRequest"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/projects/#transferring-a-project"
      },
      "description": "Project Transfer Requests Management\n",
      "name": "TransferRequests"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/"
      },
      "description": "Two Factor Authentication Management. Check out the product docs to learn more about [2FA](https://metal.equinix.com/developers/docs/accounts/two-factor-authentication/).\n",
      "name": "TwoFactorAuth"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/billing/checking-usage/"
      },
      "description": "Usage Management",
      "name": "Usages"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/server-metadata/user-data/"
      },
      "description": "Userdata Management\n",
      "name": "Userdata"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/users/"
      },
      "description": "User Management\n",
      "name": "Users"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/accounts/organizations/#managing-team-members"
      },
      "description": "User Verification Token Management\n",
      "name": "UserVerificationTokens"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/networking/layer2/"
      },
      "description": "Manage virtual networks (VLANs). See project endpoints to list and create virtual networks. Check out the product docs to learn more about [VLANs](https://metal.equinix.com/developers/docs/networking/layer2/).\n",
      "name": "VLANs"
    },
    {
      "externalDocs": {
        "url": "https://metal.equinix.com/developers/docs/resilience-recovery/elastic-block-storage/"
      },
      "description": "Volume Management (Block Storage). Notice: Block storage support will be deprecated soon. Please check here: https://metal.equinix.com/developers/docs/resilience-recovery/elastic-block-storage/ for more details.\n",
      "name": "Volumes"
    },
    {
      "description": "VRF Management. A VRF is a project-scoped virtual router resource that defines a collection of customer-manager IP blocks that can be used in BGP peering on one or more virtual networks. Metal Gateways and Interconnection Virtual Circuits can take advantage of VRFs to enable Layer 3 routing with bespoke network ranges. Notice: VRFs are a test feature currently under active development, and only available to certain users. Please contact Customer Success for more information.\n",
      "name": "VRFs"
    }
  ],
  "x-components": {
    "parameters": {
      "Exclude": {
        "description": "Nested attributes to exclude. Excluded objects will return only the href\nattribute. Attribute names can be dotted (up to 3 levels) to exclude deeply\nnested objects.",
        "explode": false,
        "in": "query",
        "name": "exclude",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "Include": {
        "description": "Nested attributes to include. Included objects will return their full\nattributes. Attribute names can be dotted (up to 3 levels) to included deeply\nnested objects.",
        "explode": false,
        "in": "query",
        "name": "include",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "form"
      },
      "Page": {
        "description": "Page to return",
        "in": "query",
        "name": "page",
        "schema": {
          "default": 1,
          "format": "int32",
          "maximum": 100000,
          "minimum": 1,
          "type": "integer"
        }
      },
      "PerPage": {
        "description": "Items returned per page",
        "in": "query",
        "name": "per_page",
        "schema": {
          "default": 10,
          "format": "int32",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        }
      }
    },
    "requestBodies": {
      "InterconnectionCreateInput": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_email": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "metro": {
                  "description": "A Metro ID or code.",
                  "type": "string"
                },
                "mode": {
                  "description": "The mode of the connection (only relevant to dedicated connections). Shared connections won't have this field. Can be either 'standard' or 'tunnel'.\n  The default mode of a dedicated connection is 'standard'. The mode can only be changed when there are no associated virtual circuits on the connection.\n  In tunnel mode, an 802.1q tunnel is added to a port to send/receive double tagged packets from server instances.",
                  "enum": [
                    "standard",
                    "tunnel"
                  ],
                  "example": "standard",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "project": {
                  "type": "string"
                },
                "redundancy": {
                  "description": "Either 'primary' or 'redundant'.",
                  "type": "string"
                },
                "service_token_type": {
                  "description": "Can only be set to 'a_side' to create a shared connection with an A-side Fabric service token. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
                  "enum": [
                    "a_side"
                  ],
                  "example": "a_side",
                  "type": "string"
                },
                "speed": {
                  "description": "A connection speed, in bps, mbps, or gbps. Ex: '100000000' or '100 mbps'.",
                  "type": "string"
                },
                "type": {
                  "description": "Either 'shared' or 'dedicated'.",
                  "type": "string"
                },
                "vlans": {
                  "description": "A list of one or two metro-based VLANs that will be set on the primary and/or secondary (if redundant) virtual circuits respectively when creating a shared connection. VLANs can also be set after the connection is created, but are required to activate the connection. This parameter is included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.",
                  "example": [
                    1000,
                    1001
                  ],
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "name",
                "metro",
                "type",
                "redundancy"
              ],
              "type": "object"
            }
          }
        },
        "description": "Connection details",
        "required": true
      },
      "InvitationInput": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "invitee": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "projects_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "invitee"
              ],
              "type": "object"
            }
          }
        },
        "description": "Invitation to create",
        "required": true
      },
      "PortAssignInput": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "vnid": {
                  "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself.\n",
                  "example": "1001",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Virtual Network ID. May be the UUID of the Virtual Network record, or the VLAN value itself (ex: '1001').",
        "required": true
      },
      "SSHKeyCreateInput": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "instances_ids": {
                  "description": "List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging\n      to entity will be included",
                  "items": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": "array"
                },
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "ssh key to create",
        "required": true
      }
    }
  }
}
