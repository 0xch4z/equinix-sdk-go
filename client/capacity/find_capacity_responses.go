// Code generated by go-swagger; DO NOT EDIT.

package capacity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindCapacityReader is a Reader for the FindCapacity structure.
type FindCapacityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindCapacityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindCapacityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindCapacityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindCapacityOK creates a FindCapacityOK with default headers values
func NewFindCapacityOK() *FindCapacityOK {
	return &FindCapacityOK{}
}

/* FindCapacityOK describes a response with status code 200, with default header values.

ok
*/
type FindCapacityOK struct {
	Payload *types.CapacityList
}

func (o *FindCapacityOK) Error() string {
	return fmt.Sprintf("[GET /capacity][%d] findCapacityOK  %+v", 200, o.Payload)
}
func (o *FindCapacityOK) GetPayload() *types.CapacityList {
	return o.Payload
}

func (o *FindCapacityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.CapacityList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindCapacityUnauthorized creates a FindCapacityUnauthorized with default headers values
func NewFindCapacityUnauthorized() *FindCapacityUnauthorized {
	return &FindCapacityUnauthorized{}
}

/* FindCapacityUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindCapacityUnauthorized struct {
}

func (o *FindCapacityUnauthorized) Error() string {
	return fmt.Sprintf("[GET /capacity][%d] findCapacityUnauthorized ", 401)
}

func (o *FindCapacityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
