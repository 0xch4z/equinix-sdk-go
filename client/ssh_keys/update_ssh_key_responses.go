// Code generated by go-swagger; DO NOT EDIT.

package ssh_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// UpdateSSHKeyReader is a Reader for the UpdateSSHKey structure.
type UpdateSSHKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSSHKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSSHKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateSSHKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSSHKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSSHKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateSSHKeyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSSHKeyOK creates a UpdateSSHKeyOK with default headers values
func NewUpdateSSHKeyOK() *UpdateSSHKeyOK {
	return &UpdateSSHKeyOK{}
}

/*UpdateSSHKeyOK handles this case with default header values.

ok
*/
type UpdateSSHKeyOK struct {
	Payload *types.SSHKey
}

func (o *UpdateSSHKeyOK) Error() string {
	return fmt.Sprintf("[PUT /ssh-keys/{id}][%d] updateSshKeyOK  %+v", 200, o.Payload)
}

func (o *UpdateSSHKeyOK) GetPayload() *types.SSHKey {
	return o.Payload
}

func (o *UpdateSSHKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.SSHKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSSHKeyUnauthorized creates a UpdateSSHKeyUnauthorized with default headers values
func NewUpdateSSHKeyUnauthorized() *UpdateSSHKeyUnauthorized {
	return &UpdateSSHKeyUnauthorized{}
}

/*UpdateSSHKeyUnauthorized handles this case with default header values.

unauthorized
*/
type UpdateSSHKeyUnauthorized struct {
}

func (o *UpdateSSHKeyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /ssh-keys/{id}][%d] updateSshKeyUnauthorized ", 401)
}

func (o *UpdateSSHKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSHKeyForbidden creates a UpdateSSHKeyForbidden with default headers values
func NewUpdateSSHKeyForbidden() *UpdateSSHKeyForbidden {
	return &UpdateSSHKeyForbidden{}
}

/*UpdateSSHKeyForbidden handles this case with default header values.

forbidden
*/
type UpdateSSHKeyForbidden struct {
}

func (o *UpdateSSHKeyForbidden) Error() string {
	return fmt.Sprintf("[PUT /ssh-keys/{id}][%d] updateSshKeyForbidden ", 403)
}

func (o *UpdateSSHKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSHKeyNotFound creates a UpdateSSHKeyNotFound with default headers values
func NewUpdateSSHKeyNotFound() *UpdateSSHKeyNotFound {
	return &UpdateSSHKeyNotFound{}
}

/*UpdateSSHKeyNotFound handles this case with default header values.

not found
*/
type UpdateSSHKeyNotFound struct {
}

func (o *UpdateSSHKeyNotFound) Error() string {
	return fmt.Sprintf("[PUT /ssh-keys/{id}][%d] updateSshKeyNotFound ", 404)
}

func (o *UpdateSSHKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSSHKeyUnprocessableEntity creates a UpdateSSHKeyUnprocessableEntity with default headers values
func NewUpdateSSHKeyUnprocessableEntity() *UpdateSSHKeyUnprocessableEntity {
	return &UpdateSSHKeyUnprocessableEntity{}
}

/*UpdateSSHKeyUnprocessableEntity handles this case with default header values.

unprocessable entity
*/
type UpdateSSHKeyUnprocessableEntity struct {
}

func (o *UpdateSSHKeyUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /ssh-keys/{id}][%d] updateSshKeyUnprocessableEntity ", 422)
}

func (o *UpdateSSHKeyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
