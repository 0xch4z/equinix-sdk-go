// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindOrganizationByIDReader is a Reader for the FindOrganizationByID structure.
type FindOrganizationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindOrganizationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindOrganizationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindOrganizationByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindOrganizationByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindOrganizationByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindOrganizationByIDOK creates a FindOrganizationByIDOK with default headers values
func NewFindOrganizationByIDOK() *FindOrganizationByIDOK {
	return &FindOrganizationByIDOK{}
}

/* FindOrganizationByIDOK describes a response with status code 200, with default header values.

ok
*/
type FindOrganizationByIDOK struct {
	Payload *types.Organization
}

func (o *FindOrganizationByIDOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}][%d] findOrganizationByIdOK  %+v", 200, o.Payload)
}
func (o *FindOrganizationByIDOK) GetPayload() *types.Organization {
	return o.Payload
}

func (o *FindOrganizationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationByIDUnauthorized creates a FindOrganizationByIDUnauthorized with default headers values
func NewFindOrganizationByIDUnauthorized() *FindOrganizationByIDUnauthorized {
	return &FindOrganizationByIDUnauthorized{}
}

/* FindOrganizationByIDUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindOrganizationByIDUnauthorized struct {
}

func (o *FindOrganizationByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}][%d] findOrganizationByIdUnauthorized ", 401)
}

func (o *FindOrganizationByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindOrganizationByIDForbidden creates a FindOrganizationByIDForbidden with default headers values
func NewFindOrganizationByIDForbidden() *FindOrganizationByIDForbidden {
	return &FindOrganizationByIDForbidden{}
}

/* FindOrganizationByIDForbidden describes a response with status code 403, with default header values.

forbidden
*/
type FindOrganizationByIDForbidden struct {
}

func (o *FindOrganizationByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}][%d] findOrganizationByIdForbidden ", 403)
}

func (o *FindOrganizationByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindOrganizationByIDNotFound creates a FindOrganizationByIDNotFound with default headers values
func NewFindOrganizationByIDNotFound() *FindOrganizationByIDNotFound {
	return &FindOrganizationByIDNotFound{}
}

/* FindOrganizationByIDNotFound describes a response with status code 404, with default header values.

not found
*/
type FindOrganizationByIDNotFound struct {
}

func (o *FindOrganizationByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}][%d] findOrganizationByIdNotFound ", 404)
}

func (o *FindOrganizationByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
