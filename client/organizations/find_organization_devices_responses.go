// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindOrganizationDevicesReader is a Reader for the FindOrganizationDevices structure.
type FindOrganizationDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindOrganizationDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindOrganizationDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindOrganizationDevicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindOrganizationDevicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindOrganizationDevicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindOrganizationDevicesOK creates a FindOrganizationDevicesOK with default headers values
func NewFindOrganizationDevicesOK() *FindOrganizationDevicesOK {
	return &FindOrganizationDevicesOK{}
}

/*FindOrganizationDevicesOK handles this case with default header values.

ok
*/
type FindOrganizationDevicesOK struct {
	Payload *types.DeviceList
}

func (o *FindOrganizationDevicesOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}/devices][%d] findOrganizationDevicesOK  %+v", 200, o.Payload)
}

func (o *FindOrganizationDevicesOK) GetPayload() *types.DeviceList {
	return o.Payload
}

func (o *FindOrganizationDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.DeviceList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindOrganizationDevicesUnauthorized creates a FindOrganizationDevicesUnauthorized with default headers values
func NewFindOrganizationDevicesUnauthorized() *FindOrganizationDevicesUnauthorized {
	return &FindOrganizationDevicesUnauthorized{}
}

/*FindOrganizationDevicesUnauthorized handles this case with default header values.

unauthorized
*/
type FindOrganizationDevicesUnauthorized struct {
}

func (o *FindOrganizationDevicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}/devices][%d] findOrganizationDevicesUnauthorized ", 401)
}

func (o *FindOrganizationDevicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindOrganizationDevicesForbidden creates a FindOrganizationDevicesForbidden with default headers values
func NewFindOrganizationDevicesForbidden() *FindOrganizationDevicesForbidden {
	return &FindOrganizationDevicesForbidden{}
}

/*FindOrganizationDevicesForbidden handles this case with default header values.

forbidden
*/
type FindOrganizationDevicesForbidden struct {
}

func (o *FindOrganizationDevicesForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}/devices][%d] findOrganizationDevicesForbidden ", 403)
}

func (o *FindOrganizationDevicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindOrganizationDevicesNotFound creates a FindOrganizationDevicesNotFound with default headers values
func NewFindOrganizationDevicesNotFound() *FindOrganizationDevicesNotFound {
	return &FindOrganizationDevicesNotFound{}
}

/*FindOrganizationDevicesNotFound handles this case with default header values.

not found
*/
type FindOrganizationDevicesNotFound struct {
}

func (o *FindOrganizationDevicesNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{id}/devices][%d] findOrganizationDevicesNotFound ", 404)
}

func (o *FindOrganizationDevicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
