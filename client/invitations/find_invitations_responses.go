// Code generated by go-swagger; DO NOT EDIT.

package invitations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindInvitationsReader is a Reader for the FindInvitations structure.
type FindInvitationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindInvitationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindInvitationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindInvitationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindInvitationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindInvitationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindInvitationsOK creates a FindInvitationsOK with default headers values
func NewFindInvitationsOK() *FindInvitationsOK {
	return &FindInvitationsOK{}
}

/* FindInvitationsOK describes a response with status code 200, with default header values.

ok
*/
type FindInvitationsOK struct {
	Payload *types.InvitationList
}

func (o *FindInvitationsOK) Error() string {
	return fmt.Sprintf("[GET /invitations][%d] findInvitationsOK  %+v", 200, o.Payload)
}
func (o *FindInvitationsOK) GetPayload() *types.InvitationList {
	return o.Payload
}

func (o *FindInvitationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.InvitationList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindInvitationsUnauthorized creates a FindInvitationsUnauthorized with default headers values
func NewFindInvitationsUnauthorized() *FindInvitationsUnauthorized {
	return &FindInvitationsUnauthorized{}
}

/* FindInvitationsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindInvitationsUnauthorized struct {
}

func (o *FindInvitationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /invitations][%d] findInvitationsUnauthorized ", 401)
}

func (o *FindInvitationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindInvitationsForbidden creates a FindInvitationsForbidden with default headers values
func NewFindInvitationsForbidden() *FindInvitationsForbidden {
	return &FindInvitationsForbidden{}
}

/* FindInvitationsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type FindInvitationsForbidden struct {
}

func (o *FindInvitationsForbidden) Error() string {
	return fmt.Sprintf("[GET /invitations][%d] findInvitationsForbidden ", 403)
}

func (o *FindInvitationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindInvitationsNotFound creates a FindInvitationsNotFound with default headers values
func NewFindInvitationsNotFound() *FindInvitationsNotFound {
	return &FindInvitationsNotFound{}
}

/* FindInvitationsNotFound describes a response with status code 404, with default header values.

not found
*/
type FindInvitationsNotFound struct {
}

func (o *FindInvitationsNotFound) Error() string {
	return fmt.Sprintf("[GET /invitations][%d] findInvitationsNotFound ", 404)
}

func (o *FindInvitationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
