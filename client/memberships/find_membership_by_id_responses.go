// Code generated by go-swagger; DO NOT EDIT.

package memberships

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindMembershipByIDReader is a Reader for the FindMembershipByID structure.
type FindMembershipByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindMembershipByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindMembershipByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindMembershipByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindMembershipByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindMembershipByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindMembershipByIDOK creates a FindMembershipByIDOK with default headers values
func NewFindMembershipByIDOK() *FindMembershipByIDOK {
	return &FindMembershipByIDOK{}
}

/* FindMembershipByIDOK describes a response with status code 200, with default header values.

ok
*/
type FindMembershipByIDOK struct {
	Payload *types.Membership
}

func (o *FindMembershipByIDOK) Error() string {
	return fmt.Sprintf("[GET /memberships/{id}][%d] findMembershipByIdOK  %+v", 200, o.Payload)
}
func (o *FindMembershipByIDOK) GetPayload() *types.Membership {
	return o.Payload
}

func (o *FindMembershipByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.Membership)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindMembershipByIDUnauthorized creates a FindMembershipByIDUnauthorized with default headers values
func NewFindMembershipByIDUnauthorized() *FindMembershipByIDUnauthorized {
	return &FindMembershipByIDUnauthorized{}
}

/* FindMembershipByIDUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindMembershipByIDUnauthorized struct {
}

func (o *FindMembershipByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /memberships/{id}][%d] findMembershipByIdUnauthorized ", 401)
}

func (o *FindMembershipByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindMembershipByIDForbidden creates a FindMembershipByIDForbidden with default headers values
func NewFindMembershipByIDForbidden() *FindMembershipByIDForbidden {
	return &FindMembershipByIDForbidden{}
}

/* FindMembershipByIDForbidden describes a response with status code 403, with default header values.

forbidden
*/
type FindMembershipByIDForbidden struct {
}

func (o *FindMembershipByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /memberships/{id}][%d] findMembershipByIdForbidden ", 403)
}

func (o *FindMembershipByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindMembershipByIDNotFound creates a FindMembershipByIDNotFound with default headers values
func NewFindMembershipByIDNotFound() *FindMembershipByIDNotFound {
	return &FindMembershipByIDNotFound{}
}

/* FindMembershipByIDNotFound describes a response with status code 404, with default header values.

not found
*/
type FindMembershipByIDNotFound struct {
}

func (o *FindMembershipByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /memberships/{id}][%d] findMembershipByIdNotFound ", 404)
}

func (o *FindMembershipByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
