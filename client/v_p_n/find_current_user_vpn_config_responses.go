// Code generated by go-swagger; DO NOT EDIT.

package v_p_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/models"
)

// FindCurrentUserVpnConfigReader is a Reader for the FindCurrentUserVpnConfig structure.
type FindCurrentUserVpnConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindCurrentUserVpnConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindCurrentUserVpnConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindCurrentUserVpnConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewFindCurrentUserVpnConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindCurrentUserVpnConfigOK creates a FindCurrentUserVpnConfigOK with default headers values
func NewFindCurrentUserVpnConfigOK() *FindCurrentUserVpnConfigOK {
	return &FindCurrentUserVpnConfigOK{}
}

/*FindCurrentUserVpnConfigOK handles this case with default header values.

ok
*/
type FindCurrentUserVpnConfigOK struct {
	Payload *models.VPNConfig
}

func (o *FindCurrentUserVpnConfigOK) Error() string {
	return fmt.Sprintf("[GET /user/vpn][%d] findCurrentUserVpnConfigOK  %+v", 200, o.Payload)
}

func (o *FindCurrentUserVpnConfigOK) GetPayload() *models.VPNConfig {
	return o.Payload
}

func (o *FindCurrentUserVpnConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VPNConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindCurrentUserVpnConfigUnauthorized creates a FindCurrentUserVpnConfigUnauthorized with default headers values
func NewFindCurrentUserVpnConfigUnauthorized() *FindCurrentUserVpnConfigUnauthorized {
	return &FindCurrentUserVpnConfigUnauthorized{}
}

/*FindCurrentUserVpnConfigUnauthorized handles this case with default header values.

unauthorized
*/
type FindCurrentUserVpnConfigUnauthorized struct {
}

func (o *FindCurrentUserVpnConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/vpn][%d] findCurrentUserVpnConfigUnauthorized ", 401)
}

func (o *FindCurrentUserVpnConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindCurrentUserVpnConfigUnprocessableEntity creates a FindCurrentUserVpnConfigUnprocessableEntity with default headers values
func NewFindCurrentUserVpnConfigUnprocessableEntity() *FindCurrentUserVpnConfigUnprocessableEntity {
	return &FindCurrentUserVpnConfigUnprocessableEntity{}
}

/*FindCurrentUserVpnConfigUnprocessableEntity handles this case with default header values.

unprocessable entity
*/
type FindCurrentUserVpnConfigUnprocessableEntity struct {
}

func (o *FindCurrentUserVpnConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /user/vpn][%d] findCurrentUserVpnConfigUnprocessableEntity ", 422)
}

func (o *FindCurrentUserVpnConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
