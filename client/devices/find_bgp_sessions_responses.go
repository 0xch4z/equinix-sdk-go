// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindBGPSessionsReader is a Reader for the FindBGPSessions structure.
type FindBGPSessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindBGPSessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindBGPSessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindBGPSessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindBGPSessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindBGPSessionsOK creates a FindBGPSessionsOK with default headers values
func NewFindBGPSessionsOK() *FindBGPSessionsOK {
	return &FindBGPSessionsOK{}
}

/* FindBGPSessionsOK describes a response with status code 200, with default header values.

ok
*/
type FindBGPSessionsOK struct {
	Payload *types.BGPSessionList
}

func (o *FindBGPSessionsOK) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/bgp/sessions][%d] findBgpSessionsOK  %+v", 200, o.Payload)
}
func (o *FindBGPSessionsOK) GetPayload() *types.BGPSessionList {
	return o.Payload
}

func (o *FindBGPSessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.BGPSessionList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindBGPSessionsUnauthorized creates a FindBGPSessionsUnauthorized with default headers values
func NewFindBGPSessionsUnauthorized() *FindBGPSessionsUnauthorized {
	return &FindBGPSessionsUnauthorized{}
}

/* FindBGPSessionsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindBGPSessionsUnauthorized struct {
}

func (o *FindBGPSessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/bgp/sessions][%d] findBgpSessionsUnauthorized ", 401)
}

func (o *FindBGPSessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindBGPSessionsForbidden creates a FindBGPSessionsForbidden with default headers values
func NewFindBGPSessionsForbidden() *FindBGPSessionsForbidden {
	return &FindBGPSessionsForbidden{}
}

/* FindBGPSessionsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type FindBGPSessionsForbidden struct {
}

func (o *FindBGPSessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /devices/{id}/bgp/sessions][%d] findBgpSessionsForbidden ", 403)
}

func (o *FindBGPSessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
