// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PerformActionReader is a Reader for the PerformAction structure.
type PerformActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPerformActionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPerformActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPerformActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPerformActionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPerformActionAccepted creates a PerformActionAccepted with default headers values
func NewPerformActionAccepted() *PerformActionAccepted {
	return &PerformActionAccepted{}
}

/* PerformActionAccepted describes a response with status code 202, with default header values.

accepted
*/
type PerformActionAccepted struct {
}

func (o *PerformActionAccepted) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/actions][%d] performActionAccepted ", 202)
}

func (o *PerformActionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPerformActionUnauthorized creates a PerformActionUnauthorized with default headers values
func NewPerformActionUnauthorized() *PerformActionUnauthorized {
	return &PerformActionUnauthorized{}
}

/* PerformActionUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type PerformActionUnauthorized struct {
}

func (o *PerformActionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/actions][%d] performActionUnauthorized ", 401)
}

func (o *PerformActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPerformActionNotFound creates a PerformActionNotFound with default headers values
func NewPerformActionNotFound() *PerformActionNotFound {
	return &PerformActionNotFound{}
}

/* PerformActionNotFound describes a response with status code 404, with default header values.

not found
*/
type PerformActionNotFound struct {
}

func (o *PerformActionNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/actions][%d] performActionNotFound ", 404)
}

func (o *PerformActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPerformActionUnprocessableEntity creates a PerformActionUnprocessableEntity with default headers values
func NewPerformActionUnprocessableEntity() *PerformActionUnprocessableEntity {
	return &PerformActionUnprocessableEntity{}
}

/* PerformActionUnprocessableEntity describes a response with status code 422, with default header values.

unprocessable entity
*/
type PerformActionUnprocessableEntity struct {
}

func (o *PerformActionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /devices/{id}/actions][%d] performActionUnprocessableEntity ", 422)
}

func (o *PerformActionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
