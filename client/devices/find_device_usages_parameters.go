// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFindDeviceUsagesParams creates a new FindDeviceUsagesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFindDeviceUsagesParams() *FindDeviceUsagesParams {
	return &FindDeviceUsagesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFindDeviceUsagesParamsWithTimeout creates a new FindDeviceUsagesParams object
// with the ability to set a timeout on a request.
func NewFindDeviceUsagesParamsWithTimeout(timeout time.Duration) *FindDeviceUsagesParams {
	return &FindDeviceUsagesParams{
		timeout: timeout,
	}
}

// NewFindDeviceUsagesParamsWithContext creates a new FindDeviceUsagesParams object
// with the ability to set a context for a request.
func NewFindDeviceUsagesParamsWithContext(ctx context.Context) *FindDeviceUsagesParams {
	return &FindDeviceUsagesParams{
		Context: ctx,
	}
}

// NewFindDeviceUsagesParamsWithHTTPClient creates a new FindDeviceUsagesParams object
// with the ability to set a custom HTTPClient for a request.
func NewFindDeviceUsagesParamsWithHTTPClient(client *http.Client) *FindDeviceUsagesParams {
	return &FindDeviceUsagesParams{
		HTTPClient: client,
	}
}

/* FindDeviceUsagesParams contains all the parameters to send to the API endpoint
   for the find device usages operation.

   Typically these are written to a http.Request.
*/
type FindDeviceUsagesParams struct {

	/* CreatedAfter.

	   Filter usages created after this date

	   Format: datetime
	*/
	CreatedAfter *strfmt.DateTime

	/* CreatedBefore.

	   Filter usages created before this date

	   Format: datetime
	*/
	CreatedBefore *strfmt.DateTime

	/* ID.

	   Device UUID

	   Format: uuid
	*/
	ID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the find device usages params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FindDeviceUsagesParams) WithDefaults() *FindDeviceUsagesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the find device usages params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FindDeviceUsagesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the find device usages params
func (o *FindDeviceUsagesParams) WithTimeout(timeout time.Duration) *FindDeviceUsagesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the find device usages params
func (o *FindDeviceUsagesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the find device usages params
func (o *FindDeviceUsagesParams) WithContext(ctx context.Context) *FindDeviceUsagesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the find device usages params
func (o *FindDeviceUsagesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the find device usages params
func (o *FindDeviceUsagesParams) WithHTTPClient(client *http.Client) *FindDeviceUsagesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the find device usages params
func (o *FindDeviceUsagesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreatedAfter adds the createdAfter to the find device usages params
func (o *FindDeviceUsagesParams) WithCreatedAfter(createdAfter *strfmt.DateTime) *FindDeviceUsagesParams {
	o.SetCreatedAfter(createdAfter)
	return o
}

// SetCreatedAfter adds the createdAfter to the find device usages params
func (o *FindDeviceUsagesParams) SetCreatedAfter(createdAfter *strfmt.DateTime) {
	o.CreatedAfter = createdAfter
}

// WithCreatedBefore adds the createdBefore to the find device usages params
func (o *FindDeviceUsagesParams) WithCreatedBefore(createdBefore *strfmt.DateTime) *FindDeviceUsagesParams {
	o.SetCreatedBefore(createdBefore)
	return o
}

// SetCreatedBefore adds the createdBefore to the find device usages params
func (o *FindDeviceUsagesParams) SetCreatedBefore(createdBefore *strfmt.DateTime) {
	o.CreatedBefore = createdBefore
}

// WithID adds the id to the find device usages params
func (o *FindDeviceUsagesParams) WithID(id strfmt.UUID) *FindDeviceUsagesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the find device usages params
func (o *FindDeviceUsagesParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *FindDeviceUsagesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CreatedAfter != nil {

		// query param created[after]
		var qrCreatedAfter strfmt.DateTime

		if o.CreatedAfter != nil {
			qrCreatedAfter = *o.CreatedAfter
		}
		qCreatedAfter := qrCreatedAfter.String()
		if qCreatedAfter != "" {

			if err := r.SetQueryParam("created[after]", qCreatedAfter); err != nil {
				return err
			}
		}
	}

	if o.CreatedBefore != nil {

		// query param created[before]
		var qrCreatedBefore strfmt.DateTime

		if o.CreatedBefore != nil {
			qrCreatedBefore = *o.CreatedBefore
		}
		qCreatedBefore := qrCreatedBefore.String()
		if qCreatedBefore != "" {

			if err := r.SetQueryParam("created[before]", qCreatedBefore); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
