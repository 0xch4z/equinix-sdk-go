// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFindProjectUsageParams creates a new FindProjectUsageParams object
// with the default values initialized.
func NewFindProjectUsageParams() *FindProjectUsageParams {
	var ()
	return &FindProjectUsageParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFindProjectUsageParamsWithTimeout creates a new FindProjectUsageParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFindProjectUsageParamsWithTimeout(timeout time.Duration) *FindProjectUsageParams {
	var ()
	return &FindProjectUsageParams{

		timeout: timeout,
	}
}

// NewFindProjectUsageParamsWithContext creates a new FindProjectUsageParams object
// with the default values initialized, and the ability to set a context for a request
func NewFindProjectUsageParamsWithContext(ctx context.Context) *FindProjectUsageParams {
	var ()
	return &FindProjectUsageParams{

		Context: ctx,
	}
}

// NewFindProjectUsageParamsWithHTTPClient creates a new FindProjectUsageParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewFindProjectUsageParamsWithHTTPClient(client *http.Client) *FindProjectUsageParams {
	var ()
	return &FindProjectUsageParams{
		HTTPClient: client,
	}
}

/*FindProjectUsageParams contains all the parameters to send to the API endpoint
for the find project usage operation typically these are written to a http.Request
*/
type FindProjectUsageParams struct {

	/*CreatedAfter
	  Filter usages created after this date

	*/
	CreatedAfter *strfmt.DateTime
	/*CreatedBefore
	  Filter usages created before this date

	*/
	CreatedBefore *strfmt.DateTime
	/*ID
	  Project UUID

	*/
	ID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the find project usage params
func (o *FindProjectUsageParams) WithTimeout(timeout time.Duration) *FindProjectUsageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the find project usage params
func (o *FindProjectUsageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the find project usage params
func (o *FindProjectUsageParams) WithContext(ctx context.Context) *FindProjectUsageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the find project usage params
func (o *FindProjectUsageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the find project usage params
func (o *FindProjectUsageParams) WithHTTPClient(client *http.Client) *FindProjectUsageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the find project usage params
func (o *FindProjectUsageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreatedAfter adds the createdAfter to the find project usage params
func (o *FindProjectUsageParams) WithCreatedAfter(createdAfter *strfmt.DateTime) *FindProjectUsageParams {
	o.SetCreatedAfter(createdAfter)
	return o
}

// SetCreatedAfter adds the createdAfter to the find project usage params
func (o *FindProjectUsageParams) SetCreatedAfter(createdAfter *strfmt.DateTime) {
	o.CreatedAfter = createdAfter
}

// WithCreatedBefore adds the createdBefore to the find project usage params
func (o *FindProjectUsageParams) WithCreatedBefore(createdBefore *strfmt.DateTime) *FindProjectUsageParams {
	o.SetCreatedBefore(createdBefore)
	return o
}

// SetCreatedBefore adds the createdBefore to the find project usage params
func (o *FindProjectUsageParams) SetCreatedBefore(createdBefore *strfmt.DateTime) {
	o.CreatedBefore = createdBefore
}

// WithID adds the id to the find project usage params
func (o *FindProjectUsageParams) WithID(id strfmt.UUID) *FindProjectUsageParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the find project usage params
func (o *FindProjectUsageParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *FindProjectUsageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CreatedAfter != nil {

		// query param created[after]
		var qrCreatedAfter strfmt.DateTime
		if o.CreatedAfter != nil {
			qrCreatedAfter = *o.CreatedAfter
		}
		qCreatedAfter := qrCreatedAfter.String()
		if qCreatedAfter != "" {
			if err := r.SetQueryParam("created[after]", qCreatedAfter); err != nil {
				return err
			}
		}

	}

	if o.CreatedBefore != nil {

		// query param created[before]
		var qrCreatedBefore strfmt.DateTime
		if o.CreatedBefore != nil {
			qrCreatedBefore = *o.CreatedBefore
		}
		qCreatedBefore := qrCreatedBefore.String()
		if qCreatedBefore != "" {
			if err := r.SetQueryParam("created[before]", qCreatedBefore); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
