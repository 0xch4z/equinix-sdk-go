// Code generated by go-swagger; DO NOT EDIT.

package vpn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindCurrentUserVPNConfigReader is a Reader for the FindCurrentUserVPNConfig structure.
type FindCurrentUserVPNConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindCurrentUserVPNConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindCurrentUserVPNConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindCurrentUserVPNConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewFindCurrentUserVPNConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindCurrentUserVPNConfigOK creates a FindCurrentUserVPNConfigOK with default headers values
func NewFindCurrentUserVPNConfigOK() *FindCurrentUserVPNConfigOK {
	return &FindCurrentUserVPNConfigOK{}
}

/*FindCurrentUserVPNConfigOK handles this case with default header values.

ok
*/
type FindCurrentUserVPNConfigOK struct {
	Payload *types.VPNConfig
}

func (o *FindCurrentUserVPNConfigOK) Error() string {
	return fmt.Sprintf("[GET /user/vpn][%d] findCurrentUserVpnConfigOK  %+v", 200, o.Payload)
}

func (o *FindCurrentUserVPNConfigOK) GetPayload() *types.VPNConfig {
	return o.Payload
}

func (o *FindCurrentUserVPNConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.VPNConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindCurrentUserVPNConfigUnauthorized creates a FindCurrentUserVPNConfigUnauthorized with default headers values
func NewFindCurrentUserVPNConfigUnauthorized() *FindCurrentUserVPNConfigUnauthorized {
	return &FindCurrentUserVPNConfigUnauthorized{}
}

/*FindCurrentUserVPNConfigUnauthorized handles this case with default header values.

unauthorized
*/
type FindCurrentUserVPNConfigUnauthorized struct {
}

func (o *FindCurrentUserVPNConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/vpn][%d] findCurrentUserVpnConfigUnauthorized ", 401)
}

func (o *FindCurrentUserVPNConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindCurrentUserVPNConfigUnprocessableEntity creates a FindCurrentUserVPNConfigUnprocessableEntity with default headers values
func NewFindCurrentUserVPNConfigUnprocessableEntity() *FindCurrentUserVPNConfigUnprocessableEntity {
	return &FindCurrentUserVPNConfigUnprocessableEntity{}
}

/*FindCurrentUserVPNConfigUnprocessableEntity handles this case with default header values.

unprocessable entity
*/
type FindCurrentUserVPNConfigUnprocessableEntity struct {
}

func (o *FindCurrentUserVPNConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /user/vpn][%d] findCurrentUserVpnConfigUnprocessableEntity ", 422)
}

func (o *FindCurrentUserVPNConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
