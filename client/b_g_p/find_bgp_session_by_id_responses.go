// Code generated by go-swagger; DO NOT EDIT.

package b_g_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/models"
)

// FindBgpSessionByIDReader is a Reader for the FindBgpSessionByID structure.
type FindBgpSessionByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindBgpSessionByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindBgpSessionByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindBgpSessionByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindBgpSessionByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindBgpSessionByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindBgpSessionByIDOK creates a FindBgpSessionByIDOK with default headers values
func NewFindBgpSessionByIDOK() *FindBgpSessionByIDOK {
	return &FindBgpSessionByIDOK{}
}

/*FindBgpSessionByIDOK handles this case with default header values.

ok
*/
type FindBgpSessionByIDOK struct {
	Payload *models.BgpSession
}

func (o *FindBgpSessionByIDOK) Error() string {
	return fmt.Sprintf("[GET /bgp/sessions/{id}][%d] findBgpSessionByIdOK  %+v", 200, o.Payload)
}

func (o *FindBgpSessionByIDOK) GetPayload() *models.BgpSession {
	return o.Payload
}

func (o *FindBgpSessionByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BgpSession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindBgpSessionByIDUnauthorized creates a FindBgpSessionByIDUnauthorized with default headers values
func NewFindBgpSessionByIDUnauthorized() *FindBgpSessionByIDUnauthorized {
	return &FindBgpSessionByIDUnauthorized{}
}

/*FindBgpSessionByIDUnauthorized handles this case with default header values.

unauthorized
*/
type FindBgpSessionByIDUnauthorized struct {
}

func (o *FindBgpSessionByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bgp/sessions/{id}][%d] findBgpSessionByIdUnauthorized ", 401)
}

func (o *FindBgpSessionByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindBgpSessionByIDForbidden creates a FindBgpSessionByIDForbidden with default headers values
func NewFindBgpSessionByIDForbidden() *FindBgpSessionByIDForbidden {
	return &FindBgpSessionByIDForbidden{}
}

/*FindBgpSessionByIDForbidden handles this case with default header values.

forbidden
*/
type FindBgpSessionByIDForbidden struct {
}

func (o *FindBgpSessionByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /bgp/sessions/{id}][%d] findBgpSessionByIdForbidden ", 403)
}

func (o *FindBgpSessionByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindBgpSessionByIDNotFound creates a FindBgpSessionByIDNotFound with default headers values
func NewFindBgpSessionByIDNotFound() *FindBgpSessionByIDNotFound {
	return &FindBgpSessionByIDNotFound{}
}

/*FindBgpSessionByIDNotFound handles this case with default header values.

not found
*/
type FindBgpSessionByIDNotFound struct {
}

func (o *FindBgpSessionByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /bgp/sessions/{id}][%d] findBgpSessionByIdNotFound ", 404)
}

func (o *FindBgpSessionByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
