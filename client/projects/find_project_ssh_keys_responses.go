// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindProjectSSHKeysReader is a Reader for the FindProjectSSHKeys structure.
type FindProjectSSHKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindProjectSSHKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindProjectSSHKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindProjectSSHKeysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindProjectSSHKeysOK creates a FindProjectSSHKeysOK with default headers values
func NewFindProjectSSHKeysOK() *FindProjectSSHKeysOK {
	return &FindProjectSSHKeysOK{}
}

/* FindProjectSSHKeysOK describes a response with status code 200, with default header values.

ok
*/
type FindProjectSSHKeysOK struct {
	Payload *types.SSHKeyList
}

func (o *FindProjectSSHKeysOK) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/ssh-keys][%d] findProjectSshKeysOK  %+v", 200, o.Payload)
}
func (o *FindProjectSSHKeysOK) GetPayload() *types.SSHKeyList {
	return o.Payload
}

func (o *FindProjectSSHKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.SSHKeyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindProjectSSHKeysUnauthorized creates a FindProjectSSHKeysUnauthorized with default headers values
func NewFindProjectSSHKeysUnauthorized() *FindProjectSSHKeysUnauthorized {
	return &FindProjectSSHKeysUnauthorized{}
}

/* FindProjectSSHKeysUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindProjectSSHKeysUnauthorized struct {
}

func (o *FindProjectSSHKeysUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/ssh-keys][%d] findProjectSshKeysUnauthorized ", 401)
}

func (o *FindProjectSSHKeysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
