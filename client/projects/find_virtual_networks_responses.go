// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindVirtualNetworksReader is a Reader for the FindVirtualNetworks structure.
type FindVirtualNetworksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindVirtualNetworksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindVirtualNetworksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindVirtualNetworksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindVirtualNetworksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindVirtualNetworksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindVirtualNetworksOK creates a FindVirtualNetworksOK with default headers values
func NewFindVirtualNetworksOK() *FindVirtualNetworksOK {
	return &FindVirtualNetworksOK{}
}

/* FindVirtualNetworksOK describes a response with status code 200, with default header values.

ok
*/
type FindVirtualNetworksOK struct {
	Payload *types.VirtualNetworkList
}

func (o *FindVirtualNetworksOK) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/virtual-networks][%d] findVirtualNetworksOK  %+v", 200, o.Payload)
}
func (o *FindVirtualNetworksOK) GetPayload() *types.VirtualNetworkList {
	return o.Payload
}

func (o *FindVirtualNetworksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.VirtualNetworkList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindVirtualNetworksUnauthorized creates a FindVirtualNetworksUnauthorized with default headers values
func NewFindVirtualNetworksUnauthorized() *FindVirtualNetworksUnauthorized {
	return &FindVirtualNetworksUnauthorized{}
}

/* FindVirtualNetworksUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindVirtualNetworksUnauthorized struct {
}

func (o *FindVirtualNetworksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/virtual-networks][%d] findVirtualNetworksUnauthorized ", 401)
}

func (o *FindVirtualNetworksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindVirtualNetworksForbidden creates a FindVirtualNetworksForbidden with default headers values
func NewFindVirtualNetworksForbidden() *FindVirtualNetworksForbidden {
	return &FindVirtualNetworksForbidden{}
}

/* FindVirtualNetworksForbidden describes a response with status code 403, with default header values.

forbidden
*/
type FindVirtualNetworksForbidden struct {
}

func (o *FindVirtualNetworksForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/virtual-networks][%d] findVirtualNetworksForbidden ", 403)
}

func (o *FindVirtualNetworksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindVirtualNetworksNotFound creates a FindVirtualNetworksNotFound with default headers values
func NewFindVirtualNetworksNotFound() *FindVirtualNetworksNotFound {
	return &FindVirtualNetworksNotFound{}
}

/* FindVirtualNetworksNotFound describes a response with status code 404, with default header values.

not found
*/
type FindVirtualNetworksNotFound struct {
}

func (o *FindVirtualNetworksNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/virtual-networks][%d] findVirtualNetworksNotFound ", 404)
}

func (o *FindVirtualNetworksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
