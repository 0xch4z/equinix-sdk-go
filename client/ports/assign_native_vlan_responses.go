// Code generated by go-swagger; DO NOT EDIT.

package ports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/models"
)

// AssignNativeVlanReader is a Reader for the AssignNativeVlan structure.
type AssignNativeVlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignNativeVlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssignNativeVlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAssignNativeVlanUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAssignNativeVlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAssignNativeVlanUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAssignNativeVlanOK creates a AssignNativeVlanOK with default headers values
func NewAssignNativeVlanOK() *AssignNativeVlanOK {
	return &AssignNativeVlanOK{}
}

/*AssignNativeVlanOK handles this case with default header values.

ok
*/
type AssignNativeVlanOK struct {
	Payload *models.Port
}

func (o *AssignNativeVlanOK) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanOK  %+v", 200, o.Payload)
}

func (o *AssignNativeVlanOK) GetPayload() *models.Port {
	return o.Payload
}

func (o *AssignNativeVlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Port)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignNativeVlanUnauthorized creates a AssignNativeVlanUnauthorized with default headers values
func NewAssignNativeVlanUnauthorized() *AssignNativeVlanUnauthorized {
	return &AssignNativeVlanUnauthorized{}
}

/*AssignNativeVlanUnauthorized handles this case with default header values.

unauthorized
*/
type AssignNativeVlanUnauthorized struct {
}

func (o *AssignNativeVlanUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanUnauthorized ", 401)
}

func (o *AssignNativeVlanUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignNativeVlanNotFound creates a AssignNativeVlanNotFound with default headers values
func NewAssignNativeVlanNotFound() *AssignNativeVlanNotFound {
	return &AssignNativeVlanNotFound{}
}

/*AssignNativeVlanNotFound handles this case with default header values.

not found
*/
type AssignNativeVlanNotFound struct {
}

func (o *AssignNativeVlanNotFound) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanNotFound ", 404)
}

func (o *AssignNativeVlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignNativeVlanUnprocessableEntity creates a AssignNativeVlanUnprocessableEntity with default headers values
func NewAssignNativeVlanUnprocessableEntity() *AssignNativeVlanUnprocessableEntity {
	return &AssignNativeVlanUnprocessableEntity{}
}

/*AssignNativeVlanUnprocessableEntity handles this case with default header values.

unprocessable entity
*/
type AssignNativeVlanUnprocessableEntity struct {
}

func (o *AssignNativeVlanUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanUnprocessableEntity ", 422)
}

func (o *AssignNativeVlanUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
