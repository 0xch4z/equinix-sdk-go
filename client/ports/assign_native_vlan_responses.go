// Code generated by go-swagger; DO NOT EDIT.

package ports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// AssignNativeVLANReader is a Reader for the AssignNativeVLAN structure.
type AssignNativeVLANReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignNativeVLANReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssignNativeVLANOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAssignNativeVLANUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAssignNativeVLANNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAssignNativeVLANUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAssignNativeVLANOK creates a AssignNativeVLANOK with default headers values
func NewAssignNativeVLANOK() *AssignNativeVLANOK {
	return &AssignNativeVLANOK{}
}

/* AssignNativeVLANOK describes a response with status code 200, with default header values.

ok
*/
type AssignNativeVLANOK struct {
	Payload *types.Port
}

func (o *AssignNativeVLANOK) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanOK  %+v", 200, o.Payload)
}
func (o *AssignNativeVLANOK) GetPayload() *types.Port {
	return o.Payload
}

func (o *AssignNativeVLANOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.Port)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignNativeVLANUnauthorized creates a AssignNativeVLANUnauthorized with default headers values
func NewAssignNativeVLANUnauthorized() *AssignNativeVLANUnauthorized {
	return &AssignNativeVLANUnauthorized{}
}

/* AssignNativeVLANUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AssignNativeVLANUnauthorized struct {
}

func (o *AssignNativeVLANUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanUnauthorized ", 401)
}

func (o *AssignNativeVLANUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignNativeVLANNotFound creates a AssignNativeVLANNotFound with default headers values
func NewAssignNativeVLANNotFound() *AssignNativeVLANNotFound {
	return &AssignNativeVLANNotFound{}
}

/* AssignNativeVLANNotFound describes a response with status code 404, with default header values.

not found
*/
type AssignNativeVLANNotFound struct {
}

func (o *AssignNativeVLANNotFound) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanNotFound ", 404)
}

func (o *AssignNativeVLANNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssignNativeVLANUnprocessableEntity creates a AssignNativeVLANUnprocessableEntity with default headers values
func NewAssignNativeVLANUnprocessableEntity() *AssignNativeVLANUnprocessableEntity {
	return &AssignNativeVLANUnprocessableEntity{}
}

/* AssignNativeVLANUnprocessableEntity describes a response with status code 422, with default header values.

unprocessable entity
*/
type AssignNativeVLANUnprocessableEntity struct {
}

func (o *AssignNativeVLANUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /ports/{id}/native-vlan][%d] assignNativeVlanUnprocessableEntity ", 422)
}

func (o *AssignNativeVLANUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
