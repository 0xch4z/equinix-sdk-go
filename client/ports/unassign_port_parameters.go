// Code generated by go-swagger; DO NOT EDIT.

package ports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// NewUnassignPortParams creates a new UnassignPortParams object
// with the default values initialized.
func NewUnassignPortParams() *UnassignPortParams {
	var ()
	return &UnassignPortParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUnassignPortParamsWithTimeout creates a new UnassignPortParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUnassignPortParamsWithTimeout(timeout time.Duration) *UnassignPortParams {
	var ()
	return &UnassignPortParams{

		timeout: timeout,
	}
}

// NewUnassignPortParamsWithContext creates a new UnassignPortParams object
// with the default values initialized, and the ability to set a context for a request
func NewUnassignPortParamsWithContext(ctx context.Context) *UnassignPortParams {
	var ()
	return &UnassignPortParams{

		Context: ctx,
	}
}

// NewUnassignPortParamsWithHTTPClient creates a new UnassignPortParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUnassignPortParamsWithHTTPClient(client *http.Client) *UnassignPortParams {
	var ()
	return &UnassignPortParams{
		HTTPClient: client,
	}
}

/*UnassignPortParams contains all the parameters to send to the API endpoint
for the unassign port operation typically these are written to a http.Request
*/
type UnassignPortParams struct {

	/*ID
	  Port UUID

	*/
	ID strfmt.UUID
	/*Vnid
	  Virtual Network ID

	*/
	Vnid *types.PortAssignInput

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the unassign port params
func (o *UnassignPortParams) WithTimeout(timeout time.Duration) *UnassignPortParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the unassign port params
func (o *UnassignPortParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the unassign port params
func (o *UnassignPortParams) WithContext(ctx context.Context) *UnassignPortParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the unassign port params
func (o *UnassignPortParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the unassign port params
func (o *UnassignPortParams) WithHTTPClient(client *http.Client) *UnassignPortParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the unassign port params
func (o *UnassignPortParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the unassign port params
func (o *UnassignPortParams) WithID(id strfmt.UUID) *UnassignPortParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the unassign port params
func (o *UnassignPortParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WithVnid adds the vnid to the unassign port params
func (o *UnassignPortParams) WithVnid(vnid *types.PortAssignInput) *UnassignPortParams {
	o.SetVnid(vnid)
	return o
}

// SetVnid adds the vnid to the unassign port params
func (o *UnassignPortParams) SetVnid(vnid *types.PortAssignInput) {
	o.Vnid = vnid
}

// WriteToRequest writes these params to a swagger request
func (o *UnassignPortParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if o.Vnid != nil {
		if err := r.SetBodyParam(o.Vnid); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
