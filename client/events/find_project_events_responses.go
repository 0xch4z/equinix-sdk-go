// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindProjectEventsReader is a Reader for the FindProjectEvents structure.
type FindProjectEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindProjectEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindProjectEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindProjectEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindProjectEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindProjectEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindProjectEventsOK creates a FindProjectEventsOK with default headers values
func NewFindProjectEventsOK() *FindProjectEventsOK {
	return &FindProjectEventsOK{}
}

/* FindProjectEventsOK describes a response with status code 200, with default header values.

ok
*/
type FindProjectEventsOK struct {
	Payload *types.EventList
}

func (o *FindProjectEventsOK) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/events][%d] findProjectEventsOK  %+v", 200, o.Payload)
}
func (o *FindProjectEventsOK) GetPayload() *types.EventList {
	return o.Payload
}

func (o *FindProjectEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.EventList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindProjectEventsUnauthorized creates a FindProjectEventsUnauthorized with default headers values
func NewFindProjectEventsUnauthorized() *FindProjectEventsUnauthorized {
	return &FindProjectEventsUnauthorized{}
}

/* FindProjectEventsUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type FindProjectEventsUnauthorized struct {
}

func (o *FindProjectEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/events][%d] findProjectEventsUnauthorized ", 401)
}

func (o *FindProjectEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindProjectEventsForbidden creates a FindProjectEventsForbidden with default headers values
func NewFindProjectEventsForbidden() *FindProjectEventsForbidden {
	return &FindProjectEventsForbidden{}
}

/* FindProjectEventsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type FindProjectEventsForbidden struct {
}

func (o *FindProjectEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/events][%d] findProjectEventsForbidden ", 403)
}

func (o *FindProjectEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindProjectEventsNotFound creates a FindProjectEventsNotFound with default headers values
func NewFindProjectEventsNotFound() *FindProjectEventsNotFound {
	return &FindProjectEventsNotFound{}
}

/* FindProjectEventsNotFound describes a response with status code 404, with default header values.

not found
*/
type FindProjectEventsNotFound struct {
}

func (o *FindProjectEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/events][%d] findProjectEventsNotFound ", 404)
}

func (o *FindProjectEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
