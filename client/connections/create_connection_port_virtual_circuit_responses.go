// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// CreateConnectionPortVirtualCircuitReader is a Reader for the CreateConnectionPortVirtualCircuit structure.
type CreateConnectionPortVirtualCircuitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateConnectionPortVirtualCircuitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateConnectionPortVirtualCircuitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateConnectionPortVirtualCircuitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateConnectionPortVirtualCircuitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateConnectionPortVirtualCircuitOK creates a CreateConnectionPortVirtualCircuitOK with default headers values
func NewCreateConnectionPortVirtualCircuitOK() *CreateConnectionPortVirtualCircuitOK {
	return &CreateConnectionPortVirtualCircuitOK{}
}

/* CreateConnectionPortVirtualCircuitOK describes a response with status code 200, with default header values.

ok
*/
type CreateConnectionPortVirtualCircuitOK struct {
	Payload *types.VirtualCircuitList
}

func (o *CreateConnectionPortVirtualCircuitOK) Error() string {
	return fmt.Sprintf("[POST /connections/{connection_id}/ports/{port_id}/virtual-circuits][%d] createConnectionPortVirtualCircuitOK  %+v", 200, o.Payload)
}
func (o *CreateConnectionPortVirtualCircuitOK) GetPayload() *types.VirtualCircuitList {
	return o.Payload
}

func (o *CreateConnectionPortVirtualCircuitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.VirtualCircuitList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConnectionPortVirtualCircuitForbidden creates a CreateConnectionPortVirtualCircuitForbidden with default headers values
func NewCreateConnectionPortVirtualCircuitForbidden() *CreateConnectionPortVirtualCircuitForbidden {
	return &CreateConnectionPortVirtualCircuitForbidden{}
}

/* CreateConnectionPortVirtualCircuitForbidden describes a response with status code 403, with default header values.

forbidden
*/
type CreateConnectionPortVirtualCircuitForbidden struct {
}

func (o *CreateConnectionPortVirtualCircuitForbidden) Error() string {
	return fmt.Sprintf("[POST /connections/{connection_id}/ports/{port_id}/virtual-circuits][%d] createConnectionPortVirtualCircuitForbidden ", 403)
}

func (o *CreateConnectionPortVirtualCircuitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateConnectionPortVirtualCircuitNotFound creates a CreateConnectionPortVirtualCircuitNotFound with default headers values
func NewCreateConnectionPortVirtualCircuitNotFound() *CreateConnectionPortVirtualCircuitNotFound {
	return &CreateConnectionPortVirtualCircuitNotFound{}
}

/* CreateConnectionPortVirtualCircuitNotFound describes a response with status code 404, with default header values.

not found
*/
type CreateConnectionPortVirtualCircuitNotFound struct {
}

func (o *CreateConnectionPortVirtualCircuitNotFound) Error() string {
	return fmt.Sprintf("[POST /connections/{connection_id}/ports/{port_id}/virtual-circuits][%d] createConnectionPortVirtualCircuitNotFound ", 404)
}

func (o *CreateConnectionPortVirtualCircuitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
