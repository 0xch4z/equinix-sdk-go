// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// ListConnectionPortsReader is a Reader for the ListConnectionPorts structure.
type ListConnectionPortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConnectionPortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConnectionPortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListConnectionPortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListConnectionPortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListConnectionPortsOK creates a ListConnectionPortsOK with default headers values
func NewListConnectionPortsOK() *ListConnectionPortsOK {
	return &ListConnectionPortsOK{}
}

/* ListConnectionPortsOK describes a response with status code 200, with default header values.

ok
*/
type ListConnectionPortsOK struct {
	Payload *types.InterconnectionPortList
}

func (o *ListConnectionPortsOK) Error() string {
	return fmt.Sprintf("[GET /connections/{connection_id}/ports][%d] listConnectionPortsOK  %+v", 200, o.Payload)
}
func (o *ListConnectionPortsOK) GetPayload() *types.InterconnectionPortList {
	return o.Payload
}

func (o *ListConnectionPortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.InterconnectionPortList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConnectionPortsForbidden creates a ListConnectionPortsForbidden with default headers values
func NewListConnectionPortsForbidden() *ListConnectionPortsForbidden {
	return &ListConnectionPortsForbidden{}
}

/* ListConnectionPortsForbidden describes a response with status code 403, with default header values.

forbidden
*/
type ListConnectionPortsForbidden struct {
}

func (o *ListConnectionPortsForbidden) Error() string {
	return fmt.Sprintf("[GET /connections/{connection_id}/ports][%d] listConnectionPortsForbidden ", 403)
}

func (o *ListConnectionPortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConnectionPortsNotFound creates a ListConnectionPortsNotFound with default headers values
func NewListConnectionPortsNotFound() *ListConnectionPortsNotFound {
	return &ListConnectionPortsNotFound{}
}

/* ListConnectionPortsNotFound describes a response with status code 404, with default header values.

not found
*/
type ListConnectionPortsNotFound struct {
}

func (o *ListConnectionPortsNotFound) Error() string {
	return fmt.Sprintf("[GET /connections/{connection_id}/ports][%d] listConnectionPortsNotFound ", 404)
}

func (o *ListConnectionPortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
