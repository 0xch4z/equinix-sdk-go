// Code generated by go-swagger; DO NOT EDIT.

package ip_addresses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// FindIPAddressCustomdataReader is a Reader for the FindIPAddressCustomdata structure.
type FindIPAddressCustomdataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindIPAddressCustomdataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindIPAddressCustomdataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindIPAddressCustomdataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindIPAddressCustomdataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindIPAddressCustomdataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindIPAddressCustomdataOK creates a FindIPAddressCustomdataOK with default headers values
func NewFindIPAddressCustomdataOK() *FindIPAddressCustomdataOK {
	return &FindIPAddressCustomdataOK{}
}

/*FindIPAddressCustomdataOK handles this case with default header values.

ok
*/
type FindIPAddressCustomdataOK struct {
}

func (o *FindIPAddressCustomdataOK) Error() string {
	return fmt.Sprintf("[GET /ips/{id}/customdata][%d] findIpAddressCustomdataOK ", 200)
}

func (o *FindIPAddressCustomdataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindIPAddressCustomdataUnauthorized creates a FindIPAddressCustomdataUnauthorized with default headers values
func NewFindIPAddressCustomdataUnauthorized() *FindIPAddressCustomdataUnauthorized {
	return &FindIPAddressCustomdataUnauthorized{}
}

/*FindIPAddressCustomdataUnauthorized handles this case with default header values.

unauthorized
*/
type FindIPAddressCustomdataUnauthorized struct {
}

func (o *FindIPAddressCustomdataUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ips/{id}/customdata][%d] findIpAddressCustomdataUnauthorized ", 401)
}

func (o *FindIPAddressCustomdataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindIPAddressCustomdataForbidden creates a FindIPAddressCustomdataForbidden with default headers values
func NewFindIPAddressCustomdataForbidden() *FindIPAddressCustomdataForbidden {
	return &FindIPAddressCustomdataForbidden{}
}

/*FindIPAddressCustomdataForbidden handles this case with default header values.

forbidden
*/
type FindIPAddressCustomdataForbidden struct {
}

func (o *FindIPAddressCustomdataForbidden) Error() string {
	return fmt.Sprintf("[GET /ips/{id}/customdata][%d] findIpAddressCustomdataForbidden ", 403)
}

func (o *FindIPAddressCustomdataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindIPAddressCustomdataNotFound creates a FindIPAddressCustomdataNotFound with default headers values
func NewFindIPAddressCustomdataNotFound() *FindIPAddressCustomdataNotFound {
	return &FindIPAddressCustomdataNotFound{}
}

/*FindIPAddressCustomdataNotFound handles this case with default header values.

not found
*/
type FindIPAddressCustomdataNotFound struct {
}

func (o *FindIPAddressCustomdataNotFound) Error() string {
	return fmt.Sprintf("[GET /ips/{id}/customdata][%d] findIpAddressCustomdataNotFound ", 404)
}

func (o *FindIPAddressCustomdataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
