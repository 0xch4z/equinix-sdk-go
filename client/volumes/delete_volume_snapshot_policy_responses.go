// Code generated by go-swagger; DO NOT EDIT.

package volumes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteVolumeSnapshotPolicyReader is a Reader for the DeleteVolumeSnapshotPolicy structure.
type DeleteVolumeSnapshotPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVolumeSnapshotPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteVolumeSnapshotPolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteVolumeSnapshotPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVolumeSnapshotPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVolumeSnapshotPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVolumeSnapshotPolicyNoContent creates a DeleteVolumeSnapshotPolicyNoContent with default headers values
func NewDeleteVolumeSnapshotPolicyNoContent() *DeleteVolumeSnapshotPolicyNoContent {
	return &DeleteVolumeSnapshotPolicyNoContent{}
}

/*DeleteVolumeSnapshotPolicyNoContent handles this case with default header values.

no content
*/
type DeleteVolumeSnapshotPolicyNoContent struct {
}

func (o *DeleteVolumeSnapshotPolicyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /storage/snapshot-policies/{id}][%d] deleteVolumeSnapshotPolicyNoContent ", 204)
}

func (o *DeleteVolumeSnapshotPolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVolumeSnapshotPolicyUnauthorized creates a DeleteVolumeSnapshotPolicyUnauthorized with default headers values
func NewDeleteVolumeSnapshotPolicyUnauthorized() *DeleteVolumeSnapshotPolicyUnauthorized {
	return &DeleteVolumeSnapshotPolicyUnauthorized{}
}

/*DeleteVolumeSnapshotPolicyUnauthorized handles this case with default header values.

unauthorized
*/
type DeleteVolumeSnapshotPolicyUnauthorized struct {
}

func (o *DeleteVolumeSnapshotPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /storage/snapshot-policies/{id}][%d] deleteVolumeSnapshotPolicyUnauthorized ", 401)
}

func (o *DeleteVolumeSnapshotPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVolumeSnapshotPolicyForbidden creates a DeleteVolumeSnapshotPolicyForbidden with default headers values
func NewDeleteVolumeSnapshotPolicyForbidden() *DeleteVolumeSnapshotPolicyForbidden {
	return &DeleteVolumeSnapshotPolicyForbidden{}
}

/*DeleteVolumeSnapshotPolicyForbidden handles this case with default header values.

forbidden
*/
type DeleteVolumeSnapshotPolicyForbidden struct {
}

func (o *DeleteVolumeSnapshotPolicyForbidden) Error() string {
	return fmt.Sprintf("[DELETE /storage/snapshot-policies/{id}][%d] deleteVolumeSnapshotPolicyForbidden ", 403)
}

func (o *DeleteVolumeSnapshotPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVolumeSnapshotPolicyNotFound creates a DeleteVolumeSnapshotPolicyNotFound with default headers values
func NewDeleteVolumeSnapshotPolicyNotFound() *DeleteVolumeSnapshotPolicyNotFound {
	return &DeleteVolumeSnapshotPolicyNotFound{}
}

/*DeleteVolumeSnapshotPolicyNotFound handles this case with default header values.

not found
*/
type DeleteVolumeSnapshotPolicyNotFound struct {
}

func (o *DeleteVolumeSnapshotPolicyNotFound) Error() string {
	return fmt.Sprintf("[DELETE /storage/snapshot-policies/{id}][%d] deleteVolumeSnapshotPolicyNotFound ", 404)
}

func (o *DeleteVolumeSnapshotPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
