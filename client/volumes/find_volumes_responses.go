// Code generated by go-swagger; DO NOT EDIT.

package volumes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/models"
)

// FindVolumesReader is a Reader for the FindVolumes structure.
type FindVolumesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindVolumesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindVolumesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindVolumesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindVolumesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindVolumesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindVolumesOK creates a FindVolumesOK with default headers values
func NewFindVolumesOK() *FindVolumesOK {
	return &FindVolumesOK{}
}

/*FindVolumesOK handles this case with default header values.

ok
*/
type FindVolumesOK struct {
	Payload *models.VolumeList
}

func (o *FindVolumesOK) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/storage][%d] findVolumesOK  %+v", 200, o.Payload)
}

func (o *FindVolumesOK) GetPayload() *models.VolumeList {
	return o.Payload
}

func (o *FindVolumesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindVolumesUnauthorized creates a FindVolumesUnauthorized with default headers values
func NewFindVolumesUnauthorized() *FindVolumesUnauthorized {
	return &FindVolumesUnauthorized{}
}

/*FindVolumesUnauthorized handles this case with default header values.

unauthorized
*/
type FindVolumesUnauthorized struct {
}

func (o *FindVolumesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/storage][%d] findVolumesUnauthorized ", 401)
}

func (o *FindVolumesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindVolumesForbidden creates a FindVolumesForbidden with default headers values
func NewFindVolumesForbidden() *FindVolumesForbidden {
	return &FindVolumesForbidden{}
}

/*FindVolumesForbidden handles this case with default header values.

forbidden
*/
type FindVolumesForbidden struct {
}

func (o *FindVolumesForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/storage][%d] findVolumesForbidden ", 403)
}

func (o *FindVolumesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindVolumesNotFound creates a FindVolumesNotFound with default headers values
func NewFindVolumesNotFound() *FindVolumesNotFound {
	return &FindVolumesNotFound{}
}

/*FindVolumesNotFound handles this case with default header values.

not found
*/
type FindVolumesNotFound struct {
}

func (o *FindVolumesNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{id}/storage][%d] findVolumesNotFound ", 404)
}

func (o *FindVolumesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
