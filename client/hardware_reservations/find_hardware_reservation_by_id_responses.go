// Code generated by go-swagger; DO NOT EDIT.

package hardware_reservations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/models"
)

// FindHardwareReservationByIDReader is a Reader for the FindHardwareReservationByID structure.
type FindHardwareReservationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindHardwareReservationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindHardwareReservationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindHardwareReservationByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindHardwareReservationByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindHardwareReservationByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindHardwareReservationByIDOK creates a FindHardwareReservationByIDOK with default headers values
func NewFindHardwareReservationByIDOK() *FindHardwareReservationByIDOK {
	return &FindHardwareReservationByIDOK{}
}

/*FindHardwareReservationByIDOK handles this case with default header values.

ok
*/
type FindHardwareReservationByIDOK struct {
	Payload *models.Device
}

func (o *FindHardwareReservationByIDOK) Error() string {
	return fmt.Sprintf("[GET /hardware-reservations/{id}][%d] findHardwareReservationByIdOK  %+v", 200, o.Payload)
}

func (o *FindHardwareReservationByIDOK) GetPayload() *models.Device {
	return o.Payload
}

func (o *FindHardwareReservationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Device)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindHardwareReservationByIDUnauthorized creates a FindHardwareReservationByIDUnauthorized with default headers values
func NewFindHardwareReservationByIDUnauthorized() *FindHardwareReservationByIDUnauthorized {
	return &FindHardwareReservationByIDUnauthorized{}
}

/*FindHardwareReservationByIDUnauthorized handles this case with default header values.

unauthorized
*/
type FindHardwareReservationByIDUnauthorized struct {
}

func (o *FindHardwareReservationByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /hardware-reservations/{id}][%d] findHardwareReservationByIdUnauthorized ", 401)
}

func (o *FindHardwareReservationByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindHardwareReservationByIDForbidden creates a FindHardwareReservationByIDForbidden with default headers values
func NewFindHardwareReservationByIDForbidden() *FindHardwareReservationByIDForbidden {
	return &FindHardwareReservationByIDForbidden{}
}

/*FindHardwareReservationByIDForbidden handles this case with default header values.

forbidden
*/
type FindHardwareReservationByIDForbidden struct {
}

func (o *FindHardwareReservationByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /hardware-reservations/{id}][%d] findHardwareReservationByIdForbidden ", 403)
}

func (o *FindHardwareReservationByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindHardwareReservationByIDNotFound creates a FindHardwareReservationByIDNotFound with default headers values
func NewFindHardwareReservationByIDNotFound() *FindHardwareReservationByIDNotFound {
	return &FindHardwareReservationByIDNotFound{}
}

/*FindHardwareReservationByIDNotFound handles this case with default header values.

not found
*/
type FindHardwareReservationByIDNotFound struct {
}

func (o *FindHardwareReservationByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /hardware-reservations/{id}][%d] findHardwareReservationByIdNotFound ", 404)
}

func (o *FindHardwareReservationByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
