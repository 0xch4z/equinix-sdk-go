// Code generated by go-swagger; DO NOT EDIT.

package facilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/t0mk/gometal/types"
)

// FindFacilitiesReader is a Reader for the FindFacilities structure.
type FindFacilitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindFacilitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindFacilitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindFacilitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindFacilitiesOK creates a FindFacilitiesOK with default headers values
func NewFindFacilitiesOK() *FindFacilitiesOK {
	return &FindFacilitiesOK{}
}

/*FindFacilitiesOK handles this case with default header values.

ok
*/
type FindFacilitiesOK struct {
	Payload *types.FacilityList
}

func (o *FindFacilitiesOK) Error() string {
	return fmt.Sprintf("[GET /facilities][%d] findFacilitiesOK  %+v", 200, o.Payload)
}

func (o *FindFacilitiesOK) GetPayload() *types.FacilityList {
	return o.Payload
}

func (o *FindFacilitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.FacilityList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindFacilitiesUnauthorized creates a FindFacilitiesUnauthorized with default headers values
func NewFindFacilitiesUnauthorized() *FindFacilitiesUnauthorized {
	return &FindFacilitiesUnauthorized{}
}

/*FindFacilitiesUnauthorized handles this case with default header values.

unauthorized
*/
type FindFacilitiesUnauthorized struct {
}

func (o *FindFacilitiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /facilities][%d] findFacilitiesUnauthorized ", 401)
}

func (o *FindFacilitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
